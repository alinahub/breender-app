{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SubscriptionPageView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, Paper } from '@material-ui/core';\nimport SubscriptionPlanComponent from '../components/premium/SubscriptionPlanComponent';\nimport { withRouter } from 'react-router-dom';\nimport { getUsersInfo } from 'redux/actions';\nimport pets from '../images/pets.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  premiumDescription: {\n    padding: theme.spacing(8, 0, 6)\n  },\n  title: theme.typography.h3,\n  description: theme.typography.h6,\n  paper: {\n    width: '1250px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(5)\n  },\n  container: {\n    position: 'relative',\n    paddingTop: '172px'\n  },\n  image: {\n    position: 'absolute',\n    left: 'calc(50% - 350px)',\n    top: '0%'\n  },\n  modal: {\n    borderRadius: '10px'\n  },\n  plans: {\n    paddingBottom: '60px',\n    paddingRight: '20px',\n    paddingLeft: '20px'\n  }\n}));\n\nfunction SubscriptionPageView(props) {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const userInfo = useSelector(state => state.user.userInfo);\n  const [open, setOpen] = React.useState(false);\n\n  const loadUser = async () => {\n    // trigger the redux action getUsersInfo\n    props.dispatch(getUsersInfo(user.user.id));\n  };\n\n  useEffect(() => {\n    if (user.user) loadUser();\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSignUp = v => {\n    //pass subscription plan to sign up page\n    props.history.push({\n      pathname: '/register',\n      subscriptionPlan: v\n    });\n  };\n\n  const onChangePlan = v => {\n    //pass subscription plan to sign up page\n    if (userInfo.subscriptionPlan === 'free' && v === 'premium') {\n      console.log('want to change');\n      props.history.push('/pricing/changePlan');\n    } else if (userInfo.subscriptionPlan === 'premium' && v === 'free') {\n      handleOpen();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: pets,\n      alt: \"pets\",\n      width: \"700\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      style: {\n        borderRadius: 25\n      },\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        component: \"main\",\n        className: classes.premiumDescription,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Get Access to All Features!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.description,\n          align: \"center\",\n          component: \"p\",\n          children: \"Find the best breeding partner for your favourite pet in just few clicks: all you need to do is to subscribe to our Premium Plan, search for a perfect match and safely pay for breeding through our website.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        component: \"main\",\n        className: classes.plans,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          alignItems: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(SubscriptionPlanComponent, {\n            onClick: user.userInfo ? onChangePlan : onSignUp,\n            subscriptionPlan: user.userInfo ? userInfo.subscriptionPlan : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dialog, {\n          onClose: handleClose,\n          \"aria-labelledby\": \"customized-dialog-title\",\n          open: open,\n          style: {\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"customized-dialog-title\",\n            onClose: handleClose,\n            children: \"Switching from Premium to Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"After your Premium Subscription is completed your plan will be automatically switched to Basic.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              autoFocus: true,\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubscriptionPageView, \"3fuuh02Fe3FVpMswqKXcq9OoUz4=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = SubscriptionPageView;\nexport default connect()(withRouter(SubscriptionPageView));\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscriptionPageView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SubscriptionPageView.js"],"names":["React","useEffect","connect","useSelector","Grid","Typography","makeStyles","Button","Container","Dialog","DialogActions","DialogContent","DialogTitle","Paper","SubscriptionPlanComponent","withRouter","getUsersInfo","pets","useStyles","theme","premiumDescription","padding","spacing","title","typography","h3","description","h6","paper","width","marginLeft","marginRight","marginTop","marginBottom","container","position","paddingTop","image","left","top","modal","borderRadius","plans","paddingBottom","paddingRight","paddingLeft","SubscriptionPageView","props","classes","user","state","userInfo","open","setOpen","useState","loadUser","dispatch","id","handleOpen","handleClose","onSignUp","v","history","push","pathname","subscriptionPlan","onChangePlan","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, Paper } from '@material-ui/core';\nimport SubscriptionPlanComponent from '../components/premium/SubscriptionPlanComponent';\nimport { withRouter } from 'react-router-dom';\nimport { getUsersInfo } from 'redux/actions';\nimport pets from '../images/pets.png';\n\nconst useStyles = makeStyles((theme) => ({\n    premiumDescription: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    title: theme.typography.h3,\n    description: theme.typography.h6,\n    paper: {\n        width: '1250px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(5),\n    },\n    container: {\n        position: 'relative',\n        paddingTop: '172px',\n    },\n    image: {\n        position: 'absolute',\n        left: 'calc(50% - 350px)',\n        top: '0%',\n    },\n    modal: {\n        borderRadius: '10px',\n    },\n    plans: {\n        paddingBottom: '60px',\n        paddingRight: '20px',\n        paddingLeft: '20px',\n    },\n}));\n\nfunction SubscriptionPageView(props) {\n    const classes = useStyles();\n\n    const user = useSelector((state) => state.user);\n    const userInfo = useSelector((state) => state.user.userInfo);\n    const [open, setOpen] = React.useState(false);\n\n    const loadUser = async () => {\n        // trigger the redux action getUsersInfo\n        props.dispatch(getUsersInfo(user.user.id));\n    };\n\n    useEffect(() => {\n        if (user.user) loadUser();\n    }, []);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const onSignUp = (v) => {\n        //pass subscription plan to sign up page\n        props.history.push({ pathname: '/register', subscriptionPlan: v });\n    };\n\n    const onChangePlan = (v) => {\n        //pass subscription plan to sign up page\n        if (userInfo.subscriptionPlan === 'free' && v === 'premium') {\n            console.log('want to change');\n            props.history.push('/pricing/changePlan');\n        } else if (userInfo.subscriptionPlan === 'premium' && v === 'free') {\n            handleOpen();\n        }\n    };\n\n    return (\n        <div className={classes.container}>\n            <img src={pets} alt=\"pets\" width=\"700\" className={classes.image} />\n\n            <Paper className={classes.paper} style={{ borderRadius: 25 }}>\n                <Container maxWidth=\"sm\" component=\"main\" className={classes.premiumDescription}>\n                    <Typography className={classes.title} align=\"center\" gutterBottom>\n                        Get Access to All Features!\n                    </Typography>\n                    <Typography className={classes.description} align=\"center\" component=\"p\">\n                        Find the best breeding partner for your favourite pet in just few clicks: all you need to do is to subscribe to our Premium Plan, search for a perfect match and safely pay for\n                        breeding through our website.\n                    </Typography>\n                </Container>\n                <Container maxWidth=\"md\" component=\"main\" className={classes.plans}>\n                    <Grid container spacing={5} alignItems=\"flex-end\">\n                        <SubscriptionPlanComponent onClick={user.userInfo ? onChangePlan : onSignUp} subscriptionPlan={user.userInfo ? userInfo.subscriptionPlan : ''} />\n                    </Grid>\n                </Container>\n\n                <div>\n                    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} style={{ borderRadius: '10px' }}>\n                        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                            Switching from Premium to Basic\n                        </DialogTitle>\n                        <DialogContent dividers>\n                            <Typography gutterBottom>After your Premium Subscription is completed your plan will be automatically switched to Basic.</Typography>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button autoFocus onClick={handleClose} color=\"primary\">\n                                OK\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </Paper>\n        </div>\n    );\n}\nexport default connect()(withRouter(SubscriptionPageView));\n"]},"metadata":{},"sourceType":"module"}