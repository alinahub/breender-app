{"ast":null,"code":"import HttpService from './HttpService';\nexport default class UserService {\n  static baseURL() {\n    return 'http://localhost:4000/auth';\n  }\n\n  static register(email, user, pass, city, isAdmin) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(`${UserService.baseURL()}/register`, {\n        username: user,\n        password: pass,\n        isAdmin: isAdmin,\n        email: email,\n        city: city\n      }, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static confirmEmail(email, token) {\n    return new Promise((resolve, reject) => {\n      HttpService.get(`${UserService.baseURL()}/confirmation/${email}/${token}`, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static login(user, pass) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(`${UserService.baseURL()}/login`, {\n        username: user,\n        password: pass\n      }, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static logout() {\n    window.localStorage.removeItem('jwtToken');\n  }\n\n}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/UserService.js"],"names":["HttpService","UserService","baseURL","register","email","user","pass","city","isAdmin","Promise","resolve","reject","post","username","password","data","textStatus","confirmEmail","token","get","login","logout","window","localStorage","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AACf,SAAPC,OAAO,GAAG;AACb,WAAO,4BAAP;AACH;;AAEc,SAARC,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AAC9C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCX,MAAAA,WAAW,CAACY,IAAZ,CACK,GAAEX,WAAW,CAACC,OAAZ,EAAsB,WAD7B,EAEI;AACIW,QAAAA,QAAQ,EAAER,IADd;AAEIS,QAAAA,QAAQ,EAAER,IAFd;AAGIE,QAAAA,OAAO,EAAEA,OAHb;AAIIJ,QAAAA,KAAK,EAAEA,KAJX;AAKIG,QAAAA,IAAI,EAAEA;AALV,OAFJ,EASI,UAAUQ,IAAV,EAAgB;AACZL,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH,OAXL,EAYI,UAAUC,UAAV,EAAsB;AAClBL,QAAAA,MAAM,CAACK,UAAD,CAAN;AACH,OAdL;AAgBH,KAjBM,CAAP;AAkBH;;AAEkB,SAAZC,YAAY,CAACb,KAAD,EAAQc,KAAR,EAAe;AAC9B,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCX,MAAAA,WAAW,CAACmB,GAAZ,CACK,GAAElB,WAAW,CAACC,OAAZ,EAAsB,iBAAgBE,KAAM,IAAGc,KAAM,EAD5D,EAEI,UAAUH,IAAV,EAAgB;AACZL,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH,OAJL,EAKI,UAAUC,UAAV,EAAsB;AAClBL,QAAAA,MAAM,CAACK,UAAD,CAAN;AACH,OAPL;AASH,KAVM,CAAP;AAWH;;AAEW,SAALI,KAAK,CAACf,IAAD,EAAOC,IAAP,EAAa;AACrB,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCX,MAAAA,WAAW,CAACY,IAAZ,CACK,GAAEX,WAAW,CAACC,OAAZ,EAAsB,QAD7B,EAEI;AACIW,QAAAA,QAAQ,EAAER,IADd;AAEIS,QAAAA,QAAQ,EAAER;AAFd,OAFJ,EAMI,UAAUS,IAAV,EAAgB;AACZL,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH,OARL,EASI,UAAUC,UAAV,EAAsB;AAClBL,QAAAA,MAAM,CAACK,UAAD,CAAN;AACH,OAXL;AAaH,KAdM,CAAP;AAeH;;AAEY,SAANK,MAAM,GAAG;AACZC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,UAA/B;AACH;;AA5D4B","sourcesContent":["import HttpService from './HttpService';\n\nexport default class UserService {\n    static baseURL() {\n        return 'http://localhost:4000/auth';\n    }\n\n    static register(email, user, pass, city, isAdmin) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/register`,\n                {\n                    username: user,\n                    password: pass,\n                    isAdmin: isAdmin,\n                    email: email,\n                    city: city,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static confirmEmail(email, token) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${UserService.baseURL()}/confirmation/${email}/${token}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static login(user, pass) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/login`,\n                {\n                    username: user,\n                    password: pass,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static logout() {\n        window.localStorage.removeItem('jwtToken');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}