{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import HttpService from'./HttpService';import axios from'axios';var UserService=/*#__PURE__*/function(){function UserService(){_classCallCheck(this,UserService);}_createClass(UserService,null,[{key:\"baseURL\",value:function baseURL(){return'http://localhost:4000/auth';}},{key:\"baseUserURL\",value:function baseUserURL(){return'http://localhost:4000/user';}},{key:\"setToken\",value:function setToken(){var token=localStorage.getItem('jwtToken');axios.defaults.headers.common['Authorization']='Bearer '+token;}},{key:\"register\",value:function register(email,user,pass,city,province,isAdmin,subscriptionPlan,paymentPlan,paymentMethod){return new Promise(function(resolve,reject){HttpService.post(\"\".concat(UserService.baseURL(),\"/register\"),{username:user,password:pass,isAdmin:isAdmin,email:email,city:city,province:province,subscriptionPlan:subscriptionPlan,paymentPlan:paymentPlan,paymentMethod:paymentMethod},function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"checkUser\",value:function checkUser(email,username,isAdmin){return new Promise(function(resolve,reject){HttpService.get(\"\".concat(UserService.baseURL(),\"/checkUser/\").concat(email,\"/\").concat(username,\"/\").concat(isAdmin),function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"confirmEmail\",value:function confirmEmail(email,token){return new Promise(function(resolve,reject){HttpService.get(\"\".concat(UserService.baseURL(),\"/confirmation/\").concat(email,\"/\").concat(token),function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"login\",value:function login(user,pass){return new Promise(function(resolve,reject){HttpService.post(\"\".concat(UserService.baseURL(),\"/login\"),{username:user,password:pass},function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"logout\",value:function logout(){window.localStorage.removeItem('jwtToken');}},{key:\"update\",value:function update(id,subscriptionPlan,paymentPlan,paymentMethod){return new Promise(function(resolve,reject){HttpService.post(\"\".concat(UserService.baseURL(),\"/update\"),{id:id,subscriptionPlan:subscriptionPlan,paymentPlan:paymentPlan,paymentMethod:paymentMethod},function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"getUsersInfo\",value:function getUsersInfo(id){return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve,reject){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:HttpService.get(\"\".concat(UserService.baseUserURL(),\"/\").concat(id),function(data){if(data!==undefined||Object.keys(data).length!==0){resolve(data);}else{reject(\"Error while retrieving user\");}},function(textStatus){reject(textStatus);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());}},{key:\"updateUser\",value:function updateUser(user){var _this=this;return new Promise(function(resolve,reject){HttpService.put(\"\".concat(_this.baseUserURL(),\"/\").concat(user._id),user,function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"getUserPets\",value:function getUserPets(ownerId){var _this2=this;return new Promise(function(resolve,reject){HttpService.get(\"\".concat(_this2.baseUserURL(),\"/pets/\").concat(ownerId),function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"getReviewsOnUser\",value:function getReviewsOnUser(id){var _this3=this;return new Promise(function(resolve,reject){HttpService.get(\"\".concat(_this3.baseUserURL(),\"/\").concat(id,\"/reviews\"),function(data){resolve(data);},function(textStatus){reject(textStatus);});});}},{key:\"addReview\",value:function addReview(review){return new Promise(function(resolve,reject){HttpService.post(\"\".concat(UserService.baseUserURL(),\"/add-review\"),{review:review},function(data){resolve(data);},function(textStatus){reject(textStatus);});});}}]);return UserService;}();export{UserService as default};","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/UserService.js"],"names":["HttpService","axios","UserService","token","localStorage","getItem","defaults","headers","common","email","user","pass","city","province","isAdmin","subscriptionPlan","paymentPlan","paymentMethod","Promise","resolve","reject","post","baseURL","username","password","data","textStatus","get","window","removeItem","id","baseUserURL","undefined","Object","keys","length","put","_id","ownerId","review"],"mappings":"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","sourcesContent":["import HttpService from './HttpService';\nimport axios from 'axios';\n\nexport default class UserService {\n    static baseURL() {\n        return 'http://localhost:4000/auth';\n    }\n    static baseUserURL() {\n        return 'http://localhost:4000/user';\n    }\n\n    static setToken() {\n        const token = localStorage.getItem('jwtToken');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    static register(email, user, pass, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/register`,\n                {\n                    username: user,\n                    password: pass,\n                    isAdmin: isAdmin,\n                    email: email,\n                    city: city,\n                    province: province,\n                    subscriptionPlan: subscriptionPlan,\n                    paymentPlan: paymentPlan,\n                    paymentMethod: paymentMethod,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static checkUser(email, username, isAdmin) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${UserService.baseURL()}/checkUser/${email}/${username}/${isAdmin}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static confirmEmail(email, token) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${UserService.baseURL()}/confirmation/${email}/${token}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static login(user, pass) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/login`,\n                {\n                    username: user,\n                    password: pass,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static logout() {\n        window.localStorage.removeItem('jwtToken');\n    }\n\n    static update(id, subscriptionPlan, paymentPlan, paymentMethod) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/update`,\n                {\n                    id: id,\n                    subscriptionPlan: subscriptionPlan,\n                    paymentPlan: paymentPlan,\n                    paymentMethod: paymentMethod\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getUsersInfo(id) {\n        return new Promise(async (resolve, reject) => {\n            HttpService.get(\n                `${UserService.baseUserURL()}/${id}`,\n                function (data) {\n                    if (data !== undefined || Object.keys(data).length !== 0) {\n                        resolve(data);\n                    } else {\n                        reject(\"Error while retrieving user\");\n                    }\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static updateUser(user) {\n        return new Promise((resolve, reject) => {\n            HttpService.put(\n                `${this.baseUserURL()}/${user._id}`,\n                user,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getUserPets(ownerId) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${this.baseUserURL()}/pets/${ownerId}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getReviewsOnUser(id) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${this.baseUserURL()}/${id}/reviews`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static addReview(review) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseUserURL()}/add-review`,\n                {\n                    review: review\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}