{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/messenger/MessageComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { format } from 'timeago.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { Grid, Paper, Divider, Typography, ListItem, ListItemAvatar, ListItemText, Avatar } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: '80%',\n    alignSelf: 'center'\n  }\n}));\n\nfunction MessageComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const userId = useSelector(state => state.user.user.id);\n  const scrollRef = useRef();\n\n  function getAlignment() {\n    return props.message.sender === userId ? 'right' : 'left';\n  }\n\n  function getTimestamp() {\n    return props.message.createdAt ? format(props.message.createdAt) : 'just now';\n  }\n\n  const isToday = someDate => {\n    const today = new Date();\n    return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    ref: scrollRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          align: getAlignment(),\n          primary: props.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          align: getAlignment(),\n          secondary: getTimestamp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, props.message.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessageComponent, \"QVOvoghj0ERgKJVVFj9ZuV7Jv4E=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = MessageComponent;\nexport default MessageComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageComponent\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/messenger/MessageComponent.js"],"names":["React","useEffect","useState","useRef","format","makeStyles","useSelector","Grid","Paper","Divider","Typography","ListItem","ListItemAvatar","ListItemText","Avatar","useStyles","theme","layout","width","alignSelf","MessageComponent","props","classes","userId","state","user","id","scrollRef","getAlignment","message","sender","getTimestamp","createdAt","isToday","someDate","today","Date","getDate","getMonth","getFullYear","current","scrollIntoView","behavior","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,cAArD,EAAqEC,YAArE,EAAmFC,MAAnF,QAAiG,mBAAjG;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,SAAS,EAAE;AAFP;AAD6B,CAAZ,CAAD,CAA5B;;AAOA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,MAAM,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBC,EAA5B,CAA1B;AACA,QAAMC,SAAS,GAAGxB,MAAM,EAAxB;;AAEA,WAASyB,YAAT,GAAwB;AACpB,WAAOP,KAAK,CAACQ,OAAN,CAAcC,MAAd,KAAyBP,MAAzB,GAAkC,OAAlC,GAA4C,MAAnD;AACH;;AAED,WAASQ,YAAT,GAAwB;AACpB,WAAOV,KAAK,CAACQ,OAAN,CAAcG,SAAd,GAA0B5B,MAAM,CAACiB,KAAK,CAACQ,OAAN,CAAcG,SAAf,CAAhC,GAA4D,UAAnE;AACH;;AAED,QAAMC,OAAO,GAAIC,QAAD,IAAc;AAC1B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,WAAOF,QAAQ,CAACG,OAAT,MAAsBF,KAAK,CAACE,OAAN,EAAtB,IAAyCH,QAAQ,CAACI,QAAT,MAAuBH,KAAK,CAACG,QAAN,EAAhE,IAAoFJ,QAAQ,CAACK,WAAT,MAA0BJ,KAAK,CAACI,WAAN,EAArH;AACH,GAHD;;AAKAtC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,0BAAA0B,SAAS,CAACa,OAAV,0EAAmBC,cAAnB,CAAkC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAlC;AACH,GAFQ,CAAT;AAIA,sBACI,QAAC,QAAD;AAAiC,IAAA,GAAG,EAAEf,SAAtC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEC,YAAY,EAAjC;AAAqC,UAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAcc;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEf,YAAY,EAAjC;AAAqC,UAAA,SAAS,EAAEG,YAAY;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAeV,KAAK,CAACQ,OAAN,CAAcH,EAA7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAlCQN,gB;UACWL,S,EACDT,W;;;KAFVc,gB;AAoCT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { format } from 'timeago.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { Grid, Paper, Divider, Typography, ListItem, ListItemAvatar, ListItemText, Avatar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: '80%',\n        alignSelf: 'center',\n    },\n}));\n\nfunction MessageComponent(props) {\n    const classes = useStyles();\n    const userId = useSelector((state) => state.user.user.id);\n    const scrollRef = useRef();\n\n    function getAlignment() {\n        return props.message.sender === userId ? 'right' : 'left';\n    }\n\n    function getTimestamp() {\n        return props.message.createdAt ? format(props.message.createdAt) : 'just now';\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date();\n        return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n    };\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n    });\n\n    return (\n        <ListItem key={props.message.id} ref={scrollRef}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <ListItemText align={getAlignment()} primary={props.message.text} />\n                </Grid>\n                <Grid item xs={12}>\n                    <ListItemText align={getAlignment()} secondary={getTimestamp()} />\n                </Grid>\n            </Grid>\n        </ListItem>\n    );\n}\n\nexport default MessageComponent;\n"]},"metadata":{},"sourceType":"module"}