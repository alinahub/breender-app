{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/TransactionsView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { getTransactions } from 'redux/actions';\nimport { useLoggedInUser, useUser } from 'helper/hooks/auth.hooks';\nimport Loading from 'components/Loading';\nimport TransactionsOverviewTable from 'components/transactions/TransactionsOverviewTable';\nimport PremiumBanner from 'components/PremiumBanner';\n/**\n * Overview for all transactions\n * @param {*} props\n * @returns\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionsView = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loggedInUser = useLoggedInUser();\n  const user = useUser();\n  const transactions = useSelector(state => state.transaction.transactions);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    dispatch(getTransactions(user.id));\n  }, [transactions.length, user.id, dispatch]);\n  useEffect(() => {\n    let loading = true;\n\n    const load = async () => {\n      if (!loading) return;\n      setLoading(false);\n    };\n\n    load();\n    return () => {\n      loading = false;\n    };\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loggedInUser || loggedInUser.subscriptionPlan === 'free' ? /*#__PURE__*/_jsxDEV(PremiumBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 74\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.layout,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"left\",\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsOverviewTable, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionsView, \"cN1RofmbFCJhQoBwOT8w2d1y27I=\", false, function () {\n  return [useStyles, useDispatch, useLoggedInUser, useUser, useSelector];\n});\n\n_c = TransactionsView;\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    justifyContent: 'center',\n    paddingTop: 50,\n    paddingLeft: 100,\n    paddingRight: 100,\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto'\n    }\n  }\n})); // connect() establishes the connection to the redux functionalities\n\nexport default connect()(TransactionsView);\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/TransactionsView.js"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","makeStyles","Typography","getTransactions","useLoggedInUser","useUser","Loading","TransactionsOverviewTable","PremiumBanner","TransactionsView","props","classes","useStyles","dispatch","loggedInUser","user","transactions","state","transaction","loading","setLoading","id","length","load","subscriptionPlan","layout","theme","justifyContent","paddingTop","paddingLeft","paddingRight","breakpoints","down","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,yBAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,yBAAP,MAAsC,mDAAtC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGV,eAAe,EAApC;AAEA,QAAMW,IAAI,GAAGV,OAAO,EAApB;AACA,QAAMW,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,YAA9B,CAAhC;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACV,eAAe,CAACY,IAAI,CAACM,EAAN,CAAhB,CAAR;AACH,GAFQ,EAEN,CAACL,YAAY,CAACM,MAAd,EAAsBP,IAAI,CAACM,EAA3B,EAA+BR,QAA/B,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,OAAO,GAAG,IAAd;;AAEA,UAAMI,IAAI,GAAG,YAAY;AACrB,UAAI,CAACJ,OAAL,EAAc;AACdC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;;AAKAG,IAAAA,IAAI;AAEJ,WAAO,MAAM;AACTJ,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAOA,OAAO,gBACV,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADU,gBAGV;AAAA,eACK,CAACL,YAAD,IAAiBA,YAAY,CAACU,gBAAb,KAAkC,MAAnD,gBAA4D,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAA5D,GAAgF,IADrF,eAEI;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACc,MAAxB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,yBAAD;AAA2B,QAAA,YAAY,EAAET;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBAHJ;AAaH,CA1CD;;GAAMP,gB;UACcG,S,EACCb,W,EACIK,e,EAERC,O,EACQL,W;;;KANnBS,gB;AA4CN,MAAMG,SAAS,GAAGX,UAAU,CAAEyB,KAAD,KAAY;AACrCD,EAAAA,MAAM,EAAE;AACJE,IAAAA,cAAc,EAAE,QADZ;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,WAAW,EAAE,GAHT;AAIJC,IAAAA,YAAY,EAAE,GAJV;AAKJ,KAACJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BC,MAAAA,KAAK,EAAE;AADqB;AAL5B;AAD6B,CAAZ,CAAD,CAA5B,C,CAYA;;AACA,eAAenC,OAAO,GAAGW,gBAAH,CAAtB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { getTransactions } from 'redux/actions';\nimport { useLoggedInUser, useUser } from 'helper/hooks/auth.hooks';\nimport Loading from 'components/Loading';\nimport TransactionsOverviewTable from 'components/transactions/TransactionsOverviewTable';\nimport PremiumBanner from 'components/PremiumBanner';\n\n/**\n * Overview for all transactions\n * @param {*} props\n * @returns\n */\n\nconst TransactionsView = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const loggedInUser = useLoggedInUser();\n\n    const user = useUser();\n    const transactions = useSelector((state) => state.transaction.transactions);\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        dispatch(getTransactions(user.id));\n    }, [transactions.length, user.id, dispatch]);\n\n    useEffect(() => {\n        let loading = true;\n\n        const load = async () => {\n            if (!loading) return;\n            setLoading(false);\n        };\n\n        load();\n\n        return () => {\n            loading = false;\n        };\n    }, []);\n\n    return loading ? (\n        <Loading />\n    ) : (\n        <>\n            {!loggedInUser || loggedInUser.subscriptionPlan === 'free' ? <PremiumBanner /> : null}\n            <div className={classes.layout}>\n                <Typography variant=\"h6\" align=\"left\">\n                    Transactions\n                </Typography>\n                <TransactionsOverviewTable transactions={transactions} />\n            </div>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        justifyContent: 'center',\n        paddingTop: 50,\n        paddingLeft: 100,\n        paddingRight: 100,\n        [theme.breakpoints.down('sm')]: {\n            width: 'auto',\n        },\n    },\n}));\n\n// connect() establishes the connection to the redux functionalities\nexport default connect()(TransactionsView);\n"]},"metadata":{},"sourceType":"module"}