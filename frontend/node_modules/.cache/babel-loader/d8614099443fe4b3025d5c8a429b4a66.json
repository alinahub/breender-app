{"ast":null,"code":"function messages(state = {}, action) {\n  switch (action.type) {\n    case 'GET_MESSAGES':\n      // Check if every message in action.messages in in the messages state already and update the message state if not\n      if (!state.messages) {\n        return { ...state,\n          messages: action.messages\n        };\n      }\n\n      if (action.messages.length !== state.messages.length || !action.messages.every(m1 => state.messages.find(m2 => {\n        return m2._id == m1._id;\n      }))) {\n        return { ...state,\n          messages: action.messages\n        };\n      } else {\n        return state;\n      }\n\n    case 'GET_UNREAD_MESSAGES':\n      return { ...state,\n        unseenMessages: action.unseenMessages\n      };\n\n    case 'ADD_MESSAGE':\n      return { ...state\n      };\n\n    case 'GET_MESSAGE':\n      return { ...state,\n        message: action.message\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default messages;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/redux/reducers/messageReducer.js"],"names":["messages","state","action","type","length","every","m1","find","m2","_id","unseenMessages","message"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI;AACA,UAAI,CAACF,KAAK,CAACD,QAAX,EAAqB;AACjB,eAAO,EAAE,GAAGC,KAAL;AAAYD,UAAAA,QAAQ,EAAEE,MAAM,CAACF;AAA7B,SAAP;AACH;;AACD,UACIE,MAAM,CAACF,QAAP,CAAgBI,MAAhB,KAA2BH,KAAK,CAACD,QAAN,CAAeI,MAA1C,IACA,CAACF,MAAM,CAACF,QAAP,CAAgBK,KAAhB,CAAuBC,EAAD,IACnBL,KAAK,CAACD,QAAN,CAAeO,IAAf,CAAqBC,EAAD,IAAQ;AACxB,eAAOA,EAAE,CAACC,GAAH,IAAUH,EAAE,CAACG,GAApB;AACH,OAFD,CADH,CAFL,EAOE;AACE,eAAO,EAAE,GAAGR,KAAL;AAAYD,UAAAA,QAAQ,EAAEE,MAAM,CAACF;AAA7B,SAAP;AACH,OATD,MASO;AACH,eAAOC,KAAP;AACH;;AACL,SAAK,qBAAL;AACI,aAAO,EAAE,GAAGA,KAAL;AAAYS,QAAAA,cAAc,EAAER,MAAM,CAACQ;AAAnC,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGT;AAAL,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGA,KAAL;AAAYU,QAAAA,OAAO,EAAET,MAAM,CAACS;AAA5B,OAAP;;AACJ;AACI,aAAOV,KAAP;AAzBR;AA2BH;;AAED,eAAeD,QAAf","sourcesContent":["function messages(state = {}, action) {\n    switch (action.type) {\n        case 'GET_MESSAGES':\n            // Check if every message in action.messages in in the messages state already and update the message state if not\n            if (!state.messages) {\n                return { ...state, messages: action.messages };\n            }\n            if (\n                action.messages.length !== state.messages.length ||\n                !action.messages.every((m1) =>\n                    state.messages.find((m2) => {\n                        return m2._id == m1._id;\n                    })\n                )\n            ) {\n                return { ...state, messages: action.messages };\n            } else {\n                return state;\n            }\n        case 'GET_UNREAD_MESSAGES':\n            return { ...state, unseenMessages: action.unseenMessages };\n        case 'ADD_MESSAGE':\n            return { ...state };\n        case 'GET_MESSAGE':\n            return { ...state, message: action.message };\n        default:\n            return state;\n    }\n}\n\nexport default messages;\n"]},"metadata":{},"sourceType":"module"}