{"ast":null,"code":"import { storage } from '../firebase';\nconst FirebaseService = {\n  upload: async (path, data, metadata) => {\n    const storageRef = storage.ref(); // upload image and get url\n\n    let url = await storageRef.child(path).put(data.file, metadata).then(snapshot => {\n      return snapshot.ref.getDownloadURL();\n    });\n    return await url;\n  },\n  remove: async path => {\n    const storageRef = await storage.ref();\n    storageRef.child(path).delete().then(() => {\n      console.log('Deletion was successful');\n    }).catch(error => {\n      console.log('Error while deletion has occurred', error);\n    });\n  }\n};\nexport default FirebaseService;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/FirebaseService.js"],"names":["storage","FirebaseService","upload","path","data","metadata","storageRef","ref","url","child","put","file","then","snapshot","getDownloadURL","remove","delete","console","log","catch","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,QAAnB,KAAgC;AACpC,UAAMC,UAAU,GAAGN,OAAO,CAACO,GAAR,EAAnB,CADoC,CAGpC;;AACA,QAAIC,GAAG,GAAG,MAAMF,UAAU,CAACG,KAAX,CAAiBN,IAAjB,EAAuBO,GAAvB,CAA2BN,IAAI,CAACO,IAAhC,EAAsCN,QAAtC,EAAgDO,IAAhD,CAAsDC,QAAD,IAAc;AAC/E,aAAOA,QAAQ,CAACN,GAAT,CAAaO,cAAb,EAAP;AACH,KAFe,CAAhB;AAIA,WAAO,MAAMN,GAAb;AACH,GAVmB;AAWpBO,EAAAA,MAAM,EAAE,MAAOZ,IAAP,IAAgB;AACpB,UAAMG,UAAU,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAzB;AACAD,IAAAA,UAAU,CACLG,KADL,CACWN,IADX,EAEKa,MAFL,GAGKJ,IAHL,CAGU,MAAM;AACRK,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KALL,EAMKC,KANL,CAMYC,KAAD,IAAW;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDE,KAAjD;AACH,KARL;AASH;AAtBmB,CAAxB;AAyBA,eAAenB,eAAf","sourcesContent":["import { storage } from '../firebase';\n\nconst FirebaseService = {\n    upload: async (path, data, metadata) => {\n        const storageRef = storage.ref();\n\n        // upload image and get url\n        let url = await storageRef.child(path).put(data.file, metadata).then((snapshot) => {\n            return snapshot.ref.getDownloadURL();\n        });\n\n        return await url;\n    },\n    remove: async (path) => {\n        const storageRef = await storage.ref();\n        storageRef\n            .child(path)\n            .delete()\n            .then(() => {\n                console.log('Deletion was successful');\n            })\n            .catch((error) => {\n                console.log('Error while deletion has occurred', error);\n            });\n    },\n}\n\nexport default FirebaseService;\n"]},"metadata":{},"sourceType":"module"}