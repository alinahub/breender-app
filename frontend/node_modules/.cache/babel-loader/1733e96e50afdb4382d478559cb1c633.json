{"ast":null,"code":"import axios from 'axios';\nexport default class PetService {\n  static URL() {\n    return 'http://localhost:4000/pets';\n  }\n\n  static setToken() {\n    const token = localStorage.getItem('jwtToken');\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n  }\n\n  static getPets(species, sex, breed, age, showOwn, user) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        console.log(user);\n        const me = `user=${(user === null || user === void 0 ? void 0 : user.id) ? user.id : ''}`;\n        const {\n          data\n        } = await axios.get(`/pets/search?${me}&species=${species}&sex=${sex}&breed=${breed}&age[]=${age}&showOwn=${showOwn}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static getPet(id) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.get(`/pets/${id}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static deletePet(id) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.delete(`/pets/${id}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static async updatePet(pet) {\n    this.setToken();\n    const {\n      data\n    } = await axios.put(`/pets/${pet.id}`, pet);\n    return data;\n  }\n\n  static async createPet(pet) {\n    this.setToken();\n    const {\n      data\n    } = await axios.post(`/pets/`, pet);\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/PetService.js"],"names":["axios","PetService","URL","setToken","token","localStorage","getItem","defaults","headers","common","getPets","species","sex","breed","age","showOwn","user","Promise","resolve","reject","console","log","me","id","data","get","err","getPet","deletePet","delete","updatePet","pet","put","createPet","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAClB,SAAHC,GAAG,GAAG;AACT,WAAO,4BAAP;AACH;;AAEc,SAARC,QAAQ,GAAG;AACd,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACAN,IAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYL,KAA7D;AACH;;AAEa,SAAPM,OAAO,CAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,OAA3B,EAAoCC,IAApC,EAA0C;AACpD,SAAKb,QAAL;AACA,WAAO,IAAIc,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,cAAMM,EAAE,GAAI,QAAO,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,EAAN,IAAWP,IAAI,CAACO,EAAhB,GAAqB,EAAG,EAA3C;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMxB,KAAK,CAACyB,GAAN,CAAW,gBAAeH,EAAG,YAAWX,OAAQ,QAAOC,GAAI,UAASC,KAAM,UAASC,GAAI,YAAWC,OAAQ,EAA1G,CAAvB;AACAG,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OALD,CAKE,OAAOE,GAAP,EAAY;AACVP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACH;AACJ,KATM,CAAP;AAUH;;AAEY,SAANC,MAAM,CAACJ,EAAD,EAAK;AACd,SAAKpB,QAAL;AACA,WAAO,IAAIc,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMxB,KAAK,CAACyB,GAAN,CAAW,SAAQF,EAAG,EAAtB,CAAvB;AACAL,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEe,SAATE,SAAS,CAACL,EAAD,EAAK;AACjB,SAAKpB,QAAL;AACA,WAAO,IAAIc,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMxB,KAAK,CAAC6B,MAAN,CAAc,SAAQN,EAAG,EAAzB,CAAvB;AACAL,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEqB,eAATI,SAAS,CAACC,GAAD,EAAM;AACxB,SAAK5B,QAAL;AACA,UAAM;AAAEqB,MAAAA;AAAF,QAAW,MAAMxB,KAAK,CAACgC,GAAN,CAAW,SAAQD,GAAG,CAACR,EAAG,EAA1B,EAA6BQ,GAA7B,CAAvB;AACA,WAAOP,IAAP;AACH;;AAEqB,eAATS,SAAS,CAACF,GAAD,EAAM;AACxB,SAAK5B,QAAL;AACA,UAAM;AAAEqB,MAAAA;AAAF,QAAW,MAAMxB,KAAK,CAACkC,IAAN,CAAY,QAAZ,EAAqBH,GAArB,CAAvB;AACA,WAAOP,IAAP;AACH;;AA1D2B","sourcesContent":["import axios from 'axios';\n\nexport default class PetService {\n    static URL() {\n        return 'http://localhost:4000/pets';\n    }\n\n    static setToken() {\n        const token = localStorage.getItem('jwtToken');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    static getPets(species, sex, breed, age, showOwn, user) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                console.log(user)\n                const me = `user=${user?.id ? user.id : ''}`;\n                const { data } = await axios.get(`/pets/search?${me}&species=${species}&sex=${sex}&breed=${breed}&age[]=${age}&showOwn=${showOwn}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static getPet(id) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.get(`/pets/${id}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static deletePet(id) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.delete(`/pets/${id}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static async updatePet(pet) {\n        this.setToken();\n        const { data } = await axios.put(`/pets/${pet.id}`, pet);\n        return data;\n    }\n\n    static async createPet(pet) {\n        this.setToken();\n        const { data } = await axios.post(`/pets/`, pet);\n        return data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}