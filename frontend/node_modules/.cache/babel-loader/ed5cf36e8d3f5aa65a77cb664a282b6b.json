{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/StepperInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Grid, Table, TableCell, TableRow, Typography } from '@material-ui/core';\nimport PayPalPayment from './PayPalPayment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    display: 'flex',\n    flex: 1,\n    maxWidth: '100%'\n  },\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 170\n  }\n}));\n\nconst StepperInformation = ({\n  step,\n  pet,\n  petOwner,\n  loggedInUser,\n  isFreeOfCharge,\n  onApprove,\n  onError\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  function formatProvince(province) {\n    switch (province) {\n      case 'bavaria':\n        return 'Bavaria';\n\n      case 'lower-saxony':\n        return 'Lower Saxony';\n\n      case 'baden-wuerttemberg':\n        return 'Baden WÃ¼rttemberg';\n\n      case 'north-rhine-westphalia':\n        return 'North Rhine-Westphalia';\n\n      default:\n        return '';\n    }\n  }\n\n  const petColumns = [{\n    title: 'Name',\n    data: pet.officialName\n  }, {\n    title: 'Sex',\n    data: pet.sex\n  }, {\n    title: 'Species',\n    data: pet.species\n  }, {\n    title: 'Breed',\n    data: pet.breed\n  }];\n  const userColumns = [{\n    title: 'Username',\n    data: petOwner === null || petOwner === void 0 ? void 0 : petOwner.username\n  }, {\n    title: 'City',\n    data: petOwner === null || petOwner === void 0 ? void 0 : petOwner.city\n  }, {\n    title: 'Province',\n    data: formatProvince(petOwner === null || petOwner === void 0 ? void 0 : petOwner.province)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: step === 0 ?\n    /*#__PURE__*/\n    // Infos for step 1: pet and pet owner short previews\n    _jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      align: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Pet Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            image: pet.profilePicture.src,\n            title: \"pet profile picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: petColumns.map(item => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: item.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: userColumns.map(item => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: item.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : step === 1 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 5,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        style: {\n          maxWidth: 500\n        },\n        children: isFreeOfCharge ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textPrimary\",\n          component: \"p\",\n          children: \"You can directly proceed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Pay now \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(PayPalPayment, {\n            amount: pet.price,\n            onApprove: onApprove,\n            onError: onError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StepperInformation, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = StepperInformation;\nexport default StepperInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepperInformation\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/StepperInformation.js"],"names":["React","makeStyles","Card","CardContent","CardMedia","Grid","Table","TableCell","TableRow","Typography","PayPalPayment","useStyles","theme","layout","display","flex","maxWidth","root","media","height","StepperInformation","step","pet","petOwner","loggedInUser","isFreeOfCharge","onApprove","onError","classes","formatProvince","province","petColumns","title","data","officialName","sex","species","breed","userColumns","username","city","profilePicture","src","map","item","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Grid, Table, TableCell, TableRow, Typography } from '@material-ui/core';\nimport PayPalPayment from './PayPalPayment';\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        display: 'flex',\n        flex: 1,\n        maxWidth: '100%',\n    },\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 170,\n    },\n}));\n\nconst StepperInformation = ({ step, pet, petOwner, loggedInUser, isFreeOfCharge, onApprove, onError }) => {\n    const classes = useStyles();\n\n    function formatProvince(province) {\n        switch (province) {\n            case 'bavaria':\n                return 'Bavaria';\n            case 'lower-saxony':\n                return 'Lower Saxony';\n            case 'baden-wuerttemberg':\n                return 'Baden WÃ¼rttemberg';\n            case 'north-rhine-westphalia':\n                return 'North Rhine-Westphalia';\n            default:\n                return '';\n        }\n    }\n\n    const petColumns = [\n        { title: 'Name', data: pet.officialName },\n        { title: 'Sex', data: pet.sex },\n        { title: 'Species', data: pet.species },\n        { title: 'Breed', data: pet.breed },\n    ];\n\n    const userColumns = [\n        { title: 'Username', data: petOwner?.username },\n        { title: 'City', data: petOwner?.city },\n        { title: 'Province', data: formatProvince(petOwner?.province) },\n    ];\n\n    return (\n        <div className={classes.layout}>\n            {step === 0 ? (\n                // Infos for step 1: pet and pet owner short previews\n                <Grid container direction=\"row\" align=\"center\" justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={6}>\n                        <Typography gutterBottom variant=\"h6\">\n                            Pet Information\n                        </Typography>\n                        <Card className={classes.root}>\n                            <CardMedia className={classes.media} image={pet.profilePicture.src} title=\"pet profile picture\" />\n                            <CardContent>\n                                <Table>\n                                    {petColumns.map((item) => {\n                                        return (\n                                            <TableRow hover>\n                                                <TableCell>\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                        {item.title}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Typography>{item.data}</Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </Table>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography gutterBottom variant=\"h6\">\n                            User Information\n                        </Typography>\n                        <Card className={classes.root}>\n                            <CardContent>\n                                <Table>\n                                    {userColumns.map((item) => {\n                                        return (\n                                            <TableRow hover>\n                                                <TableCell>\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                        {item.title}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Typography>{item.data}</Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </Table>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            ) : step === 1 ? (\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" item xs={12} spacing={5}>\n                    <Grid item align=\"center\" style={{ maxWidth: 500 }}>\n                        {isFreeOfCharge ? (\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                You can directly proceed.\n                            </Typography>\n                        ) : (\n                            <>\n                                <Typography>Pay now </Typography>\n                                {/* Payment with PayPal Component */}\n                                <PayPalPayment amount={pet.price} onApprove={onApprove} onError={onError} />\n                            </>\n                        )}\n                    </Grid>\n                </Grid>\n            ) : null}\n        </div>\n    );\n};\n\nexport default StepperInformation;\n"]},"metadata":{},"sourceType":"module"}