{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/MessengerNewContactView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useSelector, dispatch } from 'react-redux';\nimport { getOrAddConversation } from '../redux/actions/conversationActions';\nimport MessengerComponent from '../components/messenger/MessengerComponent';\nimport MessengerView from './MessengerView';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessengerNewContactView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const user = useSelector(state => state.user.user);\n  let url = location.pathname.split('/messenger/')[1];\n  let breederId = url.split('/')[0];\n  let petId = url.split('/')[1];\n  useEffect(() => {\n    let userId = user.id;\n\n    async function loadConversation(id1, id2) {\n      console.log('Checking conversations and creating if needed...');\n      await dispatch(getOrAddConversation(id1, id2));\n    }\n\n    return loadConversation(userId, breederId);\n  }, [dispatch]);\n  const loadedConversation = useSelector(state => state.conversations.conversation);\n  return !loadedConversation ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this) : loadedConversation ? /*#__PURE__*/_jsxDEV(MessengerView, {\n    currentConversationId: loadedConversation._id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this) : null;\n} // connect() establishes allows the usage of redux functionality\n\n\n_s(MessengerNewContactView, \"aMvCwDjknbeDnrm7dQwEaYXU9OE=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector];\n});\n\n_c = MessengerNewContactView;\nexport default connect()(MessengerNewContactView);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessengerNewContactView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/MessengerNewContactView.js"],"names":["React","useEffect","useState","connect","useSelector","dispatch","getOrAddConversation","MessengerComponent","MessengerView","Loading","useDispatch","useLocation","MessengerNewContactView","props","location","user","state","url","pathname","split","breederId","petId","userId","id","loadConversation","id1","id2","console","log","loadedConversation","conversations","conversation","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,QAA+C,aAA/C;AACA,SAASC,oBAAT,QAAqC,sCAArC;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AACpC,QAAMR,QAAQ,GAAGK,WAAW,EAA5B;AACA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;AACA,MAAIE,GAAG,GAAGH,QAAQ,CAACI,QAAT,CAAkBC,KAAlB,CAAwB,aAAxB,EAAuC,CAAvC,CAAV;AACA,MAAIC,SAAS,GAAGH,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAhB;AACA,MAAIE,KAAK,GAAGJ,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAZ;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,MAAM,GAAGP,IAAI,CAACQ,EAAlB;;AAEA,mBAAeC,gBAAf,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACA,YAAMvB,QAAQ,CAACC,oBAAoB,CAACmB,GAAD,EAAMC,GAAN,CAArB,CAAd;AACH;;AACD,WAAOF,gBAAgB,CAACF,MAAD,EAASF,SAAT,CAAvB;AACH,GARQ,EAQN,CAACf,QAAD,CARM,CAAT;AAUA,QAAMwB,kBAAkB,GAAGzB,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACc,aAAN,CAAoBC,YAAhC,CAAtC;AAEA,SAAO,CAACF,kBAAD,gBACH;AAAA,2BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADG,GAIHA,kBAAkB,gBAClB,QAAC,aAAD;AAAe,IAAA,qBAAqB,EAAEA,kBAAkB,CAACG;AAAzD;AAAA;AAAA;AAAA;AAAA,UADkB,GAElB,IANJ;AAOH,C,CAED;;;GA7BSpB,uB;UACYF,W,EACAC,W,EACJP,W,EAecA,W;;;KAlBtBQ,uB;AA8BT,eAAeT,OAAO,GAAGS,uBAAH,CAAtB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useSelector, dispatch } from 'react-redux';\nimport { getOrAddConversation } from '../redux/actions/conversationActions';\nimport MessengerComponent from '../components/messenger/MessengerComponent';\nimport MessengerView from './MessengerView';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nfunction MessengerNewContactView(props) {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const user = useSelector((state) => state.user.user);\n    let url = location.pathname.split('/messenger/')[1];\n    let breederId = url.split('/')[0];\n    let petId = url.split('/')[1];\n\n    useEffect(() => {\n        let userId = user.id;\n\n        async function loadConversation(id1, id2) {\n            console.log('Checking conversations and creating if needed...');\n            await dispatch(getOrAddConversation(id1, id2));\n        }\n        return loadConversation(userId, breederId);\n    }, [dispatch]);\n\n    const loadedConversation = useSelector((state) => state.conversations.conversation);\n\n    return !loadedConversation ? (\n        <div>\n            <Loading />\n        </div>\n    ) : loadedConversation ? (\n        <MessengerView currentConversationId={loadedConversation._id} />\n    ) : null;\n}\n\n// connect() establishes allows the usage of redux functionality\nexport default connect()(MessengerNewContactView);\n"]},"metadata":{},"sourceType":"module"}