{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PaymentStepper.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  }\n}));\n\nfunction getSteps() {\n  return ['Confirm general information', 'Confirm payment', 'Finish'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst PaymentStepper = () => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      connector: /*#__PURE__*/_jsxDEV(AlternativeConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 68\n      }, this),\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconComponent: StepIcon,\n            ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}; // own styles for the stepper\n\n\n_s(PaymentStepper, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = PaymentStepper;\nconst AlternativeConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\n\nfunction StepIcon(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    children: completed ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 64\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 7\n  }, this);\n} //   StepIcon.propTypes = {\n//     /**\n//      * Whether this step is active.\n//      */\n//     active: PropTypes.bool,\n//     /**\n//      * Mark the step as completed. Is passed to child components.\n//      */\n//     completed: PropTypes.bool,\n//   };\n\n\n_s2(StepIcon, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = StepIcon;\nexport default PaymentStepper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaymentStepper\");\n$RefreshReg$(_c2, \"StepIcon\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PaymentStepper.js"],"names":["React","makeStyles","withStyles","Stepper","Step","StepLabel","Button","Typography","StepConnector","Check","clsx","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","active","backgroundImage","boxShadow","completed","circle","height","borderRadius","backgroundColor","getSteps","getStepContent","step","PaymentStepper","classes","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","index","stepProps","labelProps","StepIcon","length","AlternativeConnector","alternativeLabel","top","left","right","borderColor","line","borderTopWidth","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n}));\n\nfunction getSteps() {\n  return ['Confirm general information', 'Confirm payment', 'Finish'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst PaymentStepper = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<AlternativeConnector />}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel StepIconComponent={StepIcon} {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// own styles for the stepper\nconst AlternativeConnector = withStyles({\n    alternativeLabel: {\n      top: 10,\n      left: 'calc(-50% + 16px)',\n      right: 'calc(50% + 16px)',\n    },\n    active: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    line: {\n      borderColor: '#eaeaf0',\n      borderTopWidth: 3,\n      borderRadius: 1,\n    },\n  })(StepConnector);\n\n  function StepIcon(props) {\n    const classes = useStyles();\n    const { active, completed } = props;\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n        })}\n      >\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n      </div>\n    );\n  }\n  \n//   StepIcon.propTypes = {\n//     /**\n//      * Whether this step is active.\n//      */\n//     active: PropTypes.bool,\n//     /**\n//      * Mark the step as completed. Is passed to child components.\n//      */\n//     completed: PropTypes.bool,\n//   };\n\n  export default PaymentStepper;"]},"metadata":{},"sourceType":"module"}