{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getTransactions, getUsersInfo, logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider, Typography } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuitem: {\n    display: 'flex',\n    minWidth: '200px'\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.secondary.main\n  },\n  avatar: {\n    background: theme.palette.secondary.main\n  },\n  margin: {\n    marginRight: theme.spacing(1)\n  }\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\n\nfunction KebabMenu(props) {\n  _s();\n\n  const classes = useStyles(); // return the currnetly logged in user from redux store\n\n  const user = useUser();\n  const userInfo = useSelector(state => state.user.userInfo);\n  useEffect(() => {\n    if (user && !userInfo) {\n      props.dispatch(getUsersInfo(user.id));\n    }\n  }, [user, userInfo]);\n\n  const onClickLogin = () => {\n    // close this menu\n    props.onClose(); // navigate to the login page\n\n    props.history.push('/login');\n  };\n\n  const onClickLogout = () => {\n    // trigger redux logout action\n    props.dispatch(logout()); // close this menu\n\n    props.onClose(); // navigate to the home page\n\n    props.history.push('/login');\n  };\n\n  const onClickGoToUserProfile = () => {\n    props.history.push('/user');\n  };\n\n  const onClickMyTransactions = id => {\n    props.dispatch(getTransactions(id));\n    props.history.push('/transactions');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    open: props.open,\n    anchorEl: props.anchor,\n    onClose: props.onClose,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    children: userInfo ? [/*#__PURE__*/_jsxDEV(MenuItem, {\n      className: classes.menuitem,\n      onClick: onClickGoToUserProfile,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: user.username ? user.username[0] : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"padding\": \"10px\"\n        },\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), userInfo.role === 'admin' ? /*#__PURE__*/_jsxDEV(SecurityIcon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this) : userInfo.subscriptionPlan === 'premium' ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCrown,\n        size: \"lg\",\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, \"user\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => onClickMyTransactions(user.id),\n      className: classes.menuitem,\n      children: \"My transactions\"\n    }, \"transactions\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogout,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n        className: classes.margin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this), \"Logout\"]\n    }, \"logout\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this)] : [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogin,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n        color: \"primary\",\n        className: classes.margin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this), \"Login\"]\n    }, \"login\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(KebabMenu, \"DLtUmt66Sn5LPultYh0gay0p2qM=\", false, function () {\n  return [useStyles, useUser, useSelector];\n});\n\n_c = KebabMenu;\nKebabMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.element,\n  open: PropTypes.bool.isRequired\n};\nexport default connect()(withRouter(KebabMenu));\n\nvar _c;\n\n$RefreshReg$(_c, \"KebabMenu\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js"],"names":["React","useEffect","makeStyles","PropTypes","withRouter","getTransactions","getUsersInfo","logout","Menu","MenuItem","Avatar","Divider","Typography","connect","useSelector","ExitToAppIcon","VerifiedUserIcon","useUser","SecurityIcon","FontAwesomeIcon","faCrown","useStyles","theme","menuitem","display","minWidth","icon","marginRight","spacing","color","palette","secondary","main","avatar","background","margin","KebabMenu","props","classes","user","userInfo","state","dispatch","id","onClickLogin","onClose","history","push","onClickLogout","onClickGoToUserProfile","onClickMyTransactions","open","anchor","vertical","horizontal","username","role","subscriptionPlan","propTypes","func","isRequired","element","bool"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getTransactions, getUsersInfo, logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider, Typography } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: 'flex',\n        minWidth: '200px',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n    },\n    avatar: {\n        background: theme.palette.secondary.main,\n    },\n    margin: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n    // return the currnetly logged in user from redux store\n    const user = useUser();\n    const userInfo = useSelector((state) => state.user.userInfo);\n\n    useEffect(() => {\n        if (user && !userInfo) {\n            props.dispatch(getUsersInfo(user.id));\n        }\n    }, [user, userInfo]);\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push('/login');\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push('/login');\n    };\n\n    const onClickGoToUserProfile = () => {\n        props.history.push('/user');\n    };\n\n    const onClickMyTransactions = (id) => {\n        props.dispatch(getTransactions(id));\n        props.history.push('/transactions');\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            {userInfo\n                ? [\n                    <MenuItem key=\"user\" className={classes.menuitem} onClick={onClickGoToUserProfile}>\n                        <Avatar className={classes.avatar}><Typography color=\"textSecondary\">{user.username ? user.username[0] : \"\"}</Typography></Avatar>\n                        <div style={{ \"padding\": \"10px\" }}>{userInfo.username}</div>\n                        {userInfo.role === 'admin' ? (\n                            <SecurityIcon className={classes.icon} />\n                        ) : userInfo.subscriptionPlan === 'premium' ? (\n                            <FontAwesomeIcon icon={faCrown} size={\"lg\"} className={classes.icon} />\n                        ) : (\n                            <></>\n                        )}\n                    </MenuItem>,\n                    <Divider key=\"divider\" />,\n                    <MenuItem key=\"transactions\" onClick={() => onClickMyTransactions(user.id)} className={classes.menuitem}>\n                        My transactions\n                    </MenuItem>,\n                    <Divider key=\"divider2\" />,\n                    <MenuItem key=\"logout\" onClick={onClickLogout} className={classes.menuitem}>\n                        <ExitToAppIcon className={classes.margin} />\n                        Logout\n                    </MenuItem>,\n                ]\n                : [\n                    <MenuItem\n                        key=\"login\"\n                        onClick={onClickLogin}\n                        className={classes.menuitem}\n                    >\n                        <VerifiedUserIcon color=\"primary\" className={classes.margin} />\n                        Login\n                    </MenuItem>,\n                ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}