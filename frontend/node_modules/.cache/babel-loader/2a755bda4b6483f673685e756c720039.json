{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { getPet } from '../redux/actions/petActions';\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PetProfileView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const petId = location.pathname.split('/pet/')[1];\n  useEffect(() => {\n    // get id of pet from URL\n    async function loadPet(id) {\n      await dispatch(getPet(id));\n    }\n\n    return loadPet(petId);\n  }, [dispatch, petId]);\n  const selectedPet = useSelector(state => state.pets.pet);\n  return !selectedPet && !selectedPet.error ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this) : selectedPet ? /*#__PURE__*/_jsxDEV(PetProfileComponent, {\n    id: petId,\n    officialName: selectedPet.officialName,\n    nickname: selectedPet.nickname,\n    age: selectedPet.age,\n    sex: selectedPet.sex,\n    price: selectedPet.price,\n    profilePicture: selectedPet.profilePicture,\n    pictures: getAlbumWithProfilePicture(selectedPet),\n    breed: selectedPet.breed,\n    species: selectedPet.species,\n    documents: selectedPet.documents,\n    competitions: selectedPet.competitions,\n    ownerId: selectedPet.ownerId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this) : null;\n}\n\n_s(PetProfileView, \"bK/wC4Ds/hCUgpfEvSahSo1Ug7M=\", false, function () {\n  return [useDispatch, useLocation, useSelector];\n});\n\n_c = PetProfileView;\n\nfunction getAlbumWithProfilePicture(selectedPet) {\n  let pictures = [...selectedPet.pictures];\n  pictures.push(selectedPet.profilePicture);\n  return pictures;\n} // connect() establishes allows the usage of redux functionality\n\n\nexport default connect()(PetProfileView);\n\nvar _c;\n\n$RefreshReg$(_c, \"PetProfileView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js"],"names":["React","useEffect","connect","useSelector","getPet","PetProfileComponent","Loading","useDispatch","useLocation","PetProfileView","props","dispatch","location","petId","pathname","split","loadPet","id","selectedPet","state","pets","pet","error","officialName","nickname","age","sex","price","profilePicture","getAlbumWithProfilePicture","breed","species","documents","competitions","ownerId","pictures","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,KAAK,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,OAAxB,EAAiC,CAAjC,CAAd;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA,mBAAee,OAAf,CAAuBC,EAAvB,EAA2B;AACvB,YAAMN,QAAQ,CAACP,MAAM,CAACa,EAAD,CAAP,CAAd;AACH;;AAED,WAAOD,OAAO,CAACH,KAAD,CAAd;AACH,GARQ,EAQN,CAACF,QAAD,EAAWE,KAAX,CARM,CAAT;AAUA,QAAMK,WAAW,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,GAAvB,CAA/B;AAEA,SAAO,CAACH,WAAD,IAAgB,CAACA,WAAW,CAACI,KAA7B,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,GAEHJ,WAAW,gBACX,QAAC,mBAAD;AACI,IAAA,EAAE,EAAEL,KADR;AAEI,IAAA,YAAY,EAAEK,WAAW,CAACK,YAF9B;AAGI,IAAA,QAAQ,EAAEL,WAAW,CAACM,QAH1B;AAII,IAAA,GAAG,EAAEN,WAAW,CAACO,GAJrB;AAKI,IAAA,GAAG,EAAEP,WAAW,CAACQ,GALrB;AAMI,IAAA,KAAK,EAAER,WAAW,CAACS,KANvB;AAOI,IAAA,cAAc,EAAET,WAAW,CAACU,cAPhC;AAQI,IAAA,QAAQ,EAAEC,0BAA0B,CAACX,WAAD,CARxC;AASI,IAAA,KAAK,EAAEA,WAAW,CAACY,KATvB;AAUI,IAAA,OAAO,EAAEZ,WAAW,CAACa,OAVzB;AAWI,IAAA,SAAS,EAAEb,WAAW,CAACc,SAX3B;AAYI,IAAA,YAAY,EAAEd,WAAW,CAACe,YAZ9B;AAaI,IAAA,OAAO,EAAEf,WAAW,CAACgB;AAbzB;AAAA;AAAA;AAAA;AAAA,UADW,GAgBX,IAlBJ;AAmBH;;GArCQzB,c;UACYF,W,EACAC,W,EAcGL,W;;;KAhBfM,c;;AAuCT,SAASoB,0BAAT,CAAoCX,WAApC,EAAiD;AAC7C,MAAIiB,QAAQ,GAAG,CAAC,GAAGjB,WAAW,CAACiB,QAAhB,CAAf;AACAA,EAAAA,QAAQ,CAACC,IAAT,CAAclB,WAAW,CAACU,cAA1B;AACA,SAAOO,QAAP;AACH,C,CAED;;;AACA,eAAejC,OAAO,GAAGO,cAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { getPet } from '../redux/actions/petActions';\r\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\r\nimport Loading from '../components/Loading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\r\n\r\nfunction PetProfileView(props) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const petId = location.pathname.split('/pet/')[1];\r\n\r\n    useEffect(() => {\r\n        // get id of pet from URL\r\n\r\n        async function loadPet(id) {\r\n            await dispatch(getPet(id));\r\n        }\r\n\r\n        return loadPet(petId);\r\n    }, [dispatch, petId]);\r\n\r\n    const selectedPet = useSelector((state) => state.pets.pet);\r\n\r\n    return !selectedPet && !selectedPet.error ? (\r\n        <Loading />\r\n    ) : selectedPet ? (\r\n        <PetProfileComponent\r\n            id={petId}\r\n            officialName={selectedPet.officialName}\r\n            nickname={selectedPet.nickname}\r\n            age={selectedPet.age}\r\n            sex={selectedPet.sex}\r\n            price={selectedPet.price}\r\n            profilePicture={selectedPet.profilePicture}\r\n            pictures={getAlbumWithProfilePicture(selectedPet)}\r\n            breed={selectedPet.breed}\r\n            species={selectedPet.species}\r\n            documents={selectedPet.documents}\r\n            competitions={selectedPet.competitions}\r\n            ownerId={selectedPet.ownerId}\r\n        />\r\n    ) : null;\r\n}\r\n\r\nfunction getAlbumWithProfilePicture(selectedPet) {\r\n    let pictures = [...selectedPet.pictures];\r\n    pictures.push(selectedPet.profilePicture);\r\n    return pictures;\r\n}\r\n\r\n// connect() establishes allows the usage of redux functionality\r\nexport default connect()(PetProfileView);\r\n"]},"metadata":{},"sourceType":"module"}