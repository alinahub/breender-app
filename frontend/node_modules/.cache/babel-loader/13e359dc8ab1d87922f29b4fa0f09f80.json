{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/forms/pet-info.form.js\",\n    _s = $RefreshSig$();\n\nimport 'date-fns';\nimport React, { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { FormControl, Grid, InputLabel, InputAdornment, MenuItem, Select, TextField, Paper, Divider, FormHelperText } from '@material-ui/core';\nimport { breeds } from 'helper/data/breeds';\nimport DocumentsUpload from '../upload/documents.upload';\nimport CompetitionsComponent from '../competitions'; // define types for error handling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetFormInputs = {\n  name: 'name',\n  sex: 'sex',\n  species: 'species',\n  breed: 'breed'\n};\n\nconst PetInformationForm = ({\n  nameProp,\n  nicknameProp,\n  sexProp,\n  breedProp,\n  speciesProp,\n  priceProp,\n  birthDateProp,\n  ...props\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    name,\n    setName\n  } = nameProp;\n  const {\n    nickname,\n    setNickname\n  } = nicknameProp;\n  const {\n    sex,\n    setSex\n  } = sexProp;\n  const {\n    breed,\n    setBreed\n  } = breedProp;\n  const {\n    species,\n    setSpecies\n  } = speciesProp;\n  const {\n    price,\n    setPrice\n  } = priceProp;\n  const {\n    birthDate,\n    setBirthDate\n  } = birthDateProp;\n  const [errors, setErrors] = useState({\n    name: false,\n    nickname: false,\n    sex: false,\n    species: false,\n    breed: false\n  });\n  const validationErrors = {\n    name: 'Name is required',\n    nickname: 'Nickname is required',\n    sex: 'Sex is required',\n    species: 'Species is required',\n    breed: 'Breed is required'\n  }; // validate fields\n\n  const validate = (type, value) => {\n    let temp = { ...errors\n    };\n\n    if (value === '') {\n      temp[type] = true;\n    } else {\n      temp[type] = false;\n    }\n\n    setErrors({ ...temp\n    });\n  }; // handle variable changes\n\n\n  const handleNameChange = e => {\n    validate(PetFormInputs.name, e.target.value);\n    setName(e.target.value);\n  };\n\n  const handleNicknameChange = e => setNickname(e.target.value);\n\n  const handleSexChange = e => {\n    validate(PetFormInputs.sex, e.target.value);\n    setSex(e.target.value);\n  };\n\n  const handlePriceChange = e => setPrice(e.target.value);\n\n  const handleDateChange = date => setBirthDate(date);\n\n  const handleSpeciesChange = e => {\n    validate(PetFormInputs.species, e.target.value);\n    setSpecies(e.target.value);\n  };\n\n  const handleBreedChange = e => {\n    validate(PetFormInputs.breed, e.target.value);\n    setBreed(e.target.value);\n  }; // sort breeds data\n\n\n  const sortedDogBreeds = breeds.dog.sort((a, b) => a.localeCompare(b));\n  const sortedCatBreeds = breeds.cat.sort((a, b) => a.localeCompare(b));\n  const sortedHorseBreeds = breeds.horse.sort((a, b) => a.localeCompare(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.title,\n            children: \"Information about your pet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  required: true,\n                  id: \"name\",\n                  name: \"name\",\n                  value: name,\n                  onChange: handleNameChange,\n                  onBlur: handleNameChange,\n                  label: \"Official Name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...(errors[PetFormInputs.name] && {\n                    error: true,\n                    helperText: validationErrors[PetFormInputs.name]\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  id: \"nickname\",\n                  name: \"nickname\",\n                  value: nickname,\n                  onChange: handleNicknameChange,\n                  onBlur: handleNicknameChange,\n                  label: \"Nickname\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...(errors[PetFormInputs.nickname] && {\n                    error: true,\n                    helperText: validationErrors[PetFormInputs.nickname]\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  required: true,\n                  disableToolbar: true,\n                  id: \"date-picker\",\n                  inputVariant: \"outlined\",\n                  size: \"small\",\n                  variant: \"dialog\",\n                  format: \"dd.MM.yyyy\",\n                  margin: \"none\",\n                  label: \"Birth Date\",\n                  maxDate: new Date(),\n                  value: birthDate,\n                  onChange: handleDateChange,\n                  KeyboardButtonProps: {\n                    'aria-label': 'change date'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  variant: \"outlined\",\n                  size: \"small\",\n                  fullWidth: true,\n                  error: errors[PetFormInputs.sex],\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"sex-label\",\n                    children: \"Sex\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"Sex\",\n                    id: \"sex\",\n                    value: sex,\n                    onChange: handleSexChange,\n                    onBlur: handleSexChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'female',\n                      children: \"female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'male',\n                      children: \"male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: errors[PetFormInputs.sex] && validationErrors[PetFormInputs.sex]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  variant: \"outlined\",\n                  size: \"small\",\n                  fullWidth: true,\n                  error: errors[PetFormInputs.species],\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"species-label\",\n                    children: \"Species\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"Species\",\n                    id: \"species\",\n                    value: species,\n                    onChange: handleSpeciesChange,\n                    onBlur: handleSpeciesChange,\n                    children: Object.keys(breeds).map(value => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: value,\n                        children: value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 56\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: errors[PetFormInputs.species] && validationErrors[PetFormInputs.species]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  variant: \"outlined\",\n                  size: \"small\",\n                  fullWidth: true,\n                  error: errors[PetFormInputs.breed],\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"breed-label\",\n                    children: \"Breed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"Breed\",\n                    id: \"breed\",\n                    value: breed,\n                    onChange: handleBreedChange,\n                    onBlur: handleBreedChange,\n                    children: species === 'dog' ? sortedDogBreeds.map(breed => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: breed,\n                        children: breed\n                      }, breed, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 60\n                      }, this);\n                    }) : species === 'cat' ? sortedCatBreeds.map(breed => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: breed,\n                        children: breed\n                      }, breed, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 64\n                      }, this);\n                    }) : species === 'horse' ? sortedHorseBreeds.map(breed => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: breed,\n                        children: breed\n                      }, breed, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 68\n                      }, this);\n                    }) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: errors[PetFormInputs.breed] && validationErrors[PetFormInputs.breed]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(CompetitionsComponent, {\n                  mode: props.mode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: classes.label,\n                    children: \"Upload Documents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DocumentsUpload, {\n                  mode: props.mode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  size: \"small\",\n                  id: \"price\",\n                  name: \"price\",\n                  value: price,\n                  onChange: handlePriceChange,\n                  label: \"Price\",\n                  variant: \"outlined\",\n                  type: \"number\",\n                  error: price < 0,\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: \"\\u20AC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 59\n                    }, this),\n                    inputProps: {\n                      min: 0\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetInformationForm, \"+WYfFZYjd0mxpBJVjV5+5SRJPVQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = PetInformationForm;\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    flex: 1,\n    width: 'auto',\n    maxWidth: 800,\n    margin: 10\n  },\n  paper: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2)\n    }\n  },\n  label: {\n    display: 'flex',\n    fontSize: 16,\n    fontWeight: 500,\n    marginBottom: 15,\n    marginTop: 15\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 22,\n    fontWeight: 500,\n    marginBottom: 15,\n    marginTop: 15\n  }\n}));\nexport default PetInformationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetInformationForm\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/forms/pet-info.form.js"],"names":["React","useState","DateFnsUtils","makeStyles","KeyboardDatePicker","MuiPickersUtilsProvider","FormControl","Grid","InputLabel","InputAdornment","MenuItem","Select","TextField","Paper","Divider","FormHelperText","breeds","DocumentsUpload","CompetitionsComponent","PetFormInputs","name","sex","species","breed","PetInformationForm","nameProp","nicknameProp","sexProp","breedProp","speciesProp","priceProp","birthDateProp","props","classes","useStyles","setName","nickname","setNickname","setSex","setBreed","setSpecies","price","setPrice","birthDate","setBirthDate","errors","setErrors","validationErrors","validate","type","value","temp","handleNameChange","e","target","handleNicknameChange","handleSexChange","handlePriceChange","handleDateChange","date","handleSpeciesChange","handleBreedChange","sortedDogBreeds","dog","sort","a","b","localeCompare","sortedCatBreeds","cat","sortedHorseBreeds","horse","layout","paper","title","error","helperText","Date","Object","keys","map","mode","label","endAdornment","inputProps","min","theme","flex","width","maxWidth","margin","marginTop","spacing","marginBottom","padding","breakpoints","down","display","fontSize","fontWeight","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React, { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { FormControl, Grid, InputLabel, InputAdornment, MenuItem, Select, TextField, Paper, Divider, FormHelperText } from '@material-ui/core';\nimport { breeds } from 'helper/data/breeds';\nimport DocumentsUpload from '../upload/documents.upload';\nimport CompetitionsComponent from '../competitions';\n\n// define types for error handling\nconst PetFormInputs = {\n    name: 'name',\n    sex: 'sex',\n    species: 'species',\n    breed: 'breed',\n};\n\nconst PetInformationForm = ({ nameProp, nicknameProp, sexProp, breedProp, speciesProp, priceProp, birthDateProp, ...props }) => {\n    const classes = useStyles();\n    const { name, setName } = nameProp;\n    const { nickname, setNickname } = nicknameProp;\n    const { sex, setSex } = sexProp;\n    const { breed, setBreed } = breedProp;\n    const { species, setSpecies } = speciesProp;\n    const { price, setPrice } = priceProp;\n    const { birthDate, setBirthDate } = birthDateProp;\n    const [errors, setErrors] = useState({ name: false, nickname: false, sex: false, species: false, breed: false });\n\n    const validationErrors = {\n        name: 'Name is required',\n        nickname: 'Nickname is required',\n        sex: 'Sex is required',\n        species: 'Species is required',\n        breed: 'Breed is required',\n    };\n\n    // validate fields\n    const validate = (type, value) => {\n        let temp = { ...errors };\n        if (value === '') {\n            temp[type] = true;\n        } else {\n            temp[type] = false;\n        }\n        setErrors({ ...temp });\n    };\n\n    // handle variable changes\n    const handleNameChange = (e) => {\n        validate(PetFormInputs.name, e.target.value);\n        setName(e.target.value);\n    };\n    const handleNicknameChange = (e) => setNickname(e.target.value);\n\n    const handleSexChange = (e) => {\n        validate(PetFormInputs.sex, e.target.value);\n        setSex(e.target.value);\n    };\n    const handlePriceChange = (e) => setPrice(e.target.value);\n\n    const handleDateChange = (date) => setBirthDate(date);\n\n    const handleSpeciesChange = (e) => {\n        validate(PetFormInputs.species, e.target.value);\n        setSpecies(e.target.value);\n    };\n    const handleBreedChange = (e) => {\n        validate(PetFormInputs.breed, e.target.value);\n        setBreed(e.target.value);\n    };\n\n    // sort breeds data\n    const sortedDogBreeds = breeds.dog.sort((a, b) => a.localeCompare(b));\n    const sortedCatBreeds = breeds.cat.sort((a, b) => a.localeCompare(b));\n    const sortedHorseBreeds = breeds.horse.sort((a, b) => a.localeCompare(b));\n\n    return (\n        <div className={classes.layout}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <form autoComplete=\"off\">\n                    <Paper className={classes.paper}>\n                        <label className={classes.title}>Information about your pet</label>\n                        <React.Fragment>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        size=\"small\"\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={handleNameChange}\n                                        onBlur={handleNameChange}\n                                        label=\"Official Name\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        {...(errors[PetFormInputs.name] && { error: true, helperText: validationErrors[PetFormInputs.name] })}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        size=\"small\"\n                                        id=\"nickname\"\n                                        name=\"nickname\"\n                                        value={nickname}\n                                        onChange={handleNicknameChange}\n                                        onBlur={handleNicknameChange}\n                                        label=\"Nickname\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        {...(errors[PetFormInputs.nickname] && { error: true, helperText: validationErrors[PetFormInputs.nickname] })}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <KeyboardDatePicker\n                                        required\n                                        disableToolbar\n                                        id=\"date-picker\"\n                                        inputVariant=\"outlined\"\n                                        size=\"small\"\n                                        variant=\"dialog\"\n                                        format=\"dd.MM.yyyy\"\n                                        margin=\"none\"\n                                        label=\"Birth Date\"\n                                        maxDate={new Date()}\n                                        value={birthDate}\n                                        onChange={handleDateChange}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change date',\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[PetFormInputs.sex]}>\n                                        <InputLabel id=\"sex-label\">Sex</InputLabel>\n                                        <Select label=\"Sex\" id=\"sex\" value={sex} onChange={handleSexChange} onBlur={handleSexChange}>\n                                            <MenuItem value={'female'}>female</MenuItem>\n                                            <MenuItem value={'male'}>male</MenuItem>\n                                        </Select>\n                                        <FormHelperText>{errors[PetFormInputs.sex] && validationErrors[PetFormInputs.sex]}</FormHelperText>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[PetFormInputs.species]}>\n                                        <InputLabel id=\"species-label\">Species</InputLabel>\n                                        <Select label=\"Species\" id=\"species\" value={species} onChange={handleSpeciesChange} onBlur={handleSpeciesChange}>\n                                            {Object.keys(breeds).map((value) => {\n                                                return <MenuItem key={value} value={value}>{value}</MenuItem>\n                                            })}\n                                        </Select>\n                                        <FormHelperText>{errors[PetFormInputs.species] && validationErrors[PetFormInputs.species]}</FormHelperText>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[PetFormInputs.breed]}>\n                                        <InputLabel id=\"breed-label\">Breed</InputLabel>\n                                        <Select label=\"Breed\" id=\"breed\" value={breed} onChange={handleBreedChange} onBlur={handleBreedChange}>\n                                            {species === 'dog'\n                                                ? sortedDogBreeds.map((breed) => {\n                                                    return <MenuItem key={breed} value={breed}>{breed}</MenuItem>;\n                                                })\n                                                : species === 'cat'\n                                                    ? sortedCatBreeds.map((breed) => {\n                                                        return <MenuItem key={breed} value={breed}>{breed}</MenuItem>;\n                                                    })\n                                                    : species === 'horse'\n                                                        ? sortedHorseBreeds.map((breed) => {\n                                                            return <MenuItem key={breed} value={breed}>{breed}</MenuItem>;\n                                                        })\n                                                        : null}\n                                        </Select>\n                                        <FormHelperText>{errors[PetFormInputs.breed] && validationErrors[PetFormInputs.breed]}</FormHelperText>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <CompetitionsComponent mode={props.mode} />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Divider />\n                                    <Grid>\n                                        <label className={classes.label}>Upload Documents</label>\n                                    </Grid>\n                                    <DocumentsUpload mode={props.mode} />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        size=\"small\"\n                                        id=\"price\"\n                                        name=\"price\"\n                                        value={price}\n                                        onChange={handlePriceChange}\n                                        label=\"Price\"\n                                        variant=\"outlined\"\n                                        type=\"number\"\n                                        error={price < 0}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n                                            inputProps: {\n                                                min: 0,\n                                            },\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </React.Fragment>\n                    </Paper>\n                </form>\n            </MuiPickersUtilsProvider>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        flex: 1,\n        width: 'auto',\n        maxWidth: 800,\n        margin: 10,\n    },\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n            padding: theme.spacing(2),\n        },\n    },\n    label: {\n        display: 'flex',\n        fontSize: 16,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 22,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n}));\n\nexport default PetInformationForm;\n"]},"metadata":{},"sourceType":"module"}