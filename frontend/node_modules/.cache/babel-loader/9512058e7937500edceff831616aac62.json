{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/EmailConfirmationView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport EmailConfirmationComponent from '../components/EmailConfirmationComponent';\nimport { confirmEmail } from '../redux/actions';\n/**\n * For having an internal scroll container\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmailConfirmationView(props) {\n  _s();\n\n  //const [message, setMessage] = React.useState(\"Confirming your email adress...\");\n  const confirmation = useSelector(state => state.confirmation);\n  console.log(props.match);\n\n  function onMove() {\n    props.history.push('/');\n  }\n\n  useEffect(() => {\n    props.dispatch(confirmEmail(props.match.params.email, props.match.params.token));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(EmailConfirmationComponent, {\n    confirmation: confirmation,\n    onMove: onMove\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EmailConfirmationView, \"m3cB6tuCfblx1kxN0ym1p/dbfVU=\", false, function () {\n  return [useSelector];\n});\n\n_c = EmailConfirmationView;\nexport default connect()(EmailConfirmationView);\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailConfirmationView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/EmailConfirmationView.js"],"names":["React","useEffect","connect","useSelector","EmailConfirmationComponent","confirmEmail","EmailConfirmationView","props","confirmation","state","console","log","match","onMove","history","push","dispatch","params","email","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,0BAAP,MAAuC,0CAAvC;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA;AACA;AACA;AACA;;;;AACA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAClC;AACA,QAAMC,YAAY,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAlB;;AAEA,WAASC,MAAT,GAAkB;AACdN,IAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACS,QAAN,CAAeX,YAAY,CAACE,KAAK,CAACK,KAAN,CAAYK,MAAZ,CAAmBC,KAApB,EAA2BX,KAAK,CAACK,KAAN,CAAYK,MAAZ,CAAmBE,KAA9C,CAA3B;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO,QAAC,0BAAD;AAA4B,IAAA,YAAY,EAAEX,YAA1C;AAAwD,IAAA,MAAM,EAAEK;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAfQP,qB;UAEgBH,W;;;KAFhBG,qB;AAgBT,eAAeJ,OAAO,GAAGI,qBAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { connect, useSelector } from 'react-redux';\nimport EmailConfirmationComponent from '../components/EmailConfirmationComponent';\n\nimport { confirmEmail } from '../redux/actions';\n/**\n * For having an internal scroll container\n * @param {props} props\n */\nfunction EmailConfirmationView(props) {\n    //const [message, setMessage] = React.useState(\"Confirming your email adress...\");\n    const confirmation = useSelector((state) => state.confirmation);\n\n    console.log(props.match)\n\n    function onMove() {\n        props.history.push('/');\n    }\n\n    useEffect(() => {\n        props.dispatch(confirmEmail(props.match.params.email, props.match.params.token));\n    }, []);\n\n    return <EmailConfirmationComponent confirmation={confirmation} onMove={onMove} />;\n}\nexport default connect()(EmailConfirmationView);\n"]},"metadata":{},"sourceType":"module"}