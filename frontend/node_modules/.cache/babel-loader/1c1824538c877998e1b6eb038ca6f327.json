{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ScrollContainer from \"./components/ScrollContainer\";\nimport reducers from \"./redux/reducers\";\nimport routes from \"./routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AppTheme from \"./theming/themetypes\";\nimport AppThemeOptions from \"./theming/themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appRoot: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles(); // set document title\n\n  useEffect(() => {\n    document.title = \"Movie Database App\";\n  }, []); // create store for redux\n\n  const store = createStore(reducers, applyMiddleware(thunkMiddleware)); // theme for app\n\n  const [theme, setTheme] = React.useState(AppTheme.LIGHT); // toggle theme\n\n  const toggleTheme = () => {\n    setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.appRoot,\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: createMuiTheme(AppThemeOptions[theme]),\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            darkmode: theme === AppTheme.DARK,\n            toggletheme: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ScrollContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(Route, { ...route\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"F3oeEHWKVpfHYOTkE1/uUkg86uQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/App.js"],"names":["React","useEffect","Route","Switch","Provider","createStore","applyMiddleware","thunkMiddleware","MuiThemeProvider","createMuiTheme","makeStyles","CssBaseline","ScrollContainer","reducers","routes","Header","Footer","AppTheme","AppThemeOptions","useStyles","theme","appRoot","height","display","flexDirection","App","classes","document","title","store","setTheme","useState","LIGHT","toggleTheme","DARK","map","route","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,UAHJ,QAIO,0BAJP;AAKA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE;AAHV;AAD4B,CAAZ,CAAD,CAA5B;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,OAAO,GAAGP,SAAS,EAAzB,CADW,CAGX;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAACC,KAAT,GAAiB,oBAAjB;AACH,GAFQ,EAEN,EAFM,CAAT,CAJW,CAQX;;AACA,QAAMC,KAAK,GAAGxB,WAAW,CAACQ,QAAD,EAAWP,eAAe,CAACC,eAAD,CAA1B,CAAzB,CATW,CAWX;;AACA,QAAM,CAACa,KAAD,EAAQU,QAAR,IAAoB9B,KAAK,CAAC+B,QAAN,CAAed,QAAQ,CAACe,KAAxB,CAA1B,CAZW,CAcX;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBH,IAAAA,QAAQ,CAACV,KAAK,KAAKH,QAAQ,CAACe,KAAnB,GAA2Bf,QAAQ,CAACiB,IAApC,GAA2CjB,QAAQ,CAACe,KAArD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACL,OAAxB;AAAA,2BACI,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEZ,cAAc,CAACS,eAAe,CAACE,KAAD,CAAhB,CAAvC;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAES,KAAjB;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD,CAAO,QAAP;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,QAAQ,EAAET,KAAK,KAAKH,QAAQ,CAACiB,IADjC;AAEI,YAAA,WAAW,EAAED;AAFjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,eAAD;AAAA,oCACI,QAAC,MAAD;AAAA,wBACKnB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACR,QAAC,KAAD,OAAmBD;AAAnB,iBAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA1CQZ,G;UACWN,S;;;KADXM,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n    makeStyles,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ScrollContainer from \"./components/ScrollContainer\";\n\nimport reducers from \"./redux/reducers\";\nimport routes from \"./routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AppTheme from \"./theming/themetypes\";\nimport AppThemeOptions from \"./theming/themes\";\n\nconst useStyles = makeStyles((theme) => ({\n    appRoot: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    // set document title\n    useEffect(() => {\n        document.title = \"Movie Database App\";\n    }, []);\n\n    // create store for redux\n    const store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n    // theme for app\n    const [theme, setTheme] = React.useState(AppTheme.LIGHT);\n\n    // toggle theme\n    const toggleTheme = () => {\n        setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n    };\n\n    return (\n        <div className={classes.appRoot}>\n            <MuiThemeProvider theme={createMuiTheme(AppThemeOptions[theme])}>\n                <Provider store={store}>\n                    <CssBaseline />\n                    <React.Fragment>\n                        <Header\n                            darkmode={theme === AppTheme.DARK}\n                            toggletheme={toggleTheme}\n                        />\n                        <ScrollContainer>\n                            <Switch>\n                                {routes.map((route, i) => (\n                                    <Route key={i} {...route} />\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </ScrollContainer>\n                    </React.Fragment>\n                </Provider>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}