{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/premium/SubscriptionPlanCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  rootChosen: {\n    minWidth: 275,\n    border: `4px solid ${theme.palette.secondary.main}`\n  },\n  root: {},\n  cardHeader: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    paddingLeft: theme.spacing(3)\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(5)\n  },\n  cardContent: {\n    paddingLeft: theme.spacing(8)\n  },\n  pricing: theme.typography.h4,\n  description: theme.typography.body1,\n  features: {\n    paddingBottom: theme.spacing(2),\n    display: 'flex',\n    flexWrap: 'nowrap'\n  },\n  checkIcon: {\n    marginRight: theme.spacing(1),\n    color: '#C0E189'\n  },\n  crownIcon: {\n    color: theme.palette.secondary.main\n  },\n  cancelIcon: {\n    marginRight: theme.spacing(1),\n    color: '#F96149'\n  }\n}));\n/**\n * For choosing and presenting subscription plan \n * @param {props} props\n */\n\nfunction SubscriptionPlanCard(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: props.subscriptionPlan === props.plan.id ? classes.rootChosen : classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: props.plan.title,\n        titleTypographyProps: {\n          align: 'center'\n        },\n        subheaderTypographyProps: {\n          align: 'center'\n        },\n        action: props.plan.id === 'premium' ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCrown,\n          size: \"lg\",\n          className: classes.crownIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n        className: classes.cardHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cardPricing,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            className: classes.pricing,\n            color: \"textPrimary\",\n            children: [props.plan.price, \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: \"/mo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cardContent,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [props.plan.included.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.features + \" \" + classes.description,\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                    className: classes.checkIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this), line]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)\n              }, `${line}_${props.plan.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)\n            }, `${line}_${props.plan.id}div`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)), props.plan.excluded.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.features + \" \" + classes.description,\n                  children: [/*#__PURE__*/_jsxDEV(CancelIcon, {\n                    className: classes.cancelIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this), line]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this)\n              }, `${line}_${props.plan.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, `${line}_${props.plan.id}div`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          color: props.subscriptionPlan === props.plan.id ? 'secondary' : 'primary',\n          onClick: props.onClick,\n          children: props.subscriptionPlan === props.plan.id ? 'YOUR CHOICE' : 'CHOOSE'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, props.plan.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubscriptionPlanCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SubscriptionPlanCard;\nSubscriptionPlanCard.propTypes = {\n  plan: PropTypes.object,\n  onClick: PropTypes.func,\n  subscriptionPlan: PropTypes.string\n};\nexport default SubscriptionPlanCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscriptionPlanCard\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/premium/SubscriptionPlanCard.js"],"names":["React","Button","Card","CardActions","CardContent","CardHeader","Grid","Typography","makeStyles","PropTypes","CancelIcon","CheckCircleIcon","FontAwesomeIcon","faCrown","useStyles","theme","rootChosen","minWidth","border","palette","secondary","main","root","cardHeader","backgroundColor","type","grey","paddingLeft","spacing","cardPricing","display","justifyContent","alignItems","marginBottom","cardContent","pricing","typography","h4","description","body1","features","paddingBottom","flexWrap","checkIcon","marginRight","color","crownIcon","cancelIcon","SubscriptionPlanCard","props","classes","subscriptionPlan","plan","id","title","align","price","included","map","line","excluded","onClick","propTypes","object","func","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => ({\n    rootChosen: {\n        minWidth: 275,\n        border: `4px solid ${theme.palette.secondary.main}`,\n    },\n    root: {},\n    cardHeader: {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n        paddingLeft: theme.spacing(3)\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n        paddingLeft: theme.spacing(5)\n    },\n    cardContent: {\n        paddingLeft: theme.spacing(8),\n    },\n    pricing: theme.typography.h4,\n    description: theme.typography.body1,\n    features: {\n        paddingBottom: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'nowrap',\n    },\n    checkIcon: {\n        marginRight: theme.spacing(1),\n        color: '#C0E189',\n    },\n    crownIcon: {\n        color: theme.palette.secondary.main,\n    },\n    cancelIcon: {\n        marginRight: theme.spacing(1),\n        color: '#F96149',\n    },\n}));\n\n/**\n * For choosing and presenting subscription plan \n * @param {props} props\n */\nfunction SubscriptionPlanCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Grid item key={props.plan.title} xs={6}>\n            <Card className={props.subscriptionPlan === props.plan.id ? classes.rootChosen : classes.root}>\n                <CardHeader\n                    title={props.plan.title}\n                    titleTypographyProps={{ align: 'center' }}\n                    subheaderTypographyProps={{ align: 'center' }}\n                    action={props.plan.id === 'premium' ? <FontAwesomeIcon icon={faCrown} size={\"lg\"} className={classes.crownIcon} /> : <></>}\n                    className={classes.cardHeader}\n                />\n                <CardContent>\n                    <div className={classes.cardPricing}>\n                        <Typography component=\"h2\" className={classes.pricing} color=\"textPrimary\">\n                        {props.plan.price} €\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            /mo\n                        </Typography>\n                    </div>\n                    <div className={classes.cardContent}>\n                        <ul>\n                            {props.plan.included.map((line) => (\n                                <div key={`${line}_${props.plan.id}div`}>\n                                    <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                        <div className={classes.features + \" \" + classes.description}>\n                                            <CheckCircleIcon  className={classes.checkIcon} />\n                                            {line}\n                                        </div>\n                                    </Typography>\n                                </div>\n                            ))}      \n                            {props.plan.excluded.map((line) => (\n                                <div key={`${line}_${props.plan.id}div`}>\n                                    <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                        <div className={classes.features + \" \" + classes.description}>\n                                            <CancelIcon className={classes.cancelIcon}/>\n                                            {line}\n                                        </div>\n                                    </Typography>\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button fullWidth variant=\"contained\" color={props.subscriptionPlan === props.plan.id ? 'secondary' : 'primary'} onClick={props.onClick}>\n                        {props.subscriptionPlan === props.plan.id ? 'YOUR CHOICE' : 'CHOOSE'}\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n\nSubscriptionPlanCard.propTypes = {\n    plan: PropTypes.object,\n    onClick: PropTypes.func,\n    subscriptionPlan: PropTypes.string,\n};\n\nexport default SubscriptionPlanCard;\n"]},"metadata":{},"sourceType":"module"}