{"ast":null,"code":"import _objectSpread from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Button,Chip,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,FormControl,IconButton,InputLabel,makeStyles,MenuItem,Select}from'@material-ui/core';import DoneIcon from'@material-ui/icons/Done';import CloseIcon from'@material-ui/icons/Close';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var STATUS_TYPE={PENDING:'pending',SUCCESS:'success',FAIL:'fail'};var VARIANT_TYPE={SENDER:'sender',RECEIVER:'receiver',DEFAULT:'default'};var AdminStatusTag=function AdminStatusTag(props){var classes=useStyles();var status=props.status,variant=props.variant,confirm=props.confirm,transaction=props.transaction;var _useState=useState(status),_useState2=_slicedToArray(_useState,2),tagStatus=_useState2[0],setTagStatus=_useState2[1];var _useState3=useState(status),_useState4=_slicedToArray(_useState3,2),statusToChange=_useState4[0],setStatusToChange=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tagClicked=_useState6[0],setTagClicked=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),open=_useState8[0],setOpen=_useState8[1];var color=function color(){switch(status){case STATUS_TYPE.PENDING:return{color:'orange',background:'white',borderColor:'#FDCD7F'};case STATUS_TYPE.SUCCESS:return{color:'green',background:'white',borderColor:'#A1CF6B'};case STATUS_TYPE.FAIL:return{color:'red',background:'white',borderColor:'#E87461'};default:return{color:'orange',background:'white',borderColor:'orange'};}};useEffect(function(){setTagStatus(status);setStatusToChange(status);},[status]);var handleStatusChange=function handleStatusChange(event){var status=event.target.value;setStatusToChange(status);};var handleClose=function handleClose(){setOpen(false);setStatusToChange(tagStatus);setTagClicked(false);};var handleConfirm=function handleConfirm(){var transactionCopy=transaction;switch(variant){case VARIANT_TYPE.SENDER:transactionCopy.senderResponse=statusToChange;break;case VARIANT_TYPE.RECEIVER:transactionCopy.receiverResponse=statusToChange;break;case VARIANT_TYPE.DEFAULT:transactionCopy.status=statusToChange;break;default:transactionCopy.status=statusToChange;break;}confirm(transactionCopy);setTagStatus(statusToChange);setTagClicked(false);};var openTag=function openTag(){return setTagClicked(true);};return/*#__PURE__*/_jsxs(_Fragment,{children:[!tagClicked?/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",label:tagStatus.toUpperCase(),style:_objectSpread(_objectSpread({},color()),{},{borderWidth:2,fontWeight:'lighter'}),onClick:openTag},tagStatus):/*#__PURE__*/_jsxs(\"div\",{className:classes.layout,children:[/*#__PURE__*/_jsxs(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"response-label\",children:\"Response\"}),/*#__PURE__*/_jsxs(Select,{label:\"Response\",id:\"response\",value:statusToChange,onChange:handleStatusChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.PENDING,children:STATUS_TYPE.PENDING}),/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.SUCCESS,children:STATUS_TYPE.SUCCESS}),/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.FAIL,children:STATUS_TYPE.FAIL})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.buttons,children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleConfirm,children:/*#__PURE__*/_jsx(DoneIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",color:\"primary\",children:'Confirm Action'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{color:\"primary\",id:\"alert-dialog-description\",children:\"Please confirm you want to officially change the status.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,variant:\"outlined\",color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirm,variant:\"contained\",color:\"primary\",autoFocus:true,children:\"Confirm\"})]})]})]});};var useStyles=makeStyles(function(theme){return{layout:{display:'flex',justifyContent:'center'},buttons:{display:'flex',justifyContent:'center',paddingLeft:10}};});export default AdminStatusTag;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js"],"names":["React","useEffect","useState","Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","IconButton","InputLabel","makeStyles","MenuItem","Select","DoneIcon","CloseIcon","STATUS_TYPE","PENDING","SUCCESS","FAIL","VARIANT_TYPE","SENDER","RECEIVER","DEFAULT","AdminStatusTag","props","classes","useStyles","status","variant","confirm","transaction","tagStatus","setTagStatus","statusToChange","setStatusToChange","tagClicked","setTagClicked","open","setOpen","color","background","borderColor","handleStatusChange","event","target","value","handleClose","handleConfirm","transactionCopy","senderResponse","receiverResponse","openTag","toUpperCase","borderWidth","fontWeight","layout","buttons","theme","display","justifyContent","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, IconButton, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst STATUS_TYPE = {\n    PENDING: 'pending',\n    SUCCESS: 'success',\n    FAIL: 'fail',\n};\n\nconst VARIANT_TYPE = {\n    SENDER: 'sender',\n    RECEIVER: 'receiver',\n    DEFAULT: 'default',\n};\n\nconst AdminStatusTag = (props) => {\n    const classes = useStyles();\n    const { status, variant, confirm, transaction } = props;\n\n    const [tagStatus, setTagStatus] = useState(status);\n    const [statusToChange, setStatusToChange] = useState(status);\n    const [tagClicked, setTagClicked] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const color = () => {\n        switch (status) {\n            case STATUS_TYPE.PENDING:\n                return { color: 'orange', background: 'white', borderColor: '#FDCD7F' };\n            case STATUS_TYPE.SUCCESS:\n                return { color: 'green', background: 'white', borderColor: '#A1CF6B' };\n            case STATUS_TYPE.FAIL:\n                return { color: 'red', background: 'white', borderColor: '#E87461' };\n            default:\n                return { color: 'orange', background: 'white', borderColor: 'orange' };\n        }\n    };\n\n    useEffect(() => {\n        setTagStatus(status);\n        setStatusToChange(status);\n    }, [status]);\n\n    const handleStatusChange = (event) => {\n        const status = event.target.value;\n        setStatusToChange(status);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setStatusToChange(tagStatus);\n        setTagClicked(false);\n    };\n\n    const handleConfirm = () => {\n        let transactionCopy = transaction;\n        switch (variant) {\n            case VARIANT_TYPE.SENDER:\n                transactionCopy.senderResponse = statusToChange;\n                break;\n            case VARIANT_TYPE.RECEIVER:\n                transactionCopy.receiverResponse = statusToChange;\n                break;\n            case VARIANT_TYPE.DEFAULT:\n                transactionCopy.status = statusToChange;\n                break;\n            default:\n                transactionCopy.status = statusToChange;\n                break;\n        }\n\n        confirm(transactionCopy);\n\n        setTagStatus(statusToChange);\n        setTagClicked(false);\n    };\n\n    const openTag = () => setTagClicked(true);\n\n    return (\n        <>\n            {!tagClicked ? (\n                <Chip variant=\"outlined\" key={tagStatus} label={tagStatus.toUpperCase()} style={{ ...color(), borderWidth: 2, fontWeight: 'lighter' }} onClick={openTag} />\n            ) : (\n                <div className={classes.layout}>\n                    <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                        <InputLabel id=\"response-label\">Response</InputLabel>\n                        <Select label=\"Response\" id=\"response\" value={statusToChange} onChange={handleStatusChange}>\n                            <MenuItem value={STATUS_TYPE.PENDING}>{STATUS_TYPE.PENDING}</MenuItem>\n                            <MenuItem value={STATUS_TYPE.SUCCESS}>{STATUS_TYPE.SUCCESS}</MenuItem>\n                            <MenuItem value={STATUS_TYPE.FAIL}>{STATUS_TYPE.FAIL}</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <div className={classes.buttons}>\n                        <IconButton size=\"small\" onClick={handleConfirm}>\n                            <DoneIcon />\n                        </IconButton>\n                        <IconButton size=\"small\" onClick={handleClose}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            )}\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\" color=\"primary\">{'Confirm Action'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText color=\"primary\" id=\"alert-dialog-description\">Please confirm you want to officially change the status.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\" autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingLeft: 10,\n    },\n}));\n\nexport default AdminStatusTag;\n"]},"metadata":{},"sourceType":"module"}