{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuitem: {\n    display: 'flex',\n    minWidth: '200px'\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  }\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\n\nfunction KebabMenu(props) {\n  _s();\n\n  const classes = useStyles(); // return the currnetly logged in user from redux store\n\n  const user = useUser();\n\n  const onClickLogin = () => {\n    // close this menu\n    props.onClose(); // navigate to the login page\n\n    props.history.push('/login');\n  };\n\n  const onClickLogout = () => {\n    // trigger redux logout action\n    props.dispatch(logout()); // close this menu\n\n    props.onClose(); // navigate to the home page\n\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    open: props.open,\n    anchorEl: props.anchor,\n    onClose: props.onClose,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    children: user ? [/*#__PURE__*/_jsxDEV(MenuItem, {\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: user.username ? user.username[0] : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), user.username]\n    }, \"user\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogout,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this), \"Logout\"]\n    }, \"logout\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)] : [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogin,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), \"Login\"]\n    }, \"login\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(KebabMenu, \"kSsZVLCNw+urhXAfNQbCKABgZNM=\", false, function () {\n  return [useStyles, useUser];\n});\n\n_c = KebabMenu;\nKebabMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.element,\n  open: PropTypes.bool.isRequired\n};\nexport default connect()(withRouter(KebabMenu));\n\nvar _c;\n\n$RefreshReg$(_c, \"KebabMenu\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js"],"names":["React","useEffect","makeStyles","PropTypes","withRouter","logout","Menu","MenuItem","Avatar","Divider","connect","ExitToAppIcon","VerifiedUserIcon","useUser","useStyles","theme","menuitem","display","minWidth","avatar","marginRight","spacing","KebabMenu","props","classes","user","onClickLogin","onClose","history","push","onClickLogout","dispatch","open","anchor","vertical","horizontal","username","propTypes","func","isRequired","element","bool"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: 'flex',\n        minWidth: '200px',\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n    // return the currnetly logged in user from redux store\n    const user = useUser();\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push('/login');\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push('/');\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            {user\n                ? [\n                      <MenuItem key=\"user\" className={classes.menuitem}>\n                          <Avatar className={classes.avatar}>{user.username ? user.username[0] : ''}</Avatar>\n                          {user.username}\n                      </MenuItem>,\n                      <Divider key=\"divider\" />,\n                      <MenuItem key=\"logout\" onClick={onClickLogout} className={classes.menuitem}>\n                          <ExitToAppIcon className={classes.avatar} />\n                          Logout\n                      </MenuItem>,\n                  ]\n                : [\n                      <MenuItem key=\"login\" onClick={onClickLogin} className={classes.menuitem}>\n                          <VerifiedUserIcon className={classes.avatar} />\n                          Login\n                      </MenuItem>,\n                  ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}