{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import Card from'@material-ui/core/Card';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import CardHeader from'@material-ui/core/CardHeader';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import CancelIcon from'@material-ui/icons/Cancel';import CheckCircleIcon from'@material-ui/icons/CheckCircle';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCrown}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{rootChosen:{minWidth:275,border:\"4px solid \".concat(theme.palette.secondary.main)},root:{},cardHeader:{backgroundColor:theme.palette.type==='light'?theme.palette.grey[200]:theme.palette.grey[700],paddingLeft:theme.spacing(3)},cardPricing:{display:'flex',justifyContent:'center',alignItems:'baseline',marginBottom:theme.spacing(2),paddingLeft:theme.spacing(5)},cardContent:{paddingLeft:theme.spacing(8)},pricing:theme.typography.h4,description:theme.typography.body1,features:{paddingBottom:theme.spacing(2),display:'flex',flexWrap:'nowrap',alignItems:'center'},button:{padding:20},checkIcon:{marginRight:theme.spacing(1),color:'#C0E189'},crownIcon:{color:theme.palette.secondary.main},cancelIcon:{marginRight:theme.spacing(1),color:'#F96149'},cardActions:{padding:theme.spacing(2)}};});/**\n * For choosing and presenting subscription plan\n * @param {props} props\n */function SubscriptionPlanCard(props){var classes=useStyles();var isPremium=props.plan.id==='premium';return/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Card,{className:\"\".concat(props.subscriptionPlan===props.plan.id?classes.rootChosen:classes.root,\" \",'resize-on-hover'),children:[/*#__PURE__*/_jsx(CardHeader,{title:props.plan.title,titleTypographyProps:{align:'center'},subheaderTypographyProps:{align:'center'},action:props.plan.id==='premium'?/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCrown,size:\"lg\",className:classes.crownIcon}):/*#__PURE__*/_jsx(_Fragment,{}),className:classes.cardHeader}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.cardPricing,children:[/*#__PURE__*/_jsx(Typography,{component:\"h2\",className:classes.pricing,color:\"textPrimary\",children:props.plan.id===\"premium\"?\"\".concat(props.plan.price,\" \\u20AC/mo\"):\"\".concat(props.plan.price,\" \\u20AC\")}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\"})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.cardContent,children:/*#__PURE__*/_jsxs(\"ul\",{children:[props.plan.included.map(function(line){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.features+\" \"+classes.description,children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:classes.checkIcon}),line]})},\"\".concat(line,\"_\").concat(props.plan.id))},\"\".concat(line,\"_\").concat(props.plan.id,\"div\"));}),props.plan.excluded.map(function(line){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes.features+\" \"+classes.description,children:[/*#__PURE__*/_jsx(CancelIcon,{className:classes.cancelIcon}),line]})},\"\".concat(line,\"_\").concat(props.plan.id))},\"\".concat(line,\"_\").concat(props.plan.id,\"div\"));})]})})]}),/*#__PURE__*/_jsx(CardActions,{className:classes.cardActions,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:props.subscriptionPlan===props.plan.id?'secondary':'primary',onClick:props.onClick,children:props.subscriptionPlan===props.plan.id?'YOUR CHOICE':'CHOOSE'})})]})},props.plan.title);}export default SubscriptionPlanCard;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/premium/SubscriptionPlanCard.js"],"names":["React","Button","Card","CardActions","CardContent","CardHeader","Grid","Typography","makeStyles","CancelIcon","CheckCircleIcon","FontAwesomeIcon","faCrown","useStyles","theme","rootChosen","minWidth","border","palette","secondary","main","root","cardHeader","backgroundColor","type","grey","paddingLeft","spacing","cardPricing","display","justifyContent","alignItems","marginBottom","cardContent","pricing","typography","h4","description","body1","features","paddingBottom","flexWrap","button","padding","checkIcon","marginRight","color","crownIcon","cancelIcon","cardActions","SubscriptionPlanCard","props","classes","isPremium","plan","id","subscriptionPlan","title","align","price","included","map","line","excluded","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => ({\n    rootChosen: {\n        minWidth: 275,\n        border: `4px solid ${theme.palette.secondary.main}`,\n    },\n    root: {},\n    cardHeader: {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n        paddingLeft: theme.spacing(3)\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n        paddingLeft: theme.spacing(5)\n    },\n    cardContent: {\n        paddingLeft: theme.spacing(8),\n    },\n    pricing: theme.typography.h4,\n    description: theme.typography.body1,\n    features: {\n        paddingBottom: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n    },\n    button: {\n        padding: 20,\n    },\n    checkIcon: {\n        marginRight: theme.spacing(1),\n        color: '#C0E189',\n    },\n    crownIcon: {\n        color: theme.palette.secondary.main,\n    },\n    cancelIcon: {\n        marginRight: theme.spacing(1),\n        color: '#F96149',\n    },\n    cardActions: {\n        padding: theme.spacing(2),\n    }\n}));\n\n/**\n * For choosing and presenting subscription plan\n * @param {props} props\n */\nfunction SubscriptionPlanCard(props) {\n    const classes = useStyles();\n\n    const isPremium = props.plan.id === 'premium';\n\n    return (\n        <Grid item key={props.plan.title} xs={6}>\n            <Card className={`${props.subscriptionPlan === props.plan.id ? classes.rootChosen : classes.root} ${'resize-on-hover'}`}>\n                <CardHeader\n                    title={props.plan.title}\n                    titleTypographyProps={{ align: 'center' }}\n                    subheaderTypographyProps={{ align: 'center' }}\n                    action={props.plan.id === 'premium' ? <FontAwesomeIcon icon={faCrown} size={\"lg\"} className={classes.crownIcon} /> : <></>}\n                    className={classes.cardHeader}\n                />\n                <CardContent>\n                    <div className={classes.cardPricing}>\n                        <Typography component=\"h2\" className={classes.pricing} color=\"textPrimary\">\n                            {props.plan.id === \"premium\" ? `${props.plan.price} €/mo` : `${props.plan.price} €`}\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n\n                        </Typography>\n                    </div>\n                    <div className={classes.cardContent}>\n                        <ul>\n                            {props.plan.included.map((line) => (\n                                <div key={`${line}_${props.plan.id}div`}>\n                                    <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                        <div className={classes.features + \" \" + classes.description}>\n                                            <CheckCircleIcon className={classes.checkIcon} />\n                                            {line}\n                                        </div>\n                                    </Typography>\n                                </div>\n                            ))}\n                            {props.plan.excluded.map((line) => (\n                                <div key={`${line}_${props.plan.id}div`}>\n                                    <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                        <div className={classes.features + \" \" + classes.description}>\n                                            <CancelIcon className={classes.cancelIcon} />\n                                            {line}\n                                        </div>\n                                    </Typography>\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.cardActions}>\n                    <Button fullWidth variant=\"contained\" color={props.subscriptionPlan === props.plan.id ? 'secondary' : 'primary'} onClick={props.onClick}>\n                        {props.subscriptionPlan === props.plan.id ? 'YOUR CHOICE' : 'CHOOSE'}\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n\nSubscriptionPlanCard.propTypes = {\n    plan: PropTypes.object,\n    onClick: PropTypes.func,\n    subscriptionPlan: PropTypes.string,\n};\n\nexport default SubscriptionPlanCard;\n"]},"metadata":{},"sourceType":"module"}