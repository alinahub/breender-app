{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Grid, InputLabel, Button, MenuItem, Select, TextField, FormHelperText, Divider, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    flex: 1,\n    width: 'auto',\n    maxWidth: '80%',\n    marginLeft: '10%',\n    marginRight: '10%'\n  },\n  paper: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2)\n    }\n  },\n  label: {\n    display: 'flex',\n    fontSize: 16,\n    fontWeight: 500,\n    marginBottom: 15,\n    marginTop: 15\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 22,\n    fontWeight: 500,\n    marginBottom: 15,\n    marginTop: 15\n  },\n  typography: {\n    margin: theme.spacing(2),\n    marginTop: theme.spacing(6)\n  },\n  divider: {\n    margin: theme.spacing(3)\n  },\n  typographyNotifications: {\n    padding: theme.spacing(2),\n    margin: 'auto'\n  }\n})); // define types for error handling\n\nconst UserFormInputs = {\n  username: 'username',\n  province: 'province',\n  city: 'city',\n  password: 'password',\n  password2: 'password2'\n};\nconst provincesAndCities = {\n  bavaria: ['Munich', 'Nuremberg', 'Augsburg', 'Regensburg', 'Ingolstadt', 'Würzburg'],\n  'lower-saxony': ['Hanover', 'Braunschweig', 'Oldenburg', 'Osnabrück', 'Wolfsburg', 'Göttingen'],\n  'baden-wuerttemberg': ['Stuttgart', 'Karlsruhe', 'Mannheim', 'Freiburg im Breisgau', 'Heidelberg', 'Ulm'],\n  'north-rhine-westphalia': ['Cologne', 'Düsseldorf', 'Dortmund', 'Essen', 'Duisburg', 'Bochum']\n};\nexport default function UserForm({\n  usernameProp,\n  emailProp,\n  provinceProp,\n  cityProp,\n  passwordProp,\n  password2Prop,\n  paymentMethodProp,\n  ...props\n}) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    username,\n    setUsername\n  } = usernameProp;\n  const {\n    email,\n    setEmail\n  } = emailProp;\n  const {\n    province,\n    setProvince\n  } = provinceProp;\n  const {\n    city,\n    setCity\n  } = cityProp;\n  const [errors, setErrors] = useState({\n    username: false,\n    province: false,\n    city: false\n  });\n  const {\n    password,\n    setPassword\n  } = passwordProp;\n  const {\n    password2,\n    setPassword2\n  } = password2Prop;\n  const {\n    paymentMethod,\n    setpaymentMethod\n  } = paymentMethodProp;\n  const validationErrors = {\n    username: 'Userame is required',\n    province: 'Province is required',\n    city: 'City is required'\n  };\n  let cityOptions = null;\n\n  if (province) {\n    cityOptions = provincesAndCities[province].map(elem => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: elem,\n      children: elem\n    }, elem, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this));\n  } // validate fields\n\n\n  const validate = (type, value) => {\n    let temp = { ...errors\n    };\n\n    if (type !== UserFormInputs.password && type !== UserFormInputs.password2 && value === '') {\n      temp[type] = true;\n    } else {\n      temp[type] = false;\n    }\n\n    if (type === UserFormInputs.password2) {\n      if (value !== password) {\n        temp[type] = true;\n      }\n    }\n\n    setErrors({ ...temp\n    });\n  }; // handle variable changes\n\n\n  const handleUsernameChange = e => {\n    validate(UserFormInputs.username, e.target.value);\n    setUsername(e.target.value);\n  };\n\n  const handleProvinceChange = e => {\n    validate(UserFormInputs.province, e.target.value);\n    setProvince(e.target.value);\n  };\n\n  const handleCityChange = e => {\n    validate(UserFormInputs.city, e.target.value);\n    setCity(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    validate(UserFormInputs.password, e.target.value);\n    setPassword(e.target.value);\n  };\n\n  const handlePassword2Change = e => {\n    validate(UserFormInputs.password2, e.target.value);\n    setPassword2(e.target.value);\n  };\n\n  const handleAddPet = e => {\n    history.push('/premium');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              required: true,\n              id: \"username\",\n              name: \"username\",\n              value: username,\n              onChange: handleUsernameChange,\n              onBlur: handleUsernameChange,\n              label: \"Username\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...(errors[UserFormInputs.username] && {\n                error: true,\n                helperText: validationErrors[UserFormInputs.username]\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              disabled: true,\n              id: \"email\",\n              name: \"email\",\n              value: email,\n              label: \"Email\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              error: errors[UserFormInputs.province],\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"State/Province\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"State/Province\",\n                value: province,\n                onChange: handleProvinceChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'bavaria',\n                  children: \"Bavaria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'lower-saxony',\n                  children: \"Lower Saxony\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'baden-wuerttemberg',\n                  children: \"Baden-W\\xFCrttemberg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'north-rhine-westphalia',\n                  children: \"North Rhine-Westphalia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors[UserFormInputs.province] && validationErrors[UserFormInputs.province]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              error: errors[UserFormInputs.city],\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"City\",\n                value: city,\n                onChange: handleCityChange,\n                children: cityOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors[UserFormInputs.city] && validationErrors[UserFormInputs.city]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              error: errors[UserFormInputs.province],\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                label: \"New Password\",\n                fullWidth: true,\n                value: password,\n                onChange: handlePasswordChange,\n                type: \"password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors[UserFormInputs.password] && validationErrors[UserFormInputs.password]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true,\n              error: errors[UserFormInputs.city],\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                label: \"Repeat new Password\",\n                fullWidth: true,\n                value: password2,\n                onChange: handlePassword2Change,\n                type: \"password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: errors[UserFormInputs.password2] && validationErrors[UserFormInputs.password2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              disabled: true,\n              id: \"plan\",\n              name: \"plan\",\n              value: props.subscriptionPlan === 'premium' ? \"Premium\" : \"Basic\",\n              label: \"Pricing\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: handleAddPet,\n              children: \"Adjust the plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\",\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.typography,\n          variant: \"h6\",\n          align: \"center\",\n          style: {\n            fontWeight: 600\n          },\n          children: \"Payment method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), paymentMethod ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              disabled: true,\n              id: \"plan\",\n              name: \"plan\",\n              value: paymentMethod.email,\n              label: paymentMethod.type,\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            sm: 6,\n            justify: \"space-around\",\n            alignItems: \"center\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  width: '230px'\n                },\n                color: \"secondary\",\n                onClick: handleAddPet,\n                children: \"Adjust payment method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              sm: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleAddPet,\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: '0 auto',\n            display: \"flex\"\n          },\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Add payment method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserForm, \"ozqM+7flX+VKsdlPkj36KFZVN5g=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/UserForm.js"],"names":["React","useState","useHistory","makeStyles","FormControl","Grid","InputLabel","Button","MenuItem","Select","TextField","FormHelperText","Divider","Typography","CloseIcon","useStyles","theme","layout","flex","width","maxWidth","marginLeft","marginRight","paper","marginTop","spacing","marginBottom","padding","breakpoints","down","label","display","fontSize","fontWeight","title","justifyContent","alignItems","typography","margin","divider","typographyNotifications","UserFormInputs","username","province","city","password","password2","provincesAndCities","bavaria","UserForm","usernameProp","emailProp","provinceProp","cityProp","passwordProp","password2Prop","paymentMethodProp","props","classes","history","setUsername","email","setEmail","setProvince","setCity","errors","setErrors","setPassword","setPassword2","paymentMethod","setpaymentMethod","validationErrors","cityOptions","map","elem","validate","type","value","temp","handleUsernameChange","e","target","handleProvinceChange","handleCityChange","handlePasswordChange","handlePassword2Change","handleAddPet","push","error","helperText","subscriptionPlan"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Grid, InputLabel, Button, MenuItem, Select, TextField, FormHelperText, Divider, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        flex: 1,\n        width: 'auto',\n        maxWidth: '80%',\n        marginLeft: '10%',\n        marginRight: '10%',\n    },\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n            padding: theme.spacing(2),\n        },\n    },\n    label: {\n        display: 'flex',\n        fontSize: 16,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 22,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    typography: {\n        margin: theme.spacing(2),\n        marginTop: theme.spacing(6),\n    },\n    divider: {\n        margin: theme.spacing(3),\n    },\n    typographyNotifications: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n}));\n\n// define types for error handling\nconst UserFormInputs = {\n    username: 'username',\n    province: 'province',\n    city: 'city',\n    password: 'password',\n    password2: 'password2',\n};\n\nconst provincesAndCities = {\n    bavaria: ['Munich', 'Nuremberg', 'Augsburg', 'Regensburg', 'Ingolstadt', 'Würzburg'],\n    'lower-saxony': ['Hanover', 'Braunschweig', 'Oldenburg', 'Osnabrück', 'Wolfsburg', 'Göttingen'],\n    'baden-wuerttemberg': ['Stuttgart', 'Karlsruhe', 'Mannheim', 'Freiburg im Breisgau', 'Heidelberg', 'Ulm'],\n    'north-rhine-westphalia': ['Cologne', 'Düsseldorf', 'Dortmund', 'Essen', 'Duisburg', 'Bochum'],\n};\n\nexport default function UserForm({ usernameProp, emailProp, provinceProp, cityProp, passwordProp, password2Prop, paymentMethodProp, ...props }) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { username, setUsername } = usernameProp;\n    const { email, setEmail } = emailProp;\n    const { province, setProvince } = provinceProp;\n    const { city, setCity } = cityProp;\n    const [errors, setErrors] = useState({ username: false, province: false, city: false });\n    const { password, setPassword } = passwordProp;\n    const { password2, setPassword2 } = password2Prop;\n    const { paymentMethod, setpaymentMethod } = paymentMethodProp;\n\n    const validationErrors = {\n        username: 'Userame is required',\n        province: 'Province is required',\n        city: 'City is required',\n    };\n\n    let cityOptions = null;\n\n    if (province) {\n        cityOptions = provincesAndCities[province].map((elem) => (\n            <MenuItem key={elem} value={elem}>\n                {elem}\n            </MenuItem>\n        ));\n    }\n\n    // validate fields\n    const validate = (type, value) => {\n        let temp = { ...errors };\n        if (type !== UserFormInputs.password && type !== UserFormInputs.password2 && value === '') {\n            temp[type] = true;\n        } else {\n            temp[type] = false;\n        }\n\n        if (type === UserFormInputs.password2) {\n            if (value !== password) {\n                temp[type] = true;\n            }\n        }\n        setErrors({ ...temp });\n    };\n\n    // handle variable changes\n    const handleUsernameChange = (e) => {\n        validate(UserFormInputs.username, e.target.value);\n        setUsername(e.target.value);\n    };\n    const handleProvinceChange = (e) => {\n        validate(UserFormInputs.province, e.target.value);\n        setProvince(e.target.value);\n    };\n    const handleCityChange = (e) => {\n        validate(UserFormInputs.city, e.target.value);\n        setCity(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        validate(UserFormInputs.password, e.target.value);\n        setPassword(e.target.value);\n    };\n\n    const handlePassword2Change = (e) => {\n        validate(UserFormInputs.password2, e.target.value);\n        setPassword2(e.target.value);\n    };\n\n    const handleAddPet = (e) => {\n        history.push('/premium');\n    };\n\n\n    return (\n        <div className={classes.layout}>\n            <form autoComplete=\"off\">\n                <React.Fragment>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                size=\"small\"\n                                required\n                                id=\"username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={handleUsernameChange}\n                                onBlur={handleUsernameChange}\n                                label=\"Username\"\n                                variant=\"outlined\"\n                                fullWidth\n                                {...(errors[UserFormInputs.username] && { error: true, helperText: validationErrors[UserFormInputs.username] })}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                size=\"small\"\n                                disabled\n                                id=\"email\"\n                                name=\"email\"\n                                value={email}\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.province]}>\n                                <InputLabel>State/Province</InputLabel>\n                                <Select label=\"State/Province\" value={province} onChange={handleProvinceChange}>\n                                    <MenuItem value={'bavaria'}>Bavaria</MenuItem>\n                                    <MenuItem value={'lower-saxony'}>Lower Saxony</MenuItem>\n                                    <MenuItem value={'baden-wuerttemberg'}>Baden-Württemberg</MenuItem>\n                                    <MenuItem value={'north-rhine-westphalia'}>North Rhine-Westphalia</MenuItem>\n                                </Select>\n                                <FormHelperText>{errors[UserFormInputs.province] && validationErrors[UserFormInputs.province]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.city]}>\n                                <InputLabel>City</InputLabel>\n                                <Select label=\"City\" value={city} onChange={handleCityChange}>\n                                    {cityOptions}\n                                </Select>\n                                <FormHelperText>{errors[UserFormInputs.city] && validationErrors[UserFormInputs.city]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.province]}>\n                                <TextField size=\"small\" label=\"New Password\" fullWidth value={password} onChange={handlePasswordChange} type=\"password\" variant=\"outlined\" />\n                                <FormHelperText>{errors[UserFormInputs.password] && validationErrors[UserFormInputs.password]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.city]}>\n                                <TextField size=\"small\" label=\"Repeat new Password\" fullWidth value={password2} onChange={handlePassword2Change} type=\"password\" variant=\"outlined\" />\n                                <FormHelperText>{errors[UserFormInputs.password2] && validationErrors[UserFormInputs.password2]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                size=\"small\"\n                                disabled\n                                id=\"plan\"\n                                name=\"plan\"\n                                value={props.subscriptionPlan === 'premium' ? \"Premium\" : \"Basic\"}\n                                label=\"Pricing\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Button style={{ margin: '0 auto', display: \"flex\" }} variant=\"contained\" color=\"secondary\" onClick={handleAddPet}>\n                                Adjust the plan\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Typography className={classes.typography} variant=\"h6\" align=\"center\" style={{ fontWeight: 600 }}>\n                        Payment method\n                    </Typography>\n                    {paymentMethod ?\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    size=\"small\"\n                                    disabled\n                                    id=\"plan\"\n                                    name=\"plan\"\n                                    value={paymentMethod.email}\n                                    label={paymentMethod.type}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid container xs={12} sm={6} justify=\"space-around\" alignItems=\"center\" spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <Button variant=\"contained\" style={{ width: '230px' }} color=\"secondary\" onClick={handleAddPet}>\n                                        Adjust payment method\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={1} sm={1}>\n                                    <Button onClick={handleAddPet}>\n                                        <CloseIcon />\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                        </Grid> :\n                        <Button style={{ margin: '0 auto', display: \"flex\" }} variant=\"contained\" color=\"secondary\" >\n                            Add payment method\n                        </Button>}\n\n                </React.Fragment>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}