{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import SubscriptionService from\"services/SubscriptionService\";export function update(id,subscriptionPlan,paymentPlan,paymentMethod){var onSuccess=arguments.length>4&&arguments[4]!==undefined?arguments[4]:function(){return null;};var onError=arguments.length>5&&arguments[5]!==undefined?arguments[5]:function(err){return null;};var updateUserAction=function updateUserAction(user){onSuccess();return{type:'UPDATE_SUCCESS',user:user};};return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return SubscriptionService.update(id,subscriptionPlan,paymentPlan,paymentMethod).then(function(resp){return dispatch(updateUserAction(resp.user));}).catch(function(e){onError(e);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/redux/actions/subscriptionActions.js"],"names":["SubscriptionService","update","id","subscriptionPlan","paymentPlan","paymentMethod","onSuccess","onError","err","updateUserAction","user","type","dispatch","then","resp","catch","e"],"mappings":"uUAAA,MAAOA,CAAAA,mBAAP,KAAgC,8BAAhC,CAEA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,EAAhB,CAAoBC,gBAApB,CAAsCC,WAAtC,CAAmDC,aAAnD,CAA8G,IAA7CC,CAAAA,SAA6C,2DAAnC,iBAAM,KAAN,EAAmC,IAAvBC,CAAAA,OAAuB,2DAAf,SAACC,GAAD,QAAS,KAAT,EAAe,CACjH,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAU,CAC/BJ,SAAS,GACT,MAAO,CAAEK,IAAI,CAAE,gBAAR,CAA0BD,IAAI,CAAEA,IAAhC,CAAP,CACH,CAHD,CAKA,+FAAO,iBAAOE,QAAP,wIACGZ,CAAAA,mBAAmB,CAACC,MAApB,CAA2BC,EAA3B,CAA+BC,gBAA/B,CAAiDC,WAAjD,CAA8DC,aAA9D,EAA6EQ,IAA7E,CAAkF,SAACC,IAAD,QAAUF,CAAAA,QAAQ,CAACH,gBAAgB,CAACK,IAAI,CAACJ,IAAN,CAAjB,CAAlB,EAAlF,EAAmIK,KAAnI,CAAyI,SAACC,CAAD,CAAO,CAC9IT,OAAO,CAACS,CAAD,CAAP,CACH,CAFC,CADH,uDAAP,+DAMH","sourcesContent":["import SubscriptionService from \"services/SubscriptionService\";\n\nexport function update(id, subscriptionPlan, paymentPlan, paymentMethod,onSuccess=() => null, onError=(err) => null) {\n    const updateUserAction = (user) => {\n        onSuccess();\n        return { type: 'UPDATE_SUCCESS', user: user };\n    };\n\n    return async (dispatch) => {\n        await SubscriptionService.update(id, subscriptionPlan, paymentPlan, paymentMethod).then((resp) => dispatch(updateUserAction(resp.user))).catch((e) => {\n                onError(e);\n            });\n            \n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}