{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getUserFromToken}from'helper/helpers';import{NotificationService}from'services';import UserService from'../../services/UserService';export function resetError(){return{type:'RESET_ERROR'};}export function login(username,password){function onSuccess(user){return{type:'LOGIN_SUCCESS',user:user,isAuthenticated:true};}function onFailure(error){return{type:'LOGIN_FAILURE',error:error};}return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return UserService.login(username,password);case 3:resp=_context.sent;dispatch(onSuccess(resp.user));_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch(onFailure(_context.t0));NotificationService.notify('error','Login Error','During login occurred an error. Please try again.');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();}export function confirmEmail(email,token){function onSuccess(confirmation){return{type:'CONFIRM_EMAIL_SUCCESS',confirmation:confirmation};}function onFailure(error){return{type:'CONFIRM_EMAIL_FAILURE',error:error};}return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var resp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return UserService.confirmEmail(email,token);case 3:resp=_context2.sent;dispatch(onSuccess(resp));_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch(onFailure(_context2.t0));case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export function checkUser(email,username,isAdmin){function onSuccess(){return{type:'USER_UNIQUE_SUCCESS'};}function onFailure(error){return{type:'USER_UNIQUE_FAILURE',error:error};}return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var resp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return UserService.checkUser(email,username,isAdmin);case 3:resp=_context3.sent;dispatch(onSuccess());_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);dispatch(onFailure(_context3.t0));case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();}export function logout(){UserService.logout();return{type:'LOGOUT'};}export function loginReset(){function onSuccess(user,isAuthenticated){return{type:'LOGIN_RESET',user:user,isAuthenticated:isAuthenticated};}return function(dispatch){var _getUserFromToken=getUserFromToken(),isAuthenticated=_getUserFromToken.isAuthenticated,user=_getUserFromToken.user;dispatch(onSuccess(user,isAuthenticated));};}export function register(email,username,password,city,province,isAdmin,subscriptionPlan,paymentPlan,paymentMethod){function onSuccess(user){return{type:'LOGIN_SUCCESS',user:user};}function onFailure(error){return{type:'LOGIN_FAILURE',error:error};}return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var resp;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return UserService.register(email,username,password,city,province,isAdmin,subscriptionPlan,paymentPlan,paymentMethod);case 3:resp=_context4.sent;dispatch(onSuccess(resp.user));_context4.next=11;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch(onFailure(_context4.t0));NotificationService.notify('error','Registration Error','During registration occurred an error. Please try again.');case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();}export var getUsersInfo=function getUsersInfo(id){var getUsersInfoAction=function getUsersInfoAction(user){return{type:'GET_USER_INFO',user:user};};var onFailure=function onFailure(error){console.log('Failed to load a user',error);};return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var user;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return UserService.getUsersInfo(id);case 3:user=_context5.sent;dispatch(getUsersInfoAction(user));_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);onFailure(_context5.t0);case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function(_x5,_x6){return _ref5.apply(this,arguments);};}();};export var getUserPets=function getUserPets(ownerId){// when the backend call was successfull and the pets are retrieved\n// in the dispatcher the pets will be added to the global state\nvar onSuccess=function onSuccess(pets){return{type:'GET_USER_PETS',pets:pets};};// when the backend call was failed\nvar onFailure=function onFailure(error){// error handling\nconsole.log('failed to get the pets',error);};return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var pets;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;console.log('I am in actions');// ask for the pets in the backend\n_context6.next=4;return UserService.getUserPets(ownerId);case 4:pets=_context6.sent;console.log('The pets are in the actions: ',pets);// call onSuccess in context of redux\ndispatch(onSuccess(pets));_context6.next=12;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](0);onFailure(_context6.t0);case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[0,9]]);}));return function(_x7,_x8){return _ref6.apply(this,arguments);};}();};export var updateUser=function updateUser(user){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var updateUserAction=function updateUserAction(user){onSuccess();var user_for_redux={id:user._id,username:user.username,role:user.role};return{type:'UPDATE_USER',user:user_for_redux,userInfo:user};};var onFailure=function onFailure(error){onError();console.log('Failed to update user',error);};return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){var updatedUser;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return UserService.updateUser(user);case 3:updatedUser=_context7.sent;dispatch(updateUserAction(updatedUser));_context7.next=10;break;case 7:_context7.prev=7;_context7.t0=_context7[\"catch\"](0);onFailure(_context7.t0);case 10:case\"end\":return _context7.stop();}}},_callee7,null,[[0,7]]);}));return function(_x9,_x10){return _ref7.apply(this,arguments);};}();};export var getUser=function getUser(id){var getUsersInfoAction=function getUsersInfoAction(user){return{type:'GET_SELECTED_USER',user:user};};var onFailure=function onFailure(error){console.log('Failed to load a user',error);};return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch,getState){var user;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return UserService.getUsersInfo(id);case 3:user=_context8.sent;dispatch(getUsersInfoAction(user));_context8.next=10;break;case 7:_context8.prev=7;_context8.t0=_context8[\"catch\"](0);onFailure(_context8.t0);case 10:case\"end\":return _context8.stop();}}},_callee8,null,[[0,7]]);}));return function(_x11,_x12){return _ref8.apply(this,arguments);};}();};export var getSelectedUserPets=function getSelectedUserPets(ownerId){// when the backend call was successfull and the pets are retrieved\n// in the dispatcher the pets will be added to the global state\nvar onSuccess=function onSuccess(pets){return{type:'GET_SELECTED_USER_PETS',pets:pets};};// when the backend call was failed\nvar onFailure=function onFailure(error){// error handling\nconsole.log('failed to get the pets',error);};return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch,getState){var pets;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;console.log('I am in actions');// ask for the pets in the backend\n_context9.next=4;return UserService.getUserPets(ownerId);case 4:pets=_context9.sent;console.log('The pets are in the actions: ',pets);// call onSuccess in context of redux\ndispatch(onSuccess(pets));_context9.next=12;break;case 9:_context9.prev=9;_context9.t0=_context9[\"catch\"](0);onFailure(_context9.t0);case 12:case\"end\":return _context9.stop();}}},_callee9,null,[[0,9]]);}));return function(_x13,_x14){return _ref9.apply(this,arguments);};}();};export var getReviewsOnUser=function getReviewsOnUser(id){// when the backend call was successfull and the reviews are retrieved\n// in the dispatcher the reviews will be added to the global state\nvar onSuccess=function onSuccess(reviews){return{type:'GET_REVIEWS_ON_USER',reviews:reviews};};// when the backend call was failed\nvar onFailure=function onFailure(error){// error handling\nconsole.log('failed to get the reviews',error);};return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch,getState){var reviews;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;console.log('I am in actions');// ask for the reviews in the backend\n_context10.next=4;return UserService.getReviewsOnUser(id);case 4:reviews=_context10.sent;console.log('The reviews are in the actions: ',reviews);// call onSuccess in context of redux\ndispatch(onSuccess(reviews));_context10.next=12;break;case 9:_context10.prev=9;_context10.t0=_context10[\"catch\"](0);onFailure(_context10.t0);case 12:case\"end\":return _context10.stop();}}},_callee10,null,[[0,9]]);}));return function(_x15,_x16){return _ref10.apply(this,arguments);};}();};export var getReviewsOnSelectedUser=function getReviewsOnSelectedUser(id){// when the backend call was successfull and the reviews are retrieved\n// in the dispatcher the reviews will be added to the global state\nvar onSuccess=function onSuccess(reviews){return{type:'GET_REVIEWS_ON_SELECTED_USER',reviews:reviews};};// when the backend call was failed\nvar onFailure=function onFailure(error){// error handling\nconsole.log('failed to get the reviews',error);};return/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch,getState){var reviews;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.prev=0;console.log('I am in actions');// ask for the reviews in the backend\n_context11.next=4;return UserService.getReviewsOnUser(id);case 4:reviews=_context11.sent;console.log('The reviews are in the actions: ',reviews);// call onSuccess in context of redux\ndispatch(onSuccess(reviews));_context11.next=12;break;case 9:_context11.prev=9;_context11.t0=_context11[\"catch\"](0);onFailure(_context11.t0);case 12:case\"end\":return _context11.stop();}}},_callee11,null,[[0,9]]);}));return function(_x17,_x18){return _ref11.apply(this,arguments);};}();};export var addReview=function addReview(review){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var addReviewAction=function addReviewAction(){onSuccess();return{type:'ADD_REVIEW'};};var onFailure=function onFailure(err){onError();console.log('failed to save the review',err);};return/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch,getState){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.prev=0;_context12.next=3;return UserService.addReview(review);case 3:// call onSuccess in context of redux\ndispatch(addReviewAction());_context12.next=9;break;case 6:_context12.prev=6;_context12.t0=_context12[\"catch\"](0);onFailure(_context12.t0);case 9:case\"end\":return _context12.stop();}}},_callee12,null,[[0,6]]);}));return function(_x19,_x20){return _ref12.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/redux/actions/userActions.js"],"names":["getUserFromToken","NotificationService","UserService","resetError","type","login","username","password","onSuccess","user","isAuthenticated","onFailure","error","dispatch","resp","notify","confirmEmail","email","token","confirmation","checkUser","isAdmin","logout","loginReset","register","city","province","subscriptionPlan","paymentPlan","paymentMethod","getUsersInfo","id","getUsersInfoAction","console","log","getState","getUserPets","ownerId","pets","updateUser","onError","err","updateUserAction","user_for_redux","_id","role","userInfo","updatedUser","getUser","getSelectedUserPets","getReviewsOnUser","reviews","getReviewsOnSelectedUser","addReview","review","addReviewAction"],"mappings":"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","sourcesContent":["import { getUserFromToken } from 'helper/helpers';\nimport { NotificationService } from 'services';\nimport UserService from '../../services/UserService';\n\nexport function resetError() {\n    return {\n        type: 'RESET_ERROR',\n    };\n}\n\nexport function login(username, password) {\n    function onSuccess(user) {\n        return { type: 'LOGIN_SUCCESS', user: user, isAuthenticated: true };\n    }\n    function onFailure(error) {\n        return { type: 'LOGIN_FAILURE', error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.login(username, password);\n            dispatch(onSuccess(resp.user));\n        } catch (e) {\n            dispatch(onFailure(e));\n            NotificationService.notify('error', 'Login Error', 'During login occurred an error. Please try again.');\n        }\n    };\n}\n\nexport function confirmEmail(email, token) {\n    function onSuccess(confirmation) {\n        return { type: 'CONFIRM_EMAIL_SUCCESS', confirmation: confirmation };\n    }\n    function onFailure(error) {\n        return { type: 'CONFIRM_EMAIL_FAILURE', error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.confirmEmail(email, token);\n            dispatch(onSuccess(resp));\n        } catch (e) {\n            dispatch(onFailure(e));\n        }\n    };\n}\n\nexport function checkUser(email, username, isAdmin) {\n    function onSuccess() {\n        return { type: 'USER_UNIQUE_SUCCESS' };\n    }\n    function onFailure(error) {\n        return { type: 'USER_UNIQUE_FAILURE', error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.checkUser(email, username, isAdmin);\n            dispatch(onSuccess());\n        } catch (e) {\n            dispatch(onFailure(e));\n        }\n    };\n}\n\nexport function logout() {\n    UserService.logout();\n    return { type: 'LOGOUT' };\n}\n\nexport function loginReset() {\n    function onSuccess(user, isAuthenticated) {\n        return { type: 'LOGIN_RESET', user: user, isAuthenticated: isAuthenticated };\n    }\n    return (dispatch) => {\n        let { isAuthenticated, user } = getUserFromToken();\n        dispatch(onSuccess(user, isAuthenticated));\n    };\n}\n\nexport function register(email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod) {\n    function onSuccess(user) {\n        return { type: 'LOGIN_SUCCESS', user: user };\n    }\n    function onFailure(error) {\n        return { type: 'LOGIN_FAILURE', error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.register(email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod);\n            dispatch(onSuccess(resp.user));\n        } catch (e) {\n            dispatch(onFailure(e));\n            NotificationService.notify('error', 'Registration Error', 'During registration occurred an error. Please try again.');\n        }\n    };\n}\n\nexport const getUsersInfo = (id) => {\n    const getUsersInfoAction = (user) => {\n        return { type: 'GET_USER_INFO', user: user };\n    };\n    const onFailure = (error) => {\n        console.log('Failed to load a user', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            const user = await UserService.getUsersInfo(id);\n            dispatch(getUsersInfoAction(user));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getUserPets = (ownerId) => {\n    // when the backend call was successfull and the pets are retrieved\n    // in the dispatcher the pets will be added to the global state\n    const onSuccess = (pets) => {\n        return { type: 'GET_USER_PETS', pets: pets };\n    };\n    // when the backend call was failed\n    const onFailure = (error) => {\n        // error handling\n        console.log('failed to get the pets', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            console.log('I am in actions');\n            // ask for the pets in the backend\n            const pets = await UserService.getUserPets(ownerId);\n            console.log('The pets are in the actions: ', pets);\n            // call onSuccess in context of redux\n            dispatch(onSuccess(pets));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const updateUser = (user, onSuccess = () => null, onError = (err) => null) => {\n    const updateUserAction = (user) => {\n        onSuccess();\n        let user_for_redux = {\n            id: user._id,\n            username: user.username,\n            role: user.role,\n        };\n        return { type: 'UPDATE_USER', user: user_for_redux, userInfo: user };\n    };\n    const onFailure = (error) => {\n        onError();\n        console.log('Failed to update user', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            let updatedUser = await UserService.updateUser(user);\n            dispatch(updateUserAction(updatedUser));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getUser = (id) => {\n    const getUsersInfoAction = (user) => {\n        return { type: 'GET_SELECTED_USER', user: user };\n    };\n    const onFailure = (error) => {\n        console.log('Failed to load a user', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            const user = await UserService.getUsersInfo(id);\n            dispatch(getUsersInfoAction(user));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getSelectedUserPets = (ownerId) => {\n    // when the backend call was successfull and the pets are retrieved\n    // in the dispatcher the pets will be added to the global state\n    const onSuccess = (pets) => {\n        return { type: 'GET_SELECTED_USER_PETS', pets: pets };\n    };\n    // when the backend call was failed\n    const onFailure = (error) => {\n        // error handling\n        console.log('failed to get the pets', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            console.log('I am in actions');\n            // ask for the pets in the backend\n            const pets = await UserService.getUserPets(ownerId);\n            console.log('The pets are in the actions: ', pets);\n            // call onSuccess in context of redux\n            dispatch(onSuccess(pets));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getReviewsOnUser = (id) => {\n    // when the backend call was successfull and the reviews are retrieved\n    // in the dispatcher the reviews will be added to the global state\n    const onSuccess = (reviews) => {\n        return { type: 'GET_REVIEWS_ON_USER', reviews: reviews };\n    };\n    // when the backend call was failed\n    const onFailure = (error) => {\n        // error handling\n        console.log('failed to get the reviews', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            console.log('I am in actions');\n            // ask for the reviews in the backend\n            const reviews = await UserService.getReviewsOnUser(id);\n            console.log('The reviews are in the actions: ', reviews);\n            // call onSuccess in context of redux\n            dispatch(onSuccess(reviews));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getReviewsOnSelectedUser = (id) => {\n    // when the backend call was successfull and the reviews are retrieved\n    // in the dispatcher the reviews will be added to the global state\n    const onSuccess = (reviews) => {\n        return { type: 'GET_REVIEWS_ON_SELECTED_USER', reviews: reviews };\n    };\n    // when the backend call was failed\n    const onFailure = (error) => {\n        // error handling\n        console.log('failed to get the reviews', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            console.log('I am in actions');\n            // ask for the reviews in the backend\n            const reviews = await UserService.getReviewsOnUser(id);\n            console.log('The reviews are in the actions: ', reviews);\n            // call onSuccess in context of redux\n            dispatch(onSuccess(reviews));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const addReview = (review, onSuccess = () => null, onError = (err) => null) => {\n    const addReviewAction = () => {\n        onSuccess();\n        return { type: 'ADD_REVIEW' };\n    };\n    const onFailure = (err) => {\n        onError();\n        console.log('failed to save the review', err);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            // save the review in the backend\n            await UserService.addReview(review);\n            // call onSuccess in context of redux\n            dispatch(addReviewAction());\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}