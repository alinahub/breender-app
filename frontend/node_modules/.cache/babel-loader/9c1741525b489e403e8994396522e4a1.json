{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/UserLoginComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, TextField, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  userLoginRoot: {\n    margin: 'auto'\n  },\n  loginPaper: {\n    width: '500px',\n    padding: theme.spacing(4)\n  },\n  loginRow: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    '&:last-child': {\n      paddingBottom: theme.spacing(0)\n    },\n    '&:first-child': {\n      paddingTop: theme.spacing(0)\n    }\n  },\n  loginButtons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: 'secondary'\n  },\n  loginButton: {\n    marginLeft: theme.spacing(1),\n    color: 'secondary'\n  }\n}));\n/**\n * For user login\n * @param {props} props\n */\n\nfunction LoginComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState(''); //set to false when component is rendered for the first time in order to skip error message from previous login\n\n  const [rendered, setRendered] = React.useState(false);\n  const [loginError, setLoginError] = React.useState('');\n  useEffect(() => {\n    if (props.user.error) {\n      if (rendered) {\n        //if component is rendered for the 2. or more times, show new error\n        setLoginError(props.user.error);\n      }\n    } else {\n      setLoginError('');\n    }\n  }, [props.user]);\n\n  const onLogin = e => {\n    e.preventDefault();\n    props.onLogin(username, password);\n    setRendered(true); //set to true when user tries to login for the first time\n  };\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n    setLoginError('');\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n    setLoginError('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.userLoginRoot,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.loginPaper,\n      component: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginRow,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: username,\n          onChange: onChangeUsername,\n          error: loginError !== ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginRow,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: password,\n          onChange: onChangePassword,\n          error: loginError !== '',\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), loginError !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginRow,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginRow + ' ' + classes.loginButtons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onSignUp,\n          children: \"Not Registered yet?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            className: classes.loginButton,\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.loginButton,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: onLogin,\n            disabled: username === '' || password === '',\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginComponent, \"fCi7/aw0kh7xfB4SZowe+22z038=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginComponent;\nexport default connect()(withRouter(LoginComponent));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/UserLoginComponent.js"],"names":["React","useEffect","makeStyles","Paper","Button","TextField","Typography","connect","withRouter","useStyles","theme","userLoginRoot","margin","loginPaper","width","padding","spacing","loginRow","paddingTop","paddingBottom","loginButtons","display","justifyContent","color","loginButton","marginLeft","LoginComponent","props","classes","username","setUsername","useState","password","setPassword","rendered","setRendered","loginError","setLoginError","user","error","onLogin","e","preventDefault","onChangeUsername","target","value","onChangePassword","onSignUp","onCancel"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, TextField, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    userLoginRoot: {\n        margin: 'auto',\n    },\n    loginPaper: {\n        width: '500px',\n        padding: theme.spacing(4),\n    },\n    loginRow: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        '&:last-child': {\n            paddingBottom: theme.spacing(0),\n        },\n        '&:first-child': {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    loginButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        color: 'secondary',\n    },\n    loginButton: {\n        marginLeft: theme.spacing(1),\n        color: 'secondary',\n    },\n}));\n\n/**\n * For user login\n * @param {props} props\n */\nfunction LoginComponent(props) {\n    const classes = useStyles();\n\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    //set to false when component is rendered for the first time in order to skip error message from previous login\n    const [rendered, setRendered] = React.useState(false);\n    const [loginError, setLoginError] = React.useState('');\n\n    useEffect(() => {\n        if (props.user.error) {\n            if (rendered) {\n                //if component is rendered for the 2. or more times, show new error\n                setLoginError(props.user.error);\n            }\n        } else {\n            setLoginError('');\n        }\n    }, [props.user]);\n\n    const onLogin = (e) => {\n        e.preventDefault();\n        props.onLogin(username, password);\n        setRendered(true); //set to true when user tries to login for the first time\n    };\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value);\n        setLoginError('');\n    };\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        setLoginError('');\n    };\n\n    return (\n        <div className={classes.userLoginRoot}>\n            <Paper className={classes.loginPaper} component=\"form\">\n                <div className={classes.loginRow}>\n                    <TextField label=\"Username\" variant=\"outlined\" fullWidth value={username} onChange={onChangeUsername} error={loginError !== ''} />\n                </div>\n                <div className={classes.loginRow}>\n                    <TextField label=\"Password\" variant=\"outlined\" fullWidth value={password} onChange={onChangePassword} error={loginError !== ''} type=\"password\" />\n                </div>\n                {loginError !== '' ? (\n                    <div className={classes.loginRow}>\n                        <Typography color=\"error\">{loginError}</Typography>\n                    </div>\n                ) : null}\n                <div className={classes.loginRow + ' ' + classes.loginButtons}>\n                    <Button onClick={props.onSignUp}>Not Registered yet?</Button>\n                    <div>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.loginButton} onClick={props.onCancel}>\n                            Cancel\n                        </Button>\n                        <Button className={classes.loginButton} variant=\"contained\" color=\"primary\" onClick={onLogin} disabled={username === '' || password === ''} type=\"submit\">\n                            Login\n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect()(withRouter(LoginComponent));\n"]},"metadata":{},"sourceType":"module"}