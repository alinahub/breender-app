{"ast":null,"code":"import _objectSpread from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Chip,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,FormControl,InputLabel,makeStyles,MenuItem,Select}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var STATUS_TYPE={PENDING:'pending',SUCCESS:'success',FAIL:'fail'};var StatusTag=function StatusTag(props){var isSelected=props.isSelected,status=props.status,confirm=props.confirm,transaction=props.transaction,isSender=props.isSender;var _useState=useState(status),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var color=function color(){switch(status){case STATUS_TYPE.PENDING:return{color:'orange',background:'white',borderColor:'#F9C339'};case STATUS_TYPE.SUCCESS:return{color:'green',background:'white',borderColor:'#C0E189'};case STATUS_TYPE.FAIL:return{color:'red',background:'white',borderColor:'#F96149'};default:return{color:'orange',background:'white',borderColor:'#F9C339'};}};var handleResponseChange=function handleResponseChange(event){var response=event.target.value;if(response!==STATUS_TYPE.PENDING){setOpen(true);}setResponse(response);};var handleClose=function handleClose(){setOpen(false);setResponse(STATUS_TYPE.PENDING);};var handleConfirm=function handleConfirm(){var transactionCopy=transaction;if(isSender){transactionCopy.senderResponse=response;}else{transactionCopy.receiverResponse=response;}confirm(transactionCopy);setOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[isSelected?/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",label:status.toUpperCase(),style:_objectSpread(_objectSpread({},color()),{},{borderWidth:2,fontWeight:'lighter'})},status):/*#__PURE__*/_jsxs(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"response-label\",children:\"Response\"}),/*#__PURE__*/_jsxs(Select,{label:\"Response\",id:\"response\",value:response,onChange:handleResponseChange,onBlur:handleResponseChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.PENDING,children:STATUS_TYPE.PENDING}),/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.SUCCESS,children:STATUS_TYPE.SUCCESS}),/*#__PURE__*/_jsx(MenuItem,{value:STATUS_TYPE.FAIL,children:STATUS_TYPE.FAIL})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",color:\"primary\",children:'Confirm Action'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{color:\"primary\",id:\"alert-dialog-description\",children:\"Please confirm you want to officially change the status.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,variant:\"outlined\",color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirm,variant:\"contained\",color:\"primary\",autoFocus:true,children:\"Confirm\"})]})]})]});};var useStyles=makeStyles(function(theme){return{};});export default StatusTag;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/StatusTag.js"],"names":["React","useState","Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","makeStyles","MenuItem","Select","STATUS_TYPE","PENDING","SUCCESS","FAIL","StatusTag","props","isSelected","status","confirm","transaction","isSender","response","setResponse","open","setOpen","color","background","borderColor","handleResponseChange","event","target","value","handleClose","handleConfirm","transactionCopy","senderResponse","receiverResponse","toUpperCase","borderWidth","fontWeight","useStyles","theme"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\n\nconst STATUS_TYPE = {\n    PENDING: 'pending',\n    SUCCESS: 'success',\n    FAIL: 'fail',\n};\n\nconst StatusTag = (props) => {\n    const { isSelected, status, confirm, transaction, isSender } = props;\n    const [response, setResponse] = useState(status);\n    const [open, setOpen] = useState(false);\n\n    const color = () => {\n        switch (status) {\n            case STATUS_TYPE.PENDING:\n                return { color: 'orange', background: 'white', borderColor: '#F9C339' };\n            case STATUS_TYPE.SUCCESS:\n                return { color: 'green', background: 'white', borderColor: '#C0E189' };\n            case STATUS_TYPE.FAIL:\n                return { color: 'red', background: 'white', borderColor: '#F96149' };\n            default:\n                return { color: 'orange', background: 'white', borderColor: '#F9C339' };\n        }\n    };\n\n    const handleResponseChange = (event) => {\n        const response = event.target.value;\n        if (response !== STATUS_TYPE.PENDING) {\n            setOpen(true);\n        }\n        setResponse(response);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setResponse(STATUS_TYPE.PENDING);\n    };\n\n    const handleConfirm = () => {\n        let transactionCopy = transaction;\n        if (isSender) {\n            transactionCopy.senderResponse = response;\n        } else {\n            transactionCopy.receiverResponse = response;\n        }\n        confirm(transactionCopy);\n        setOpen(false);\n    };\n\n    return (\n        <>\n            {isSelected ? (\n                <Chip variant=\"outlined\" key={status} label={status.toUpperCase()} style={{...color(), borderWidth: 2, fontWeight: 'lighter'}} />\n            ) : (\n                <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                    <InputLabel id=\"response-label\">Response</InputLabel>\n                    <Select label=\"Response\" id=\"response\" value={response} onChange={handleResponseChange} onBlur={handleResponseChange}>\n                        <MenuItem value={STATUS_TYPE.PENDING}>{STATUS_TYPE.PENDING}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.SUCCESS}>{STATUS_TYPE.SUCCESS}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.FAIL}>{STATUS_TYPE.FAIL}</MenuItem>\n                    </Select>\n                </FormControl>\n            )}\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n            <DialogTitle id=\"alert-dialog-title\" color=\"primary\">{'Confirm Action'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText color=\"primary\" id=\"alert-dialog-description\">Please confirm you want to officially change the status.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\" autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default StatusTag;\n"]},"metadata":{},"sourceType":"module"}