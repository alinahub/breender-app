{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/TransactionsAdminOverviewTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // antd imports\n\nimport { Table } from 'antd';\nimport '../../theming/antd.css'; // material-ui imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PetPreviewProfileComponent from 'components/pet-profile/PetPreviewProfileComponent';\nimport PriceTag from 'components/PriceTag';\nimport { getAdminTransactions, updateTransaction } from 'redux/actions';\nimport moment from 'moment';\nimport { Chip } from '@material-ui/core';\nimport AdminStatusTag from 'components/tags/AdminStatusTag';\nimport Loading from 'components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionsAdminOverviewTable = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const transactions = useSelector(state => state.transaction.transactions); // states\n\n  const checkRequiresInvestigation = t => t.senderResponse === 'fail' && t.receiverResponse === 'success' || t.senderResponse === 'success' && t.receiverResponse === 'fail';\n\n  useEffect(() => {\n    if (props.active) {\n      //get transactions when tab is opened\n      dispatch(getAdminTransactions(props.user.id));\n    }\n  }, [props, dispatch]); // update transaction on confirming to change the transaction status\n\n  const confirm = async transaction => {\n    await dispatch(updateTransaction(transaction));\n    await dispatch(getAdminTransactions(props.user.id));\n  }; // get the owner of the pet\n\n\n  const getPetOwner = transaction => {\n    var _transaction$pet, _transaction$senderId;\n\n    if (((_transaction$pet = transaction.pet) === null || _transaction$pet === void 0 ? void 0 : _transaction$pet.ownerId) === ((_transaction$senderId = transaction.senderId) === null || _transaction$senderId === void 0 ? void 0 : _transaction$senderId._id)) {\n      return transaction.senderId;\n    } else {\n      return transaction.receiverId;\n    }\n  };\n\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'orderNr',\n    key: 'orderNr',\n    render: id => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: String(id).toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }, this)\n  }, {\n    title: 'MATE',\n    dataIndex: 'pet',\n    key: 'pet',\n    align: 'center',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(PetPreviewProfileComponent, {\n      username: getPetOwner(record).username,\n      pet: record.pet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 36\n    }, this)\n  }, {\n    title: 'AMOUNT',\n    dataIndex: 'amount',\n    key: 'amount',\n    align: 'right',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(PriceTag, {\n      price: record.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 36\n    }, this)\n  }, {\n    title: 'DEADLINE',\n    dataIndex: 'deadline',\n    key: 'deadline',\n    align: 'center',\n    render: deadline => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: String(moment(deadline).format('LLL'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 35\n    }, this)\n  }, {\n    title: 'SENDER RESPONSE',\n    key: 'response',\n    dataIndex: 'response',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(AdminStatusTag, {\n      variant: \"sender\",\n      status: record.senderResponse,\n      confirm: confirm,\n      transaction: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 36\n    }, this)\n  }, {\n    title: 'RECEIVER RESPONSE',\n    key: 'response',\n    dataIndex: 'response',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(AdminStatusTag, {\n      variant: \"receiver\",\n      status: record.receiverResponse,\n      confirm: confirm,\n      transaction: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'STATUS',\n    key: 'status',\n    dataIndex: 'status',\n    align: 'center',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AdminStatusTag, {\n          variant: \"default\",\n          status: record.status,\n          confirm: confirm,\n          transaction: record\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), checkRequiresInvestigation(record) ? /*#__PURE__*/_jsxDEV(Chip, {\n        className: classes.tags,\n        variant: \"outlined\",\n        label: \"Requires Investigation\",\n        style: {\n          color: 'black',\n          background: '#FCCA46',\n          borderColor: '#FDCD7F',\n          borderWidth: 2,\n          fontWeight: 'lighter'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true)\n  }];\n  return (\n    /*#__PURE__*/\n    //if transactions are loaded, shw the table; otherwise loading indicator\n    _jsxDEV(\"div\", {\n      children: transactions ? /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(TransactionsAdminOverviewTable, \"DzatdApIPvQAtbri5G/DAJpCxAw=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = TransactionsAdminOverviewTable;\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 500\n  },\n  grid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignSelf: 'flex-end'\n  },\n  tags: {\n    marginTop: 10\n  }\n}));\nexport default TransactionsAdminOverviewTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsAdminOverviewTable\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/TransactionsAdminOverviewTable.js"],"names":["React","useEffect","Table","makeStyles","useDispatch","useSelector","PetPreviewProfileComponent","PriceTag","getAdminTransactions","updateTransaction","moment","Chip","AdminStatusTag","Loading","TransactionsAdminOverviewTable","props","classes","useStyles","dispatch","transactions","state","transaction","checkRequiresInvestigation","t","senderResponse","receiverResponse","active","user","id","confirm","getPetOwner","pet","ownerId","senderId","_id","receiverId","columns","title","dataIndex","key","render","String","toUpperCase","align","_","record","username","amount","deadline","format","status","tags","color","background","borderColor","borderWidth","fontWeight","theme","layout","display","flexDirection","justifyContent","alignItems","label","fontSize","grid","alignSelf","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAO,wBAAP,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,0BAAP,MAAuC,mDAAvC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,eAAxD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAEA,MAAMC,8BAA8B,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,YAA9B,CAAhC,CAH8C,CAK9C;;AACA,QAAMG,0BAA0B,GAAIC,CAAD,IAAQA,CAAC,CAACC,cAAF,KAAqB,MAArB,IAA+BD,CAAC,CAACE,gBAAF,KAAuB,SAAvD,IAAsEF,CAAC,CAACC,cAAF,KAAqB,SAArB,IAAkCD,CAAC,CAACE,gBAAF,KAAuB,MAAzK;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AAET,QAAIc,KAAK,CAACW,MAAV,EAAkB;AAAE;AACnBR,MAAAA,QAAQ,CAACV,oBAAoB,CAACO,KAAK,CAACY,IAAN,CAAWC,EAAZ,CAArB,CAAR;AAEH;AACJ,GANQ,EAMN,CAACb,KAAD,EAAQG,QAAR,CANM,CAAT,CAR8C,CAkB9C;;AACA,QAAMW,OAAO,GAAG,MAAOR,WAAP,IAAuB;AACnC,UAAMH,QAAQ,CAACT,iBAAiB,CAACY,WAAD,CAAlB,CAAd;AACA,UAAMH,QAAQ,CAACV,oBAAoB,CAACO,KAAK,CAACY,IAAN,CAAWC,EAAZ,CAArB,CAAd;AACH,GAHD,CAnB8C,CAwB9C;;;AACA,QAAME,WAAW,GAAIT,WAAD,IAAiB;AAAA;;AACjC,QAAI,qBAAAA,WAAW,CAACU,GAAZ,sEAAiBC,OAAjB,gCAA6BX,WAAW,CAACY,QAAzC,0DAA6B,sBAAsBC,GAAnD,CAAJ,EAA4D;AACxD,aAAOb,WAAW,CAACY,QAAnB;AACH,KAFD,MAEO;AACH,aAAOZ,WAAW,CAACc,UAAnB;AACH;AACJ,GAND;;AAQA,QAAMC,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,IADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,GAAG,EAAE,SAHT;AAIIC,IAAAA,MAAM,EAAGZ,EAAD,iBAAQ;AAAA,gBAAIa,MAAM,CAACb,EAAD,CAAN,CAAWc,WAAX;AAAJ;AAAA;AAAA;AAAA;AAAA;AAJpB,GADY,EAOZ;AACIL,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,GAAG,EAAE,KAHT;AAIII,IAAAA,KAAK,EAAE,QAJX;AAKIH,IAAAA,MAAM,EAAE,CAACI,CAAD,EAAIC,MAAJ,kBAAe,QAAC,0BAAD;AAA4B,MAAA,QAAQ,EAAEf,WAAW,CAACe,MAAD,CAAX,CAAoBC,QAA1D;AAAoE,MAAA,GAAG,EAAED,MAAM,CAACd;AAAhF;AAAA;AAAA;AAAA;AAAA;AAL3B,GAPY,EAcZ;AACIM,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,SAAS,EAAE,QAFf;AAGIC,IAAAA,GAAG,EAAE,QAHT;AAIII,IAAAA,KAAK,EAAE,OAJX;AAKIH,IAAAA,MAAM,EAAE,CAACI,CAAD,EAAIC,MAAJ,kBAAe,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,MAAM,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA;AAL3B,GAdY,EAqBZ;AACIV,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,SAAS,EAAE,UAFf;AAGIC,IAAAA,GAAG,EAAE,UAHT;AAIII,IAAAA,KAAK,EAAE,QAJX;AAKIH,IAAAA,MAAM,EAAGQ,QAAD,iBAAc;AAAA,gBAAMP,MAAM,CAAC/B,MAAM,CAACsC,QAAD,CAAN,CAAiBC,MAAjB,CAAwB,KAAxB,CAAD;AAAZ;AAAA;AAAA;AAAA;AAAA;AAL1B,GArBY,EA4BZ;AACIZ,IAAAA,KAAK,EAAE,iBADX;AAEIE,IAAAA,GAAG,EAAE,UAFT;AAGID,IAAAA,SAAS,EAAE,UAHf;AAIIE,IAAAA,MAAM,EAAE,CAACI,CAAD,EAAIC,MAAJ,kBAAe,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,MAAM,EAAEA,MAAM,CAACrB,cAAhD;AAAiE,MAAA,OAAO,EAAEK,OAA1E;AAAmF,MAAA,WAAW,EAAEgB;AAAhG;AAAA;AAAA;AAAA;AAAA;AAJ3B,GA5BY,EAkCZ;AACIR,IAAAA,KAAK,EAAE,mBADX;AAEIE,IAAAA,GAAG,EAAE,UAFT;AAGID,IAAAA,SAAS,EAAE,UAHf;AAIIE,IAAAA,MAAM,EAAE,CAACI,CAAD,EAAIC,MAAJ,kBACJ,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,UAAxB;AAAmC,MAAA,MAAM,EAAEA,MAAM,CAACpB,gBAAlD;AAAoE,MAAA,OAAO,EAAEI,OAA7E;AAAsF,MAAA,WAAW,EAAEgB;AAAnG;AAAA;AAAA;AAAA;AAAA;AALR,GAlCY,EA0CZ;AACIR,IAAAA,KAAK,EAAE,QADX;AAEIE,IAAAA,GAAG,EAAE,QAFT;AAGID,IAAAA,SAAS,EAAE,QAHf;AAIIK,IAAAA,KAAK,EAAE,QAJX;AAKIH,IAAAA,MAAM,EAAE,CAACI,CAAD,EAAIC,MAAJ,kBACJ;AAAA,8BACI;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAC,SAAxB;AAAkC,UAAA,MAAM,EAAEA,MAAM,CAACK,MAAjD;AAAyD,UAAA,OAAO,EAAErB,OAAlE;AAA2E,UAAA,WAAW,EAAEgB;AAAxF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKvB,0BAA0B,CAACuB,MAAD,CAA1B,gBACG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE7B,OAAO,CAACmC,IAAzB;AAA+B,QAAA,OAAO,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAC,wBAAxD;AAAiF,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,UAAU,EAAE,SAA7B;AAAwCC,UAAAA,WAAW,EAAE,SAArD;AAAgEC,UAAAA,WAAW,EAAE,CAA7E;AAAgFC,UAAAA,UAAU,EAAE;AAA5F;AAAxF;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,IANR;AAAA;AANR,GA1CY,CAAhB;AA4DA;AAAA;AAAQ;AACJ;AAAA,gBACKrC,YAAY,gBAAE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEiB,OAAhB;AAAyB,QAAA,UAAU,EAAEjB;AAArC;AAAA;AAAA;AAAA;AAAA,cAAF,gBAA0D,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAD3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAKH,CAlGD;;GAAML,8B;UACcG,S,EACCb,W,EACIC,W;;;KAHnBS,8B;AAoGN,MAAMG,SAAS,GAAGd,UAAU,CAAEsD,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,KAFX;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GAD6B;AAOrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHR,IAAAA,UAAU,EAAE;AAFT,GAP8B;AAWrCS,EAAAA,IAAI,EAAE;AACFN,IAAAA,OAAO,EAAE,MADP;AAEFE,IAAAA,cAAc,EAAE,UAFd;AAGFK,IAAAA,SAAS,EAAE;AAHT,GAX+B;AAgBrCf,EAAAA,IAAI,EAAE;AACFgB,IAAAA,SAAS,EAAE;AADT;AAhB+B,CAAZ,CAAD,CAA5B;AAqBA,eAAerD,8BAAf","sourcesContent":["import React, { useEffect } from 'react';\n// antd imports\nimport { Table } from 'antd';\nimport '../../theming/antd.css';\n// material-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PetPreviewProfileComponent from 'components/pet-profile/PetPreviewProfileComponent';\nimport PriceTag from 'components/PriceTag';\nimport { getAdminTransactions, updateTransaction } from 'redux/actions';\nimport moment from 'moment';\nimport { Chip } from '@material-ui/core';\nimport AdminStatusTag from 'components/tags/AdminStatusTag';\nimport Loading from 'components/Loading';\n\nconst TransactionsAdminOverviewTable = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const transactions = useSelector((state) => state.transaction.transactions);\n\n    // states\n    const checkRequiresInvestigation = (t) => (t.senderResponse === 'fail' && t.receiverResponse === 'success') || (t.senderResponse === 'success' && t.receiverResponse === 'fail');\n\n    useEffect(() => {\n        \n           if (props.active) { //get transactions when tab is opened\n            dispatch(getAdminTransactions(props.user.id)); \n            \n        }       \n    }, [props, dispatch])\n\n\n\n    // update transaction on confirming to change the transaction status\n    const confirm = async (transaction) => {\n        await dispatch(updateTransaction(transaction));\n        await dispatch(getAdminTransactions(props.user.id));\n    };\n\n    // get the owner of the pet\n    const getPetOwner = (transaction) => {\n        if (transaction.pet?.ownerId === transaction.senderId?._id) {\n            return transaction.senderId;\n        } else {\n            return transaction.receiverId;\n        }\n    };\n\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'orderNr',\n            key: 'orderNr',\n            render: (id) => <p>{String(id).toUpperCase()}</p>,\n        },\n        {\n            title: 'MATE',\n            dataIndex: 'pet',\n            key: 'pet',\n            align: 'center',\n            render: (_, record) => <PetPreviewProfileComponent username={getPetOwner(record).username} pet={record.pet} />,\n        },\n        {\n            title: 'AMOUNT',\n            dataIndex: 'amount',\n            key: 'amount',\n            align: 'right',\n            render: (_, record) => <PriceTag price={record.amount} />,\n        },\n        {\n            title: 'DEADLINE',\n            dataIndex: 'deadline',\n            key: 'deadline',\n            align: 'center',\n            render: (deadline) => <div>{String(moment(deadline).format('LLL'))}</div>,\n        },\n        {\n            title: 'SENDER RESPONSE',\n            key: 'response',\n            dataIndex: 'response',\n            render: (_, record) => <AdminStatusTag variant=\"sender\" status={record.senderResponse}  confirm={confirm} transaction={record} />,\n        },\n        {\n            title: 'RECEIVER RESPONSE',\n            key: 'response',\n            dataIndex: 'response',\n            render: (_, record) => (\n                <AdminStatusTag variant=\"receiver\" status={record.receiverResponse} confirm={confirm} transaction={record} />\n            ),\n        },\n        {\n            title: 'STATUS',\n            key: 'status',\n            dataIndex: 'status',\n            align: 'center',\n            render: (_, record) => (\n                <>\n                    <div>\n                        <AdminStatusTag variant=\"default\" status={record.status} confirm={confirm} transaction={record} />\n                    </div>\n                    {checkRequiresInvestigation(record) ? (\n                        <Chip className={classes.tags} variant=\"outlined\" label=\"Requires Investigation\" style={{color: 'black', background: '#FCCA46', borderColor: '#FDCD7F', borderWidth: 2, fontWeight: 'lighter'}} />\n                    ) : null}\n                </>\n            ),\n        },\n    ];\n\n    return (//if transactions are loaded, shw the table; otherwise loading indicator\n        <div>\n            {transactions? <Table columns={columns} dataSource={transactions} /> : <Loading />} \n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 500,\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignSelf: 'flex-end',\n    },\n    tags: {\n        marginTop: 10,\n    },\n}));\n\nexport default TransactionsAdminOverviewTable;\n"]},"metadata":{},"sourceType":"module"}