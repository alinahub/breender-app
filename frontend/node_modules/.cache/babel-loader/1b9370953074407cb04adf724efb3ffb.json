{"ast":null,"code":"import axios from 'axios';\nexport default class PetService {\n  static URL() {\n    return 'http://localhost:4000/pets';\n  }\n\n  static setToken() {\n    const token = localStorage.getItem('jwtToken');\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n  }\n\n  static getPets(species, sex, breed, age, page) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.get(`/pets/search?species=${species}&sex=${sex}&breed=${breed}&age[]=${age}&page=${page}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static getPet(id) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.get(`/pets/${id}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static deletePet(id) {\n    this.setToken();\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.delete(`/pets/${id}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static async updatePet(pet) {\n    this.setToken();\n    const {\n      data\n    } = await axios.put(`/pets/${pet.id}`, pet);\n    return data;\n  }\n\n  static async createPet(pet) {\n    this.setToken();\n    const {\n      data\n    } = await axios.post(`/pets/`, pet);\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/PetService.js"],"names":["axios","PetService","URL","setToken","token","localStorage","getItem","defaults","headers","common","getPets","species","sex","breed","age","page","Promise","resolve","reject","data","get","err","getPet","id","deletePet","delete","updatePet","pet","put","createPet","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAClB,SAAHC,GAAG,GAAG;AACT,WAAO,4BAAP;AACH;;AAEc,SAARC,QAAQ,GAAG;AACd,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACAN,IAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYL,KAA7D;AACH;;AAEa,SAAPM,OAAO,CAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAC3C,SAAKZ,QAAL;AACA,WAAO,IAAIa,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAW,wBAAuBT,OAAQ,QAAOC,GAAI,UAASC,KAAM,UAASC,GAAI,SAAQC,IAAK,EAA9F,CAAvB;AACAE,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEY,SAANC,MAAM,CAACC,EAAD,EAAK;AACd,SAAKpB,QAAL;AACA,WAAO,IAAIa,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAW,SAAQG,EAAG,EAAtB,CAAvB;AACAN,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEe,SAATG,SAAS,CAACD,EAAD,EAAK;AACjB,SAAKpB,QAAL;AACA,WAAO,IAAIa,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMnB,KAAK,CAACyB,MAAN,CAAc,SAAQF,EAAG,EAAzB,CAAvB;AACAN,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEqB,eAATK,SAAS,CAACC,GAAD,EAAM;AACxB,SAAKxB,QAAL;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAAC4B,GAAN,CAAW,SAAQD,GAAG,CAACJ,EAAG,EAA1B,EAA6BI,GAA7B,CAAvB;AACA,WAAOR,IAAP;AACH;;AAEqB,eAATU,SAAS,CAACF,GAAD,EAAM;AACxB,SAAKxB,QAAL;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAAC8B,IAAN,CAAY,QAAZ,EAAqBH,GAArB,CAAvB;AACA,WAAOR,IAAP;AACH;;AAxD2B","sourcesContent":["import axios from 'axios';\n\nexport default class PetService {\n    static URL() {\n        return 'http://localhost:4000/pets';\n    }\n\n    static setToken() {\n        const token = localStorage.getItem('jwtToken');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    }\n\n    static getPets(species, sex, breed, age, page) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.get(`/pets/search?species=${species}&sex=${sex}&breed=${breed}&age[]=${age}&page=${page}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static getPet(id) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.get(`/pets/${id}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static deletePet(id) {\n        this.setToken();\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.delete(`/pets/${id}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static async updatePet(pet) {\n        this.setToken();\n        const { data } = await axios.put(`/pets/${pet.id}`, pet);\n        return data;\n    }\n\n    static async createPet(pet) {\n        this.setToken();\n        const { data } = await axios.post(`/pets/`, pet);\n        return data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}