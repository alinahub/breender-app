{"ast":null,"code":"import { HttpService } from 'services';\nexport default class DocumentService {\n  static baseURL() {\n    return 'http://localhost:4000/documents';\n  }\n\n  static getDocuments() {\n    return new Promise((resolve, reject) => {\n      HttpService.get(DocumentService.baseURL(), function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static getProcessedDocuments(condition) {\n    return new Promise((resolve, reject) => {\n      HttpService.get(`${DocumentService.baseURL()}/${condition}`, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static verifyDocument(docId, docType, ownerId, officialName) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(`${DocumentService.baseURL()}/verify`, {\n        docId: docId,\n        docType: docType,\n        ownerId: ownerId,\n        officialName: officialName\n      }, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static declineDocument(docId, docType, ownerId, officialName) {\n    return new Promise((resolve, reject) => {\n      HttpService.post(`${DocumentService.baseURL()}/decline`, {\n        docId: docId,\n        docType: docType,\n        ownerId: ownerId,\n        officialName: officialName\n      }, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/DocumentService.js"],"names":["HttpService","DocumentService","baseURL","getDocuments","Promise","resolve","reject","get","data","textStatus","getProcessedDocuments","condition","verifyDocument","docId","docType","ownerId","officialName","post","declineDocument"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,eAAe,MAAMC,eAAN,CAAsB;AACnB,SAAPC,OAAO,GAAG;AACb,WAAO,iCAAP;AACH;;AAEkB,SAAZC,YAAY,GAAG;AAClB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACO,GAAZ,CACIN,eAAe,CAACC,OAAhB,EADJ,EAEI,UAAUM,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAJL,EAKI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAPL;AASH,KAVM,CAAP;AAWH;;AAE2B,SAArBC,qBAAqB,CAACC,SAAD,EAAY;AACpC,WAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACO,GAAZ,CACK,GAAEN,eAAe,CAACC,OAAhB,EAA0B,IAAGS,SAAU,EAD9C,EAEI,UAAUH,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAJL,EAKI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAPL;AASH,KAVM,CAAP;AAWH;;AAEoB,SAAdG,cAAc,CAACC,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,YAA1B,EAAwC;AACzD,WAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACiB,IAAZ,CACK,GAAEhB,eAAe,CAACC,OAAhB,EAA0B,SADjC,EAEI;AACIW,QAAAA,KAAK,EAAEA,KADX;AAEIC,QAAAA,OAAO,EAAEA,OAFb;AAGIC,QAAAA,OAAO,EAAEA,OAHb;AAIIC,QAAAA,YAAY,EAAEA;AAJlB,OAFJ,EAQI,UAAUR,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAVL,EAWI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAbL;AAeH,KAhBM,CAAP;AAiBH;;AAEqB,SAAfS,eAAe,CAACL,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,YAA1B,EAAwC;AAC1D,WAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACiB,IAAZ,CACK,GAAEhB,eAAe,CAACC,OAAhB,EAA0B,UADjC,EAEI;AACIW,QAAAA,KAAK,EAAEA,KADX;AAEIC,QAAAA,OAAO,EAAEA,OAFb;AAGIC,QAAAA,OAAO,EAAEA,OAHb;AAIIC,QAAAA,YAAY,EAAEA;AAJlB,OAFJ,EAQI,UAAUR,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAVL,EAWI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAbL;AAeH,KAhBM,CAAP;AAiBH;;AAvEgC","sourcesContent":["import { HttpService } from 'services';\n\nexport default class DocumentService {\n    static baseURL() {\n        return 'http://localhost:4000/documents';\n    }\n\n    static getDocuments() {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                DocumentService.baseURL(),\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getProcessedDocuments(condition) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${DocumentService.baseURL()}/${condition}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static verifyDocument(docId, docType, ownerId, officialName) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${DocumentService.baseURL()}/verify`,\n                {\n                    docId: docId,\n                    docType: docType,\n                    ownerId: ownerId,\n                    officialName: officialName\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static declineDocument(docId, docType, ownerId, officialName) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${DocumentService.baseURL()}/decline`,\n                {\n                    docId: docId,\n                    docType: docType,\n                    ownerId: ownerId,\n                    officialName: officialName\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}