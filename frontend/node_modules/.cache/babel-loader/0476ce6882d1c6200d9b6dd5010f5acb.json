{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport UserProfile from \"../components/user-profile/UserProfile\";\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { getUsersInfo, getUserPets, getReviewsOnUser } from 'redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserProfileView(props) {\n  _s();\n\n  const user = useUser(); // get information on user from the redux store\n\n  var usersInfo = useSelector(state => state.user.userInfo);\n  var pets = useSelector(state => state.user.pets);\n  var reviews = useSelector(state => state.user.reviews);\n  useEffect(() => {\n    let loading = true;\n\n    const loadUser = async () => {\n      // trigger the redux action getUsersInfo\n      if (!loading) return;\n      await props.dispatch(getUsersInfo(user.id));\n    };\n\n    if (!usersInfo) {\n      loadUser();\n    }\n\n    return () => {\n      loading = false;\n    };\n  }, [props, user.id, usersInfo]);\n  useEffect(() => {\n    let loading = true;\n\n    const loadUserPets = async () => {\n      // trigger the redux action getUserPets\n      if (!loading) return;\n      await props.dispatch(getUserPets(user.id));\n    };\n\n    if (!pets) {\n      loadUserPets();\n    }\n\n    return () => {\n      loading = false;\n    };\n  }, [props, user.id, pets]);\n  useEffect(() => {\n    let loading = true;\n\n    const loadReviews = async () => {\n      // trigger the redux action getReviewsOnUser\n      if (!loading) return;\n      await props.dispatch(getReviewsOnUser(user.id));\n    };\n\n    if (!reviews) {\n      loadReviews();\n    }\n\n    return () => {\n      loading = false;\n    };\n  }, [props, user.id, reviews]);\n  return /*#__PURE__*/_jsxDEV(UserProfile, {\n    user: usersInfo ? usersInfo : user,\n    pets: pets,\n    profileOfLoggedInUser: true,\n    reviews: reviews\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n}\n\n_s(UserProfileView, \"beLQ4my15gzrx7juh+VTTU9S+Es=\", false, function () {\n  return [useUser, useSelector, useSelector, useSelector];\n});\n\n_c = UserProfileView;\nexport default connect()(UserProfileView);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserProfileView.js"],"names":["React","useEffect","connect","useSelector","UserProfile","useUser","getUsersInfo","getUserPets","getReviewsOnUser","UserProfileView","props","user","usersInfo","state","userInfo","pets","reviews","loading","loadUser","dispatch","id","loadUserPets","loadReviews"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,QAA4D,eAA5D;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAMC,IAAI,GAAGN,OAAO,EAApB,CAD4B,CAE5B;;AACA,MAAIO,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,IAAN,CAAWG,QAAvB,CAA3B;AACA,MAAIC,IAAI,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,IAAN,CAAWI,IAAvB,CAAtB;AACA,MAAIC,OAAO,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,IAAN,CAAWK,OAAvB,CAAzB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,OAAO,GAAG,IAAd;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AACzB;AACA,UAAI,CAACD,OAAL,EAAc;AACd,YAAOP,KAAK,CAACS,QAAN,CAAeb,YAAY,CAACK,IAAI,CAACS,EAAN,CAA3B,CAAP;AACH,KAJD;;AAKA,QAAI,CAACR,SAAL,EAAgB;AACZM,MAAAA,QAAQ;AACX;;AACD,WAAO,MAAM;AACTD,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAdQ,EAcN,CAACP,KAAD,EAAQC,IAAI,CAACS,EAAb,EAAiBR,SAAjB,CAdM,CAAT;AAgBAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,OAAO,GAAG,IAAd;;AAEA,UAAMI,YAAY,GAAG,YAAY;AAC7B;AACA,UAAI,CAACJ,OAAL,EAAc;AACd,YAAMP,KAAK,CAACS,QAAN,CAAeZ,WAAW,CAACI,IAAI,CAACS,EAAN,CAA1B,CAAN;AACH,KAJD;;AAKA,QAAI,CAACL,IAAL,EAAW;AACPM,MAAAA,YAAY;AACf;;AAED,WAAO,MAAM;AACTJ,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAfQ,EAeN,CAACP,KAAD,EAAQC,IAAI,CAACS,EAAb,EAAiBL,IAAjB,CAfM,CAAT;AAiBAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,OAAO,GAAG,IAAd;;AAEA,UAAMK,WAAW,GAAG,YAAY;AAC5B;AACA,UAAI,CAACL,OAAL,EAAc;AACd,YAAMP,KAAK,CAACS,QAAN,CAAeX,gBAAgB,CAACG,IAAI,CAACS,EAAN,CAA/B,CAAN;AACH,KAJD;;AAMA,QAAI,CAACJ,OAAL,EAAc;AACVM,MAAAA,WAAW;AACd;;AAED,WAAO,MAAM;AACTL,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GAhBQ,EAgBN,CAACP,KAAD,EAAQC,IAAI,CAACS,EAAb,EAAiBJ,OAAjB,CAhBM,CAAT;AAkBA,sBAAO,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,SAAS,GAAGA,SAAH,GAAeD,IAA3C;AAAiD,IAAA,IAAI,EAAEI,IAAvD;AAA6D,IAAA,qBAAqB,EAAE,IAApF;AAA0F,IAAA,OAAO,EAAEC;AAAnG;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA3DQP,e;UACQJ,O,EAEGF,W,EACLA,W,EACGA,W;;;KALTM,e;AA6DT,eAAeP,OAAO,GAAGO,eAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport UserProfile from \"../components/user-profile/UserProfile\";\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { getUsersInfo, getUserPets, getReviewsOnUser } from 'redux/actions';\n\nfunction UserProfileView(props) {\n    const user = useUser();\n    // get information on user from the redux store\n    var usersInfo = useSelector((state) => state.user.userInfo);\n    var pets = useSelector((state) => state.user.pets);\n    var reviews = useSelector((state) => state.user.reviews);\n\n    useEffect(() => {\n        let loading = true;\n\n        const loadUser = async () => {\n            // trigger the redux action getUsersInfo\n            if (!loading) return;\n            await  props.dispatch(getUsersInfo(user.id));\n        };\n        if (!usersInfo) {\n            loadUser();\n        }\n        return () => {\n            loading = false;\n        };\n    }, [props, user.id, usersInfo]);\n\n    useEffect(() => {\n        let loading = true;\n\n        const loadUserPets = async () => {\n            // trigger the redux action getUserPets\n            if (!loading) return;\n            await props.dispatch(getUserPets(user.id));\n        };\n        if (!pets) {\n            loadUserPets();\n        }\n    \n        return () => {\n            loading = false;\n        };\n    }, [props, user.id, pets]);\n\n    useEffect(() => {\n        let loading = true;\n\n        const loadReviews = async () => {\n            // trigger the redux action getReviewsOnUser\n            if (!loading) return;\n            await props.dispatch(getReviewsOnUser(user.id));\n        };\n\n        if (!reviews) {\n            loadReviews();\n        }\n    \n        return () => {\n            loading = false;\n        };\n    }, [props, user.id, reviews]);\n\n    return <UserProfile user={usersInfo ? usersInfo : user} pets={pets} profileOfLoggedInUser={true} reviews={reviews} />\n}\n\nexport default connect()(UserProfileView);"]},"metadata":{},"sourceType":"module"}