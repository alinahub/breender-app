{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/ReviewComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport { VerificationIcon } from '../icons';\nimport { useHistory } from 'react-router-dom';\nimport { Tooltip } from 'antd';\nimport { getUser, getSelectedUserPets, getReviewsOnSelectedUser } from 'redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(5),\n    margin: 'auto',\n    maxWidth: '80%',\n    backgroundColor: '#7D7F9A'\n  },\n  reviewText: {\n    backgroundColor: 'white',\n    padding: theme.spacing(3)\n  },\n  typography: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  }\n}));\nexport default function ReviewComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const loadUser = async id => {\n    // trigger the redux action getUser\n    dispatch(getUser(id));\n  };\n\n  const loadUserPets = async userId => {\n    // trigger the redux action getSelectedUserPets\n    dispatch(getSelectedUserPets(userId));\n  };\n\n  const loadReviews = async userId => {\n    // trigger the redux action getReviewsOnSelectedUser\n    dispatch(getReviewsOnSelectedUser(userId));\n  };\n\n  const goToUserPage = () => {\n    history.push('/user/' + props.review.reviewerId);\n    loadUser(props.review.reviewerId);\n    loadUserPets(props.review.reviewerId);\n    loadReviews(props.review.reviewerId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: goToUserPage,\n            color: \"white\",\n            children: [\"Reviewer: \", props.review.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"space-between\",\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"rating\",\n              value: props.review.rating,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              trigger: \"hover\",\n              placement: \"top\",\n              title: props.review.transaction.status !== \"pending\" ? \"The transaction of reviewer is processed.\" : \"The transaction of reviewer is NOT processed.\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(VerificationIcon, {\n                  verified: props.review.transaction.status !== \"pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.reviewText,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.typography,\n              children: props.review.review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: 'white'\n            },\n            children: new Date(props.review.reviewDate).toLocaleDateString('en-GB')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReviewComponent, \"UqlCHxtTKTAXxbed+rFbrQnCoEE=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = ReviewComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewComponent\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/ReviewComponent.js"],"names":["React","makeStyles","Paper","Typography","Button","Grid","Rating","VerificationIcon","useHistory","Tooltip","getUser","getSelectedUserPets","getReviewsOnSelectedUser","useDispatch","useStyles","theme","root","flexGrow","padding","spacing","paper","margin","maxWidth","backgroundColor","reviewText","typography","marginTop","marginBottom","ReviewComponent","props","classes","history","dispatch","loadUser","id","loadUserPets","userId","loadReviews","goToUserPage","push","review","reviewerId","username","rating","transaction","status","color","Date","reviewDate","toLocaleDateString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport { VerificationIcon } from '../icons';\nimport { useHistory } from 'react-router-dom';\nimport { Tooltip } from 'antd';\nimport { getUser, getSelectedUserPets, getReviewsOnSelectedUser } from 'redux/actions';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        margin: 'auto',\n        maxWidth: '80%',\n        backgroundColor: '#7D7F9A',\n    },\n    reviewText: {\n        backgroundColor: 'white',\n        padding: theme.spacing(3),\n    },\n    typography: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n}));\n\nexport default function ReviewComponent(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const loadUser = async (id) => {\n        // trigger the redux action getUser\n        dispatch(getUser(id));\n    };\n\n    const loadUserPets = async (userId) => {\n        // trigger the redux action getSelectedUserPets\n        dispatch(getSelectedUserPets(userId));\n    };\n\n    const loadReviews = async (userId) => {\n        // trigger the redux action getReviewsOnSelectedUser\n        dispatch(getReviewsOnSelectedUser(userId));\n    };\n\n    const goToUserPage = () => {\n        history.push('/user/' + props.review.reviewerId);\n        loadUser(props.review.reviewerId);\n        loadUserPets(props.review.reviewerId);\n        loadReviews(props.review.reviewerId);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Button onClick={goToUserPage} color=\"white\">Reviewer: {props.review.username}</Button>\n                    </Grid>\n                    <Grid container direction=\"row\" justify=\"space-between\" item>\n                        <Grid item>\n                            <Rating name=\"rating\" value={props.review.rating} readOnly />\n                        </Grid>\n                        <Grid item>\n                            <Tooltip trigger=\"hover\" placement=\"top\" title={props.review.transaction.status !== \"pending\" ? \"The transaction of reviewer is processed.\" : \"The transaction of reviewer is NOT processed.\"}>\n                                <div>\n                                    <VerificationIcon verified={props.review.transaction.status !== \"pending\"} />\n                                </div>\n                            </Tooltip>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.reviewText}>\n                            <Typography className={classes.typography}>{props.review.review}</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"body2\" style={{ color: 'white' }}>\n                            {new Date(props.review.reviewDate).toLocaleDateString('en-GB')}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}