{"ast":null,"code":"import _defineProperty from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{connect,useDispatch}from'react-redux';import{useHistory}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import{Button,CircularProgress}from'@material-ui/core';// components imports\nimport{PetInformationForm,PetPhotosForm}from'components/forms';import Loading from'components/Loading';import{useLoggedInUser}from'helper/hooks/auth.hooks';// store-relevant imports\nimport{usePetCompetitions,usePetDocuments,usePetPictures,usePetProfilePictureToUpload,useUser}from'helper/hooks/';import{addPet,clearPet,updateCompetitionsToUpload,updateDocumentsToUpload,updatePicturesToUpload,updateProfilePicture,getUserPets}from'redux/actions';// services import\nimport{FirebaseService,NotificationService}from'services';import{isObjEmpty}from'helper/helpers';/**\n * \n * @param {*} props \n * Main view for adding a new pet\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPetView=function AddPetView(props){var classes=useStyles();var dispatch=useDispatch();var history=useHistory();// get user\nvar user=useUser();var loggedInUser=useLoggedInUser();// get pet upload states\nvar petDocuments=usePetDocuments();var petCompetitions=usePetCompetitions();var petPictures=usePetPictures();var petProfilePictureToUpload=usePetProfilePictureToUpload();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),buttonLoading=_useState4[0],setButtonLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),formIsDisabled=_useState6[0],setFormIsDisabled=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),nickname=_useState10[0],setNickname=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),sex=_useState12[0],setSex=_useState12[1];var _useState13=useState(new Date()),_useState14=_slicedToArray(_useState13,2),birthDate=_useState14[0],setBirthDate=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),species=_useState16[0],setSpecies=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),breed=_useState18[0],setBreed=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),price=_useState20[0],setPrice=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),purchased=_useState22[0],setPurchased=_useState22[1];useEffect(function(){var isEmpty=function isEmpty(obj){return obj===''||obj===undefined;};var disabled=isEmpty(name)||isObjEmpty(petProfilePictureToUpload)||isEmpty(sex)||isEmpty(species)||isEmpty(breed);setFormIsDisabled(disabled);},[name,sex,breed,species,petProfilePictureToUpload]);useEffect(function(){var loading=true;var clear=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(loading){_context.next=2;break;}return _context.abrupt(\"return\");case 2:dispatch(clearPet());setLoading(false);case 4:case\"end\":return _context.stop();}}},_callee);}));return function clear(){return _ref.apply(this,arguments);};}();clear();return function(){loading=false;};},[dispatch]);var uploadCompetitions=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var competitionsData,index,value,metadata,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:competitionsData=_toConsumableArray(petCompetitions);index=0;case 2:if(!(index<competitionsData.length)){_context2.next=13;break;}value=competitionsData[index];if(!(value.certificate!==null||value.certificate!==undefined)){_context2.next=10;break;}metadata={contentType:value.certificate.type};_context2.next=8;return FirebaseService.upload(value.certificate.path,value.certificate.data,metadata);case 8:url=_context2.sent;competitionsData[index].certificate.url=url;case 10:index++;_context2.next=2;break;case 13:_context2.next=15;return dispatch(updateCompetitionsToUpload(competitionsData));case 15:return _context2.abrupt(\"return\",competitionsData);case 16:case\"end\":return _context2.stop();}}},_callee2);}));return function uploadCompetitions(){return _ref2.apply(this,arguments);};}();var uploadDocuments=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var documentsData,index,value,metadata,url;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:documentsData=_toConsumableArray(petDocuments);index=0;case 2:if(!(index<documentsData.length)){_context3.next=12;break;}value=documentsData[index];metadata={contentType:value.type};_context3.next=7;return FirebaseService.upload(value.path,value.data,metadata);case 7:url=_context3.sent;documentsData[index].url=url;case 9:index++;_context3.next=2;break;case 12:_context3.next=14;return dispatch(updateDocumentsToUpload(documentsData));case 14:return _context3.abrupt(\"return\",documentsData);case 15:case\"end\":return _context3.stop();}}},_callee3);}));return function uploadDocuments(){return _ref3.apply(this,arguments);};}();var uploadPictures=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var picturesData,index,value,metadata,url;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:picturesData=_toConsumableArray(petPictures);index=0;case 2:if(!(index<picturesData.length)){_context4.next=12;break;}value=picturesData[index];metadata={contentType:'image/png'};_context4.next=7;return FirebaseService.upload(value.path,value.data,metadata);case 7:url=_context4.sent;picturesData[index].src=url;case 9:index++;_context4.next=2;break;case 12:_context4.next=14;return dispatch(updatePicturesToUpload(picturesData));case 14:return _context4.abrupt(\"return\",picturesData);case 15:case\"end\":return _context4.stop();}}},_callee4);}));return function uploadPictures(){return _ref4.apply(this,arguments);};}();var uploadProfilePicture=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var value,metadata,url;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:value=petProfilePictureToUpload;metadata={contentType:'image/png'};_context5.next=4;return FirebaseService.upload(value.path,value.data,metadata);case 4:url=_context5.sent;value.src=url;_context5.next=8;return dispatch(updateProfilePicture(value,{}));case 8:return _context5.abrupt(\"return\",value);case 9:case\"end\":return _context5.stop();}}},_callee5);}));return function uploadProfilePicture(){return _ref5.apply(this,arguments);};}();var createPet=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var documents,competitions,pictures,profilePicture,dateCreated,petToUpload,onSuccess,onError;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setButtonLoading(true);// upload documents and pics to firebase first\n_context6.next=3;return uploadDocuments();case 3:documents=_context6.sent;_context6.next=6;return uploadCompetitions();case 6:competitions=_context6.sent;_context6.next=9;return uploadPictures();case 9:pictures=_context6.sent;_context6.next=12;return uploadProfilePicture();case 12:profilePicture=_context6.sent;dateCreated=Date.now();// combine all information about a pet\npetToUpload={ownerId:user.id,officialName:name,nickname:nickname,birthDate:birthDate,sex:sex,price:price,profilePicture:profilePicture,pictures:pictures,dateCreated:dateCreated,breed:breed,species:species,competitions:competitions,documents:documents};onSuccess=function onSuccess(){NotificationService.notify('success','Success','Your four-legged friend was added to your profile!');history.push('/');dispatch(clearPet());// update pets of logged in user in redux store\ndispatch(getUserPets(user.id));};onError=function onError(){NotificationService.notify('error','Error','There was a problem uploading your pet.');};_context6.next=19;return dispatch(addPet(petToUpload,onSuccess,onError));case 19:setButtonLoading(false);case 20:case\"end\":return _context6.stop();}}},_callee6);}));return function createPet(){return _ref6.apply(this,arguments);};}();return loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.layout,children:[/*#__PURE__*/_jsx(PetPhotosForm,{mode:\"add\"}),/*#__PURE__*/_jsx(PetInformationForm,{mode:\"add\",nameProp:{name:name,setName:setName},nicknameProp:{nickname:nickname,setNickname:setNickname},sexProp:{sex:sex,setSex:setSex},birthDateProp:{birthDate:birthDate,setBirthDate:setBirthDate},speciesProp:{species:species,setSpecies:setSpecies},breedProp:{breed:breed,setBreed:setBreed},priceProp:{price:price,setPrice:setPrice},disabledProp:{formIsDisabled:formIsDisabled,setFormIsDisabled:setFormIsDisabled},purchasedProp:{purchased:purchased,setPurchased:setPurchased},user:loggedInUser})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.button,children:/*#__PURE__*/_jsxs(Button,{disabled:formIsDisabled,onClick:createPet,type:\"submit\",variant:\"contained\",color:\"secondary\",size:\"large\",children:[buttonLoading?/*#__PURE__*/_jsx(CircularProgress,{size:20,style:{marginRight:10,color:'white'}}):'',\" Save\"]})})]});};var useStyles=makeStyles(function(theme){return{layout:_defineProperty({display:'flex',width:'100%',justifyContent:'center'},theme.breakpoints.down('sm'),{flexDirection:'column',width:'auto',alignItems:'center'}),button:{display:'flex',justifyContent:'flex-end',marginRight:50,marginBottom:25,marginTop:-25}};});// connect() establishes the connection to the redux functionalities\nexport default connect()(AddPetView);","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/AddPetView.js"],"names":["React","useEffect","useState","connect","useDispatch","useHistory","makeStyles","Button","CircularProgress","PetInformationForm","PetPhotosForm","Loading","useLoggedInUser","usePetCompetitions","usePetDocuments","usePetPictures","usePetProfilePictureToUpload","useUser","addPet","clearPet","updateCompetitionsToUpload","updateDocumentsToUpload","updatePicturesToUpload","updateProfilePicture","getUserPets","FirebaseService","NotificationService","isObjEmpty","AddPetView","props","classes","useStyles","dispatch","history","user","loggedInUser","petDocuments","petCompetitions","petPictures","petProfilePictureToUpload","loading","setLoading","buttonLoading","setButtonLoading","formIsDisabled","setFormIsDisabled","name","setName","nickname","setNickname","sex","setSex","Date","birthDate","setBirthDate","species","setSpecies","breed","setBreed","price","setPrice","purchased","setPurchased","isEmpty","obj","undefined","disabled","clear","uploadCompetitions","competitionsData","index","length","value","certificate","metadata","contentType","type","upload","path","data","url","uploadDocuments","documentsData","uploadPictures","picturesData","src","uploadProfilePicture","createPet","documents","competitions","pictures","profilePicture","dateCreated","now","petToUpload","ownerId","id","officialName","onSuccess","notify","push","onError","layout","button","marginRight","color","theme","display","width","justifyContent","breakpoints","down","flexDirection","alignItems","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, CircularProgress } from '@material-ui/core';\n// components imports\nimport { PetInformationForm, PetPhotosForm } from 'components/forms';\nimport Loading from 'components/Loading';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\n\n// store-relevant imports\nimport { usePetCompetitions, usePetDocuments, usePetPictures, usePetProfilePictureToUpload, useUser } from 'helper/hooks/';\nimport { addPet, clearPet, updateCompetitionsToUpload, updateDocumentsToUpload, updatePicturesToUpload, updateProfilePicture, getUserPets } from 'redux/actions';\n// services import\nimport { FirebaseService, NotificationService } from 'services';\nimport { isObjEmpty } from 'helper/helpers';\n\n/**\n * \n * @param {*} props \n * Main view for adding a new pet\n */\nconst AddPetView = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // get user\n    const user = useUser();\n    const loggedInUser = useLoggedInUser();\n\n    // get pet upload states\n    const petDocuments = usePetDocuments();\n    const petCompetitions = usePetCompetitions();\n    const petPictures = usePetPictures();\n    const petProfilePictureToUpload = usePetProfilePictureToUpload();\n\n    const [loading, setLoading] = useState(true);\n    const [buttonLoading, setButtonLoading] = useState(false);\n    const [formIsDisabled, setFormIsDisabled] = useState(false);\n    const [name, setName] = useState('');\n    const [nickname, setNickname] = useState('');\n    const [sex, setSex] = useState('');\n    const [birthDate, setBirthDate] = useState(new Date());\n    const [species, setSpecies] = useState('');\n    const [breed, setBreed] = useState('');\n    const [price, setPrice] = useState(0);\n    const [purchased, setPurchased] = useState(false);\n\n    useEffect(() => {\n        const isEmpty = (obj) => obj === '' || obj === undefined;\n        const disabled = isEmpty(name) || isObjEmpty(petProfilePictureToUpload) || isEmpty(sex) || isEmpty(species) || isEmpty(breed);\n        setFormIsDisabled(disabled);\n    }, [name, sex, breed, species, petProfilePictureToUpload]);\n\n    useEffect(() => {\n        let loading = true;\n\n        const clear = async () => {\n            if (!loading) return;\n            dispatch(clearPet());\n            setLoading(false);\n        };\n\n        clear();\n\n        return () => {\n            loading = false;\n        };\n    }, [dispatch]);\n\n    const uploadCompetitions = async () => {\n        const competitionsData = [...petCompetitions];\n        for (let index = 0; index < competitionsData.length; index++) {\n            let value = competitionsData[index];\n            if (value.certificate !== null || value.certificate !== undefined) {\n                const metadata = {\n                    contentType: value.certificate.type,\n                };\n                let url = await FirebaseService.upload(value.certificate.path, value.certificate.data, metadata);\n                competitionsData[index].certificate.url = url;\n            }\n        }\n\n        await dispatch(updateCompetitionsToUpload(competitionsData));\n\n        return competitionsData;\n    };\n\n    const uploadDocuments = async () => {\n        const documentsData = [...petDocuments];\n        for (let index = 0; index < documentsData.length; index++) {\n            let value = documentsData[index];\n            const metadata = {\n                contentType: value.type,\n            };\n            let url = await FirebaseService.upload(value.path, value.data, metadata);\n            documentsData[index].url = url;\n        }\n\n        await dispatch(updateDocumentsToUpload(documentsData));\n\n        return documentsData;\n    };\n\n    const uploadPictures = async () => {\n        const picturesData = [...petPictures];\n        for (let index = 0; index < picturesData.length; index++) {\n            let value = picturesData[index];\n            const metadata = {\n                contentType: 'image/png',\n            };\n\n            let url = await FirebaseService.upload(value.path, value.data, metadata);\n            picturesData[index].src = url;\n        }\n\n        await dispatch(updatePicturesToUpload(picturesData));\n\n        return picturesData;\n    };\n\n    const uploadProfilePicture = async () => {\n        let value = petProfilePictureToUpload;\n        const metadata = {\n            contentType: 'image/png',\n        };\n\n        let url = await FirebaseService.upload(value.path, value.data, metadata);\n        value.src = url;\n\n        await dispatch(updateProfilePicture(value, {}));\n        return value;\n    };\n\n    const createPet = async () => {\n        setButtonLoading(true);\n\n        // upload documents and pics to firebase first\n        const documents = await uploadDocuments();\n        const competitions = await uploadCompetitions();\n        const pictures = await uploadPictures();\n        const profilePicture = await uploadProfilePicture();\n\n        const dateCreated = Date.now();\n        // combine all information about a pet\n        let petToUpload = {\n            ownerId: user.id,\n            officialName: name,\n            nickname: nickname,\n            birthDate: birthDate,\n            sex: sex,\n            price: price,\n            profilePicture: profilePicture,\n            pictures: pictures,\n            dateCreated: dateCreated,\n            breed: breed,\n            species: species,\n            competitions: competitions,\n            documents: documents,\n        };\n\n        const onSuccess = () => {\n            NotificationService.notify('success', 'Success', 'Your four-legged friend was added to your profile!');\n            history.push('/');\n            dispatch(clearPet());\n            // update pets of logged in user in redux store\n            dispatch(getUserPets(user.id));\n        };\n\n        const onError = () => {\n            NotificationService.notify('error', 'Error', 'There was a problem uploading your pet.');\n        };\n\n        await dispatch(addPet(petToUpload, onSuccess, onError));\n        setButtonLoading(false);\n    };\n\n    return loading ? (\n        <Loading />\n    ) : (\n        <div>\n            <div className={classes.layout}>\n                <PetPhotosForm mode=\"add\" />\n                <PetInformationForm\n                    mode=\"add\"\n                    nameProp={{ name, setName }}\n                    nicknameProp={{ nickname, setNickname }}\n                    sexProp={{ sex, setSex }}\n                    birthDateProp={{ birthDate, setBirthDate }}\n                    speciesProp={{ species, setSpecies }}\n                    breedProp={{ breed, setBreed }}\n                    priceProp={{ price, setPrice }}\n                    disabledProp={{ formIsDisabled, setFormIsDisabled }}\n                    purchasedProp={{ purchased, setPurchased }}\n                    user={loggedInUser}\n                />\n            </div>\n            <div className={classes.button}>\n                <Button disabled={formIsDisabled} onClick={createPet} type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\">\n                    {buttonLoading ? <CircularProgress size={20} style={{ marginRight: 10, color: 'white' }} /> : ''} Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            width: 'auto',\n            alignItems: 'center',\n        },\n    },\n    button: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginRight: 50,\n        marginBottom: 25,\n        marginTop: -25,\n    },\n}));\n\n// connect() establishes the connection to the redux functionalities\nexport default connect()(AddPetView);\n"]},"metadata":{},"sourceType":"module"}