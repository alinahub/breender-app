{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{useDispatch}from'react-redux';import{useLocation}from'react-router-dom';// components import\nimport PetProfileComponent from'../components/pet-profile/PetProfileComponent';import Loading from'../components/Loading';// helper imports\nimport{isObjEmpty}from'helper/helpers';import{usePet}from'helper/hooks';import PremiumBanner from'components/PremiumBanner';import{useLoggedInUser}from'helper/hooks/auth.hooks';import{showPremiumBanner}from'helper/helpers';import{getPet,getUser}from'redux/actions';/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PetProfileView(props){var dispatch=useDispatch();var location=useLocation();var loggedInUser=useLoggedInUser();// get id of pet from URL\nvar petId=location.pathname.split('/pet/')[1];var selectedPet=usePet();useEffect(function(){if(selectedPet){dispatch(getUser(selectedPet.ownerId));}else{dispatch(getPet(petId));}},[dispatch,selectedPet,petId]);return isObjEmpty(selectedPet)?/*#__PURE__*/_jsx(Loading,{}):selectedPet?/*#__PURE__*/_jsxs(_Fragment,{children:[showPremiumBanner(loggedInUser)?/*#__PURE__*/_jsx(PremiumBanner,{}):null,/*#__PURE__*/_jsx(PetProfileComponent,{id:petId,officialName:selectedPet.officialName,nickname:selectedPet.nickname,age:selectedPet.age,sex:selectedPet.sex,price:selectedPet.price,profilePicture:selectedPet.profilePicture,pictures:selectedPet.pictures,breed:selectedPet.breed,species:selectedPet.species,documents:selectedPet.documents,competitions:selectedPet.competitions,ownerId:selectedPet.ownerId,purchased:selectedPet.purchased})]}):null;}// connect() establishes allows the usage of redux functionality\nexport default connect()(PetProfileView);","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js"],"names":["React","useEffect","connect","useDispatch","useLocation","PetProfileComponent","Loading","isObjEmpty","usePet","PremiumBanner","useLoggedInUser","showPremiumBanner","getPet","getUser","PetProfileView","props","dispatch","location","loggedInUser","petId","pathname","split","selectedPet","ownerId","officialName","nickname","age","sex","price","profilePicture","pictures","breed","species","documents","competitions","purchased"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA;AACA,MAAOC,CAAAA,mBAAP,KAAgC,+CAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA;AACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,OAASC,MAAT,KAAuB,cAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,eAAhC,CAEA;AACA;AACA;AACA,G,6IAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC3B,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,GAAMc,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,GAAMc,CAAAA,YAAY,CAAGR,eAAe,EAApC,CAEA;AACA,GAAMS,CAAAA,KAAK,CAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,OAAxB,EAAiC,CAAjC,CAAd,CACA,GAAMC,CAAAA,WAAW,CAAGd,MAAM,EAA1B,CAEAP,SAAS,CAAC,UAAM,CACZ,GAAIqB,WAAJ,CAAiB,CACbN,QAAQ,CAACH,OAAO,CAACS,WAAW,CAACC,OAAb,CAAR,CAAR,CACH,CAFD,IAEO,CACHP,QAAQ,CAACJ,MAAM,CAACO,KAAD,CAAP,CAAR,CACH,CACJ,CANQ,CAMN,CAACH,QAAD,CAAWM,WAAX,CAAwBH,KAAxB,CANM,CAAT,CAQA,MAAOZ,CAAAA,UAAU,CAACe,WAAD,CAAV,cACH,KAAC,OAAD,IADG,CAEHA,WAAW,cACX,2BACKX,iBAAiB,CAACO,YAAD,CAAjB,cAAkC,KAAC,aAAD,IAAlC,CAAsD,IAD3D,cAEI,KAAC,mBAAD,EACI,EAAE,CAAEC,KADR,CAEI,YAAY,CAAEG,WAAW,CAACE,YAF9B,CAGI,QAAQ,CAAEF,WAAW,CAACG,QAH1B,CAII,GAAG,CAAEH,WAAW,CAACI,GAJrB,CAKI,GAAG,CAAEJ,WAAW,CAACK,GALrB,CAMI,KAAK,CAAEL,WAAW,CAACM,KANvB,CAOI,cAAc,CAAEN,WAAW,CAACO,cAPhC,CAQI,QAAQ,CAAEP,WAAW,CAACQ,QAR1B,CASI,KAAK,CAAER,WAAW,CAACS,KATvB,CAUI,OAAO,CAAET,WAAW,CAACU,OAVzB,CAWI,SAAS,CAAEV,WAAW,CAACW,SAX3B,CAYI,YAAY,CAAEX,WAAW,CAACY,YAZ9B,CAaI,OAAO,CAAEZ,WAAW,CAACC,OAbzB,CAcI,SAAS,CAAED,WAAW,CAACa,SAd3B,EAFJ,GADW,CAoBX,IAtBJ,CAuBH,CAED;AACA,cAAejC,CAAAA,OAAO,GAAGY,cAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n// components import\r\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\r\nimport Loading from '../components/Loading';\r\n// helper imports\r\nimport { isObjEmpty } from 'helper/helpers';\r\nimport { usePet } from 'helper/hooks';\r\nimport PremiumBanner from 'components/PremiumBanner';\r\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\r\nimport { showPremiumBanner } from 'helper/helpers';\r\nimport { getPet, getUser } from 'redux/actions';\r\n\r\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\r\n\r\nfunction PetProfileView(props) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const loggedInUser = useLoggedInUser();\r\n\r\n    // get id of pet from URL\r\n    const petId = location.pathname.split('/pet/')[1];\r\n    const selectedPet = usePet();\r\n\r\n    useEffect(() => {\r\n        if (selectedPet) {\r\n            dispatch(getUser(selectedPet.ownerId));\r\n        } else {\r\n            dispatch(getPet(petId));\r\n        }\r\n    }, [dispatch, selectedPet, petId]);\r\n\r\n    return isObjEmpty(selectedPet) ? (\r\n        <Loading />\r\n    ) : selectedPet ? (\r\n        <>\r\n            {showPremiumBanner(loggedInUser) ? <PremiumBanner /> : null}\r\n            <PetProfileComponent\r\n                id={petId}\r\n                officialName={selectedPet.officialName}\r\n                nickname={selectedPet.nickname}\r\n                age={selectedPet.age}\r\n                sex={selectedPet.sex}\r\n                price={selectedPet.price}\r\n                profilePicture={selectedPet.profilePicture}\r\n                pictures={selectedPet.pictures}\r\n                breed={selectedPet.breed}\r\n                species={selectedPet.species}\r\n                documents={selectedPet.documents}\r\n                competitions={selectedPet.competitions}\r\n                ownerId={selectedPet.ownerId}\r\n                purchased={selectedPet.purchased}\r\n            />\r\n        </>\r\n    ) : null;\r\n}\r\n\r\n// connect() establishes allows the usage of redux functionality\r\nexport default connect()(PetProfileView);\r\n"]},"metadata":{},"sourceType":"module"}