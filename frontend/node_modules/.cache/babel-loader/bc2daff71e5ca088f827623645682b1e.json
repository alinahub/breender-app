{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/DocumentsArray.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { declineDocument, verifyDocument } from 'redux/actions/documentActions';\nimport Loading from './Loading';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DocumentResultsList from 'components/DocumentResultsList';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  description: theme.typography.body1,\n  modal: {\n    bordeRadius: \"10px\"\n  }\n}));\n\nconst DocumentsArray = props => {\n  _s();\n\n  const classes = useStyles();\n  const documents = useSelector(state => state.documents);\n  const [openVerify, setOpenVerify] = React.useState(false); //for modal to verify doc\n\n  const [openDecline, setOpenDecline] = React.useState(false); //for modal to decline doc\n\n  const [id, setId] = React.useState('');\n  const [type, setType] = React.useState('');\n  const [ownerId, setOwnerId] = React.useState('');\n  const [officialName, setOfficialName] = React.useState('');\n\n  function handleClickOpenVerify(docId, docType, ownerId, officialName) {\n    setId(docId);\n    setType(docType);\n    setOwnerId(ownerId);\n    setOfficialName(officialName);\n    setOpenVerify(true);\n  }\n\n  const handleCloseVerify = () => {\n    setOpenVerify(false);\n  };\n\n  async function verify() {\n    await props.dispatch(verifyDocument(id, type, ownerId, officialName));\n    props.setLoading(true);\n    setOpenVerify(false);\n  }\n\n  async function decline() {\n    await props.dispatch(declineDocument(id, type, ownerId, officialName));\n    props.setLoading(true);\n    setOpenDecline(false);\n  }\n\n  function handleClickOpenDecline(docId, docType, ownerId, officialName) {\n    setId(docId);\n    setType(docType);\n    setOwnerId(ownerId);\n    setOfficialName(officialName);\n    setOpenDecline(true);\n  }\n\n  const handleCloseDecline = () => {\n    setOpenDecline(false);\n  };\n\n  useEffect(() => {\n    if (props.loading) {\n      //if reload is required and the tab is active, retrieve updated docs \n      if (props.active) {\n        props.dispatch(props.getDocuments());\n        props.setLoading(false);\n      }\n    } // load docs when the page is loaded or the docs were verified/declined.\n\n  }, [props]);\n  return !documents ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DocumentResultsList, {\n      documentsArray: documents.documents,\n      openModalVerify: handleClickOpenVerify,\n      openModalDecline: handleClickOpenDecline,\n      className: classes.modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openVerify,\n      onClose: handleCloseVerify,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description1\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title1\",\n        children: 'Verify document?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          className: classes.description,\n          children: \"Once the document is verified, this action cannot be reverted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseVerify,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: verify,\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDecline,\n      onClose: handleCloseDecline,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description2\",\n      className: classes.modal,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title2\",\n        children: 'Decline document?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          className: classes.description,\n          children: \"Once the document is declined, this action cannot be reverted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDecline,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: decline,\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Decline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DocumentsArray, \"dT9pvVMLrCKoZbHfVYsR3uGRW7Q=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = DocumentsArray;\nexport default connect()(withRouter(DocumentsArray));\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentsArray\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/DocumentsArray.js"],"names":["React","useEffect","connect","useSelector","withRouter","declineDocument","verifyDocument","Loading","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DocumentResultsList","makeStyles","useStyles","theme","description","typography","body1","modal","bordeRadius","DocumentsArray","props","classes","documents","state","openVerify","setOpenVerify","useState","openDecline","setOpenDecline","id","setId","type","setType","ownerId","setOwnerId","officialName","setOfficialName","handleClickOpenVerify","docId","docType","handleCloseVerify","verify","dispatch","setLoading","decline","handleClickOpenDecline","handleCloseDecline","loading","active","getDocuments"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { declineDocument, verifyDocument } from 'redux/actions/documentActions';\nimport Loading from './Loading';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DocumentResultsList from 'components/DocumentResultsList';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    description: theme.typography.body1,\n    modal: {\n        bordeRadius: \"10px\"\n    }\n}));\n\nconst DocumentsArray = (props) => {\n    const classes = useStyles();\n    const documents = useSelector((state) => state.documents);\n    const [openVerify, setOpenVerify] = React.useState(false); //for modal to verify doc\n    const [openDecline, setOpenDecline] = React.useState(false); //for modal to decline doc\n    const [id, setId] = React.useState('');\n    const [type, setType] = React.useState('');\n    const [ownerId, setOwnerId] = React.useState('');\n    const [officialName, setOfficialName] = React.useState('');\n\n    function handleClickOpenVerify(docId, docType, ownerId, officialName) {\n        setId(docId);\n        setType(docType);\n        setOwnerId(ownerId);\n        setOfficialName(officialName);\n\n        setOpenVerify(true);\n    }\n    const handleCloseVerify = () => {\n        setOpenVerify(false);\n    };\n\n    async function verify() {\n        await props.dispatch(verifyDocument(id, type, ownerId, officialName));\n        props.setLoading(true);\n        setOpenVerify(false);\n    }\n\n    async function decline() {\n       await props.dispatch(declineDocument(id, type,  ownerId, officialName));\n        props.setLoading(true);\n        setOpenDecline(false);\n    }\n\n    function handleClickOpenDecline(docId, docType, ownerId, officialName) { \n        setId(docId);\n        setType(docType);\n        setOwnerId(ownerId);\n        setOfficialName(officialName);\n        setOpenDecline(true);\n    }\n    const handleCloseDecline = () => {\n        setOpenDecline(false);\n    };\n\n    useEffect(() => { \n        if (props.loading) { //if reload is required and the tab is active, retrieve updated docs \n           if (props.active) {\n                props.dispatch(props.getDocuments());\n                props.setLoading(false)\n            }\n        }\n        // load docs when the page is loaded or the docs were verified/declined.\n    }, [props]);\n\n    return !documents ? (\n        <Loading />\n    ) : (\n        <div>\n            <DocumentResultsList documentsArray={documents.documents} openModalVerify={handleClickOpenVerify} openModalDecline={handleClickOpenDecline} className={classes.modal} />\n            <Dialog open={openVerify} onClose={handleCloseVerify} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description1\">\n                <DialogTitle id=\"alert-dialog-title1\">{'Verify document?'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.description}>Once the document is verified, this action cannot be reverted.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseVerify} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={verify} color=\"secondary\" autoFocus>\n                        Verify\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openDecline} onClose={handleCloseDecline} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" className={classes.modal}>\n                <DialogTitle id=\"alert-dialog-title2\">{'Decline document?'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.description}>Once the document is declined, this action cannot be reverted.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDecline} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={decline} color=\"secondary\" autoFocus>\n                        Decline\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default connect()(withRouter(DocumentsArray));\n"]},"metadata":{},"sourceType":"module"}