{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STATUS_TYPE = {\n  PENDING: 'pending',\n  SUCCESS: 'success',\n  FAIL: 'fail'\n};\n\nconst AdminStatusTag = props => {\n  _s();\n\n  const {\n    status,\n    confirm,\n    transaction\n  } = props;\n  const ref = useRef(null);\n  const [response, setResponse] = useState(status);\n  const [tagClicked, setTagClicked] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const color = () => {\n    switch (status) {\n      case STATUS_TYPE.PENDING:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: '#FDCD7F'\n        };\n\n      case STATUS_TYPE.SUCCESS:\n        return {\n          color: 'green',\n          background: 'white',\n          borderColor: '#A1CF6B'\n        };\n\n      case STATUS_TYPE.FAIL:\n        return {\n          color: 'red',\n          background: 'white',\n          borderColor: '#E87461'\n        };\n\n      default:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: 'orange'\n        };\n    }\n  };\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setTagClicked(false);\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n\n  const handleResponseChange = event => {\n    const response = event.target.value;\n\n    if (response !== STATUS_TYPE.PENDING) {\n      setOpen(true);\n    }\n\n    setResponse(response);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setResponse(STATUS_TYPE.PENDING);\n  };\n\n  const handleConfirm = () => {\n    let transactionCopy = transaction;\n    confirm(transactionCopy);\n    setOpen(false);\n  };\n\n  const closeTag = () => setTagClicked(false);\n\n  const openTag = () => setTagClicked(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!tagClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        ref: ref,\n        variant: \"outlined\",\n        label: status.toUpperCase(),\n        style: { ...color(),\n          borderWidth: 2,\n          fontWeight: 'lighter'\n        },\n        onClick: openTag\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      variant: \"outlined\",\n      size: \"small\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"response-label\",\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Response\",\n        id: \"response\",\n        value: response,\n        onChange: handleResponseChange,\n        onBlur: handleResponseChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.PENDING,\n          children: STATUS_TYPE.PENDING\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.SUCCESS,\n          children: STATUS_TYPE.SUCCESS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.FAIL,\n          children: STATUS_TYPE.FAIL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      onBlur: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: 'Confirm Action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Please confirm you want to officially change the status.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminStatusTag, \"Xk3iojiOQsxtdhQgEmlow6ie6t4=\");\n\n_c = AdminStatusTag;\nconst useStyles = makeStyles(theme => ({}));\nexport default AdminStatusTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminStatusTag\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js"],"names":["React","useEffect","useRef","useState","Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","makeStyles","MenuItem","Select","STATUS_TYPE","PENDING","SUCCESS","FAIL","AdminStatusTag","props","status","confirm","transaction","ref","response","setResponse","tagClicked","setTagClicked","open","setOpen","color","background","borderColor","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleResponseChange","value","handleClose","handleConfirm","transactionCopy","closeTag","openTag","toUpperCase","borderWidth","fontWeight","useStyles","theme"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\n\nconst STATUS_TYPE = {\n    PENDING: 'pending',\n    SUCCESS: 'success',\n    FAIL: 'fail',\n};\n\nconst AdminStatusTag = (props) => {\n    const { status, confirm, transaction } = props;\n    const ref = useRef(null);\n\n    const [response, setResponse] = useState(status);\n    const [tagClicked, setTagClicked] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const color = () => {\n        switch (status) {\n            case STATUS_TYPE.PENDING:\n                return { color: 'orange', background: 'white', borderColor: '#FDCD7F' };\n            case STATUS_TYPE.SUCCESS:\n                return { color: 'green', background: 'white', borderColor: '#A1CF6B' };\n            case STATUS_TYPE.FAIL:\n                return { color: 'red', background: 'white', borderColor: '#E87461' };\n            default:\n                return { color: 'orange', background: 'white', borderColor: 'orange' };\n        }\n    };\n\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setTagClicked(false);\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [ref]);\n\n    const handleResponseChange = (event) => {\n        const response = event.target.value;\n        if (response !== STATUS_TYPE.PENDING) {\n            setOpen(true);\n        }\n        setResponse(response);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setResponse(STATUS_TYPE.PENDING);\n    };\n\n    const handleConfirm = () => {\n        let transactionCopy = transaction;\n        confirm(transactionCopy);\n        setOpen(false);\n    };\n\n    const closeTag = () => setTagClicked(false);\n    const openTag = () => setTagClicked(true);\n\n    return (\n        <>\n            {!tagClicked ? (\n                <div>\n                    <Chip ref={ref} variant=\"outlined\" key={status} label={status.toUpperCase()} style={{ ...color(), borderWidth: 2, fontWeight: 'lighter' }} onClick={openTag} />\n                </div>\n            ) : (\n                <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                    <InputLabel id=\"response-label\">Response</InputLabel>\n                    <Select label=\"Response\" id=\"response\" value={response} onChange={handleResponseChange} onBlur={handleResponseChange}>\n                        <MenuItem value={STATUS_TYPE.PENDING}>{STATUS_TYPE.PENDING}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.SUCCESS}>{STATUS_TYPE.SUCCESS}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.FAIL}>{STATUS_TYPE.FAIL}</MenuItem>\n                    </Select>\n                </FormControl>\n            )}\n            <Dialog open={open} onClose={handleClose} onBlur={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{'Confirm Action'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">Please confirm you want to officially change the status.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default AdminStatusTag;\n"]},"metadata":{},"sourceType":"module"}