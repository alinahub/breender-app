{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/Button.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SendIcon from '@material-ui/icons/Send';\nimport PaymentStepper from './transactions/PaymentStepper';\nimport { Modal } from 'antd';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6)\n  },\n  modal: {\n    minWidth: '60vw',\n    maxWidth: '80vw',\n    width: 'auto'\n  }\n}));\n\nfunction PaymentButton({\n  pet\n}) {\n  _s();\n\n  const classes = useStyles();\n  const price = pet.price;\n  const loggedInUser = useLoggedInUser();\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [isMyPet, setIsMyPet] = useState(false);\n  const [wasPurchased, setWasPurchased] = useState(false);\n  useEffect(() => {\n    if (loggedInUser) {\n      setIsMyPet(loggedInUser._id === pet.ownerId);\n      setWasPurchased(pet.purchased);\n    }\n  }, [loggedInUser, pet.ownerId, pet.purchased]);\n\n  const openStepper = () => setIsModalOpened(true);\n\n  const closeModal = () => setIsModalOpened(false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: isMyPet || wasPurchased,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      endIcon: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 128\n      }, this),\n      onClick: openStepper,\n      children: wasPurchased ? 'Was Purchased' : price === 0 || price === null ? 'Free' : `${price} €`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Payment Confirmation\",\n      visible: isModalOpened,\n      onCancel: closeModal,\n      className: classes.modal,\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(PaymentStepper, {\n        pet: pet,\n        close: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentButton, \"qV1dVEt0G1LT5M+uVi6XUNVXDIw=\", false, function () {\n  return [useStyles, useLoggedInUser];\n});\n\n_c = PaymentButton;\nexport default PaymentButton;\n\nfunction ContactButton(contactProps) {\n  _s2();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n\n  const handleContact = id => {\n    history.push('/messenger/' + contactProps.breederId + '/' + contactProps.petId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 89\n    }, this),\n    onClick: () => handleContact(),\n    disabled: user.user.subscriptionPlan === 'free',\n    children: \"Contact Breeder\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ContactButton, \"qI274+UB6lOomg94VUPu9W8UyxI=\", false, function () {\n  return [useStyles, useHistory, useSelector];\n});\n\n_c2 = ContactButton;\nexport { PaymentButton, ContactButton };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaymentButton\");\n$RefreshReg$(_c2, \"ContactButton\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/Button.js"],"names":["React","useEffect","useState","Button","useSelector","makeStyles","useHistory","ShoppingCartIcon","SendIcon","PaymentStepper","Modal","useLoggedInUser","useStyles","theme","button","margin","spacing","padding","paddingLeft","paddingRight","modal","minWidth","maxWidth","width","PaymentButton","pet","classes","price","loggedInUser","isModalOpened","setIsModalOpened","isMyPet","setIsMyPet","wasPurchased","setWasPurchased","_id","ownerId","purchased","openStepper","closeModal","ContactButton","contactProps","history","user","state","handleContact","id","push","breederId","petId","subscriptionPlan"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PaymentStepper from './transactions/PaymentStepper';\r\nimport { Modal } from 'antd';\r\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(1),\r\n        paddingLeft: theme.spacing(6),\r\n        paddingRight: theme.spacing(6),\r\n    },\r\n    modal: {\r\n        minWidth: '60vw',\r\n        maxWidth: '80vw',\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nfunction PaymentButton({ pet }) {\r\n    const classes = useStyles();\r\n    const price = pet.price;\r\n    const loggedInUser = useLoggedInUser();\r\n\r\n    const [isModalOpened, setIsModalOpened] = useState(false);\r\n    const [isMyPet, setIsMyPet] = useState(false);\r\n    const [wasPurchased, setWasPurchased] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(loggedInUser) {\r\n            setIsMyPet(loggedInUser._id === pet.ownerId)\r\n            setWasPurchased(pet.purchased)\r\n        }\r\n    }, [loggedInUser, pet.ownerId, pet.purchased]);\r\n\r\n    const openStepper = () => setIsModalOpened(true);\r\n    const closeModal = () => setIsModalOpened(false);\r\n\r\n    return (\r\n        <>\r\n            <Button disabled={isMyPet || wasPurchased} variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<ShoppingCartIcon />} onClick={openStepper}>\r\n                {wasPurchased ? 'Was Purchased' : price === 0 || price === null ? 'Free' : `${price} €` }\r\n            </Button>\r\n            <Modal title=\"Payment Confirmation\" visible={isModalOpened} onCancel={closeModal} className={classes.modal} footer={null}>\r\n                <PaymentStepper pet={pet} close={closeModal} />\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentButton;\r\n\r\nfunction ContactButton(contactProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const handleContact = (id) => {\r\n        history.push('/messenger/' + contactProps.breederId + '/' + contactProps.petId);\r\n    };\r\n\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<SendIcon />} onClick={() => handleContact()} disabled={user.user.subscriptionPlan === 'free'}>\r\n            Contact Breeder\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport { PaymentButton, ContactButton };\r\n"]},"metadata":{},"sourceType":"module"}