{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/TransactionsOverviewTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // antd imports\n\nimport { Table, Tooltip } from 'antd';\nimport '../../theming/antd.css'; // material-ui imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport PetPreviewProfileComponent from 'components/pet-profile/PetPreviewProfileComponent';\nimport StatusTag from 'components/tags/StatusTag';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport PriceTag from 'components/PriceTag';\nimport { getTransactions, updateTransaction } from 'redux/actions';\nimport moment from 'moment';\nimport { Chip } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionsOverviewTable = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    transactions\n  } = props; // states\n\n  const user = useUser();\n\n  const checkRequiresInvestigation = t => t.senderResponse === 'fail' && t.receiverResponse === 'success' || t.senderResponse === 'success' && t.receiverResponse === 'fail'; // check if user is the sender or the receiver\n\n\n  const checkUserIsSender = transaction => {\n    if (transaction.receiverId._id === user.id) {\n      return false;\n    } else if (transaction.senderId._id === user.id) {\n      return true;\n    }\n  }; // update transaction on confirming to change the transaction status\n\n\n  const confirm = async transaction => {\n    await dispatch(updateTransaction(transaction));\n    await dispatch(getTransactions(user.id));\n  };\n\n  const checkUserStatusWasSet = transaction => {\n    const isSender = checkUserIsSender(transaction);\n    const {\n      senderResponse,\n      receiverResponse,\n      status\n    } = transaction;\n    const statusWasSet = status === 'fail' || status === 'success';\n    if (isSender) return senderResponse === 'success' || senderResponse === 'fail' || statusWasSet;else return receiverResponse === 'success' || receiverResponse === 'fail' || statusWasSet;\n  }; // get the owner of the pet\n\n\n  const getPetOwner = transaction => {\n    var _transaction$pet;\n\n    if (((_transaction$pet = transaction.pet) === null || _transaction$pet === void 0 ? void 0 : _transaction$pet.ownerId) === transaction.senderId._id) {\n      return transaction.senderId;\n    } else {\n      return transaction.receiverId;\n    }\n  }; // show tooltip on hovering over pending status row\n\n\n  const getToolTipTitle = (transaction, type) => {\n    const {\n      status,\n      senderResponse,\n      receiverResponse,\n      fee\n    } = transaction;\n\n    if (type === 'amount') {\n      if (fee > 0 && !checkUserIsSender(transaction)) {\n        return 'Because of your free plan, we charge 5% (min 1€ and max 20€) from the transaction price.';\n      }\n    }\n\n    if (status === 'pending') {\n      if (senderResponse === 'pending' && receiverResponse === 'pending') {\n        return 'Both receiver and sender have not responded yet.';\n      } else if (senderResponse === 'pending') {\n        return 'Sender have not responded yet.';\n      } else if (receiverResponse === 'pending') {\n        return 'Receiver have not responded yet.';\n      }\n    } else if (status === 'fail' && (senderResponse === 'fail' && receiverResponse === 'success' || senderResponse === 'success' && receiverResponse === 'fail')) {\n      return 'Transaction requires further investigation. Our employee will contact you soon.';\n    } else return null;\n  };\n\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'orderNr',\n    key: 'orderNr',\n    render: id => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: String(id).toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }, this)\n  }, {\n    title: 'MATE',\n    dataIndex: 'pet',\n    key: 'pet',\n    align: 'center',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(PetPreviewProfileComponent, {\n      username: getPetOwner(record).username,\n      pet: record.pet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 36\n    }, this)\n  }, {\n    title: 'AMOUNT',\n    dataIndex: 'amount',\n    key: 'amount',\n    align: 'right',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Tooltip, {\n      trigger: \"hover\",\n      placement: \"top\",\n      title: getToolTipTitle(record, 'amount'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PriceTag, {\n          isSender: checkUserIsSender(record),\n          price: record.amount,\n          fee: record.fee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'DEADLINE',\n    dataIndex: 'deadline',\n    key: 'deadline',\n    align: 'center',\n    render: deadline => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: String(moment(deadline).format('LLL'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 35\n    }, this)\n  }, {\n    title: 'YOUR RESPONSE',\n    key: 'response',\n    dataIndex: 'response',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(StatusTag, {\n      status: checkUserIsSender(record) ? record.senderResponse : record.receiverResponse,\n      isSelected: checkUserStatusWasSet(record),\n      confirm: confirm,\n      transaction: record,\n      isSender: checkUserIsSender(record)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'STATUS',\n    key: 'status',\n    dataIndex: 'status',\n    align: 'center',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Tooltip, {\n      trigger: \"hover\",\n      placement: \"top\",\n      title: getToolTipTitle(record),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StatusTag, {\n          status: record.status,\n          isSelected: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), checkRequiresInvestigation(record) ? /*#__PURE__*/_jsxDEV(Chip, {\n        className: classes.tags,\n        variant: \"outlined\",\n        label: \"Requires Investigation\",\n        style: {\n          color: 'black',\n          background: '#FCCA46',\n          borderColor: '#FDCD7F',\n          borderWidth: 2,\n          fontWeight: 'lighter'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionsOverviewTable, \"A8nhtM/3LSx4Q6WR9WL6L6R4neA=\", false, function () {\n  return [useStyles, useDispatch, useUser];\n});\n\n_c = TransactionsOverviewTable;\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 500\n  },\n  grid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignSelf: 'flex-end'\n  },\n  tags: {\n    marginTop: 10\n  }\n}));\nexport default TransactionsOverviewTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsOverviewTable\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/TransactionsOverviewTable.js"],"names":["React","Table","Tooltip","makeStyles","useDispatch","PetPreviewProfileComponent","StatusTag","useUser","PriceTag","getTransactions","updateTransaction","moment","Chip","TransactionsOverviewTable","props","classes","useStyles","dispatch","transactions","user","checkRequiresInvestigation","t","senderResponse","receiverResponse","checkUserIsSender","transaction","receiverId","_id","id","senderId","confirm","checkUserStatusWasSet","isSender","status","statusWasSet","getPetOwner","pet","ownerId","getToolTipTitle","type","fee","columns","title","dataIndex","key","render","String","toUpperCase","align","_","record","username","amount","deadline","format","tags","color","background","borderColor","borderWidth","fontWeight","theme","layout","display","flexDirection","justifyContent","alignItems","label","fontSize","grid","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\n// antd imports\nimport { Table, Tooltip } from 'antd';\nimport '../../theming/antd.css';\n// material-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport PetPreviewProfileComponent from 'components/pet-profile/PetPreviewProfileComponent';\nimport StatusTag from 'components/tags/StatusTag';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport PriceTag from 'components/PriceTag';\nimport { getTransactions, updateTransaction } from 'redux/actions';\nimport moment from 'moment';\nimport { Chip } from '@material-ui/core';\n\nconst TransactionsOverviewTable = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { transactions } = props;\n\n    // states\n    const user = useUser();\n    const checkRequiresInvestigation = (t) => (t.senderResponse === 'fail' && t.receiverResponse === 'success') || (t.senderResponse === 'success' && t.receiverResponse === 'fail');\n\n    // check if user is the sender or the receiver\n    const checkUserIsSender = (transaction) => {\n        if (transaction.receiverId._id === user.id) {\n            return false;\n        } else if (transaction.senderId._id === user.id) {\n            return true;\n        }\n    };\n\n    // update transaction on confirming to change the transaction status\n    const confirm = async (transaction) => {\n        await dispatch(updateTransaction(transaction));\n        await dispatch(getTransactions(user.id));\n    };\n\n    const checkUserStatusWasSet = (transaction) => {\n        const isSender = checkUserIsSender(transaction);\n        const { senderResponse, receiverResponse, status } = transaction;\n        const statusWasSet = status === 'fail' || status === 'success';\n        if (isSender) return senderResponse === 'success' || senderResponse === 'fail' || statusWasSet;\n        else return receiverResponse === 'success' || receiverResponse === 'fail' || statusWasSet;\n    };\n\n    // get the owner of the pet\n    const getPetOwner = (transaction) => {\n        if (transaction.pet?.ownerId === transaction.senderId._id) {\n            return transaction.senderId;\n        } else {\n            return transaction.receiverId;\n        }\n    };\n\n    // show tooltip on hovering over pending status row\n    const getToolTipTitle = (transaction, type) => {\n        const { status, senderResponse, receiverResponse, fee } = transaction;\n\n        if (type === 'amount') {\n            if (fee > 0 && !checkUserIsSender(transaction)) {\n                return 'Because of your free plan, we charge 5% (min 1€ and max 20€) from the transaction price.';\n            }\n        }\n\n        if (status === 'pending') {\n            if (senderResponse === 'pending' && receiverResponse === 'pending') {\n                return 'Both receiver and sender have not responded yet.';\n            } else if (senderResponse === 'pending') {\n                return 'Sender have not responded yet.';\n            } else if (receiverResponse === 'pending') {\n                return 'Receiver have not responded yet.';\n            }\n        } else if (status === 'fail' && ((senderResponse === 'fail' && receiverResponse === 'success') || (senderResponse === 'success' && receiverResponse === 'fail'))) {\n            return 'Transaction requires further investigation. Our employee will contact you soon.';\n        } else return null;\n    };\n\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'orderNr',\n            key: 'orderNr',\n            render: (id) => <p>{String(id).toUpperCase()}</p>,\n        },\n        {\n            title: 'MATE',\n            dataIndex: 'pet',\n            key: 'pet',\n            align: 'center',\n            render: (_, record) => <PetPreviewProfileComponent username={getPetOwner(record).username} pet={record.pet} />,\n        },\n        {\n            title: 'AMOUNT',\n            dataIndex: 'amount',\n            key: 'amount',\n            align: 'right',\n            render: (_, record) => (\n                <Tooltip trigger=\"hover\" placement=\"top\" title={getToolTipTitle(record, 'amount')}>\n                    <div>\n                        <PriceTag isSender={checkUserIsSender(record)} price={record.amount} fee={record.fee} />\n                    </div>\n                </Tooltip>\n            ),\n        },\n        {\n            title: 'DEADLINE',\n            dataIndex: 'deadline',\n            key: 'deadline',\n            align: 'center',\n            render: (deadline) => <div>{String(moment(deadline).format('LLL'))}</div>,\n        },\n        {\n            title: 'YOUR RESPONSE',\n            key: 'response',\n            dataIndex: 'response',\n            render: (_, record) => (\n                <StatusTag\n                    status={checkUserIsSender(record) ? record.senderResponse : record.receiverResponse}\n                    isSelected={checkUserStatusWasSet(record)}\n                    confirm={confirm}\n                    transaction={record}\n                    isSender={checkUserIsSender(record)}\n                />\n            ),\n        },\n        {\n            title: 'STATUS',\n            key: 'status',\n            dataIndex: 'status',\n            align: 'center',\n            render: (_, record) => (\n                <Tooltip trigger=\"hover\" placement=\"top\" title={getToolTipTitle(record)}>\n                    <div>\n                        <StatusTag status={record.status} isSelected={true} />\n                    </div>\n                    {checkRequiresInvestigation(record) ? (\n                        <Chip\n                            className={classes.tags}\n                            variant=\"outlined\"\n                            label=\"Requires Investigation\"\n                            style={{ color: 'black', background: '#FCCA46', borderColor: '#FDCD7F', borderWidth: 2, fontWeight: 'lighter' }}\n                        />\n                    ) : null}\n                </Tooltip>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={transactions} />\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    label: {\n        fontSize: 16,\n        fontWeight: 500,\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignSelf: 'flex-end',\n    },\n    tags: {\n        marginTop: 10,\n    },\n}));\n\nexport default TransactionsOverviewTable;\n"]},"metadata":{},"sourceType":"module"}