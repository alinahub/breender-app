{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getPet } from '../redux/actions/petActions'; // components import\n\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\nimport Loading from '../components/Loading'; // helper imports\n\nimport { isObjEmpty } from 'helper/helpers';\nimport { usePet } from 'helper/hooks';\nimport PremiumBanner from 'components/PremiumBanner';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\nimport { showPremiumBanner } from 'helper/helpers';\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PetProfileView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const loggedInUser = useLoggedInUser();\n  const petId = location.pathname.split('/pet/')[1];\n  const selectedPet = usePet();\n  useEffect(() => {\n    let loading = true; // get id of pet from URL\n\n    const loadPet = async id => {\n      if (!loading) return;\n      await dispatch(getPet(id));\n    };\n\n    loadPet(petId);\n    return () => {\n      loading = false;\n    };\n  }, [dispatch, petId]);\n  return isObjEmpty(selectedPet) ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this) : selectedPet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showPremiumBanner(loggedInUser) ? /*#__PURE__*/_jsxDEV(PremiumBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this) : null, /*#__PURE__*/_jsxDEV(PetProfileComponent, {\n      id: petId,\n      officialName: selectedPet.officialName,\n      nickname: selectedPet.nickname,\n      age: selectedPet.age,\n      sex: selectedPet.sex,\n      price: selectedPet.price,\n      profilePicture: selectedPet.profilePicture,\n      pictures: getAlbumWithProfilePicture(selectedPet),\n      breed: selectedPet.breed,\n      species: selectedPet.species,\n      documents: selectedPet.documents,\n      competitions: selectedPet.competitions,\n      ownerId: selectedPet.ownerId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : null;\n}\n\n_s(PetProfileView, \"4IoXz9Kc7LzxDc/0BKDgeTFXwQs=\", false, function () {\n  return [useDispatch, useLocation, useLoggedInUser, usePet];\n});\n\n_c = PetProfileView;\n\nfunction getAlbumWithProfilePicture(selectedPet) {\n  let pictures = [...selectedPet.pictures];\n  pictures.push(selectedPet.profilePicture);\n  return pictures;\n} // connect() establishes allows the usage of redux functionality\n\n\nexport default connect()(PetProfileView);\n\nvar _c;\n\n$RefreshReg$(_c, \"PetProfileView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js"],"names":["React","useEffect","connect","useDispatch","useLocation","getPet","PetProfileComponent","Loading","isObjEmpty","usePet","PremiumBanner","useLoggedInUser","showPremiumBanner","PetProfileView","props","dispatch","location","loggedInUser","petId","pathname","split","selectedPet","loading","loadPet","id","officialName","nickname","age","sex","price","profilePicture","getAlbumWithProfilePicture","breed","species","documents","competitions","ownerId","pictures","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,6BAAvB,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA;AACA;AACA;AACA;;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,YAAY,GAAGN,eAAe,EAApC;AAEA,QAAMO,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,OAAxB,EAAiC,CAAjC,CAAd;AACA,QAAMC,WAAW,GAAGZ,MAAM,EAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,OAAO,GAAG,IAAd,CADY,CAGZ;;AACA,UAAMC,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1B,UAAI,CAACF,OAAL,EAAc;AACd,YAAMP,QAAQ,CAACV,MAAM,CAACmB,EAAD,CAAP,CAAd;AACH,KAHD;;AAKAD,IAAAA,OAAO,CAACL,KAAD,CAAP;AAEA,WAAO,MAAM;AACTI,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAIH,GAfQ,EAeN,CAACP,QAAD,EAAWG,KAAX,CAfM,CAAT;AAiBA,SAAOV,UAAU,CAACa,WAAD,CAAV,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,GAEHA,WAAW,gBACX;AAAA,eACCT,iBAAiB,CAACK,YAAD,CAAjB,gBAAkC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAlC,GAAsD,IADvD,eAEA,QAAC,mBAAD;AACI,MAAA,EAAE,EAAEC,KADR;AAEI,MAAA,YAAY,EAAEG,WAAW,CAACI,YAF9B;AAGI,MAAA,QAAQ,EAAEJ,WAAW,CAACK,QAH1B;AAII,MAAA,GAAG,EAAEL,WAAW,CAACM,GAJrB;AAKI,MAAA,GAAG,EAAEN,WAAW,CAACO,GALrB;AAMI,MAAA,KAAK,EAAEP,WAAW,CAACQ,KANvB;AAOI,MAAA,cAAc,EAAER,WAAW,CAACS,cAPhC;AAQI,MAAA,QAAQ,EAAEC,0BAA0B,CAACV,WAAD,CARxC;AASI,MAAA,KAAK,EAAEA,WAAW,CAACW,KATvB;AAUI,MAAA,OAAO,EAAEX,WAAW,CAACY,OAVzB;AAWI,MAAA,SAAS,EAAEZ,WAAW,CAACa,SAX3B;AAYI,MAAA,YAAY,EAAEb,WAAW,CAACc,YAZ9B;AAaI,MAAA,OAAO,EAAEd,WAAW,CAACe;AAbzB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADW,GAmBX,IArBJ;AAsBH;;GA/CQvB,c;UACYV,W,EACAC,W,EACIO,e,EAGDF,M;;;KANfI,c;;AAiDT,SAASkB,0BAAT,CAAoCV,WAApC,EAAiD;AAC7C,MAAIgB,QAAQ,GAAG,CAAC,GAAGhB,WAAW,CAACgB,QAAhB,CAAf;AACAA,EAAAA,QAAQ,CAACC,IAAT,CAAcjB,WAAW,CAACS,cAA1B;AACA,SAAOO,QAAP;AACH,C,CAED;;;AACA,eAAenC,OAAO,GAAGW,cAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getPet } from '../redux/actions/petActions';\r\n// components import\r\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\r\nimport Loading from '../components/Loading';\r\n// helper imports\r\nimport { isObjEmpty } from 'helper/helpers';\r\nimport { usePet } from 'helper/hooks';\r\nimport PremiumBanner from 'components/PremiumBanner';\r\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\r\nimport { showPremiumBanner } from 'helper/helpers';\r\n\r\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\r\n\r\nfunction PetProfileView(props) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const loggedInUser = useLoggedInUser();\r\n\r\n    const petId = location.pathname.split('/pet/')[1];\r\n    const selectedPet = usePet();\r\n\r\n    useEffect(() => {\r\n        let loading = true;\r\n\r\n        // get id of pet from URL\r\n        const loadPet = async (id) => {\r\n            if (!loading) return;\r\n            await dispatch(getPet(id));\r\n        }\r\n\r\n        loadPet(petId);\r\n\r\n        return () => {\r\n            loading = false;\r\n        };\r\n\r\n    }, [dispatch, petId]);\r\n\r\n    return isObjEmpty(selectedPet) ? (\r\n        <Loading />\r\n    ) : selectedPet ? (\r\n        <>\r\n        {showPremiumBanner(loggedInUser) ? <PremiumBanner /> : null}\r\n        <PetProfileComponent\r\n            id={petId}\r\n            officialName={selectedPet.officialName}\r\n            nickname={selectedPet.nickname}\r\n            age={selectedPet.age}\r\n            sex={selectedPet.sex}\r\n            price={selectedPet.price}\r\n            profilePicture={selectedPet.profilePicture}\r\n            pictures={getAlbumWithProfilePicture(selectedPet)}\r\n            breed={selectedPet.breed}\r\n            species={selectedPet.species}\r\n            documents={selectedPet.documents}\r\n            competitions={selectedPet.competitions}\r\n            ownerId={selectedPet.ownerId}\r\n        />\r\n        </>\r\n    ) : null;\r\n}\r\n\r\nfunction getAlbumWithProfilePicture(selectedPet) {\r\n    let pictures = [...selectedPet.pictures];\r\n    pictures.push(selectedPet.profilePicture);\r\n    return pictures;\r\n}\r\n\r\n// connect() establishes allows the usage of redux functionality\r\nexport default connect()(PetProfileView);\r\n"]},"metadata":{},"sourceType":"module"}