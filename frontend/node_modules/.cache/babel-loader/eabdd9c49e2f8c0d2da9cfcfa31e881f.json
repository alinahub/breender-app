{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{loginReset,logout}from'redux/actions';import{NotificationService}from'services';import{jsx as _jsx}from\"react/jsx-runtime\";var DataFetcher=/*#__PURE__*/React.memo(function(){var dispatch=useDispatch();var isAuthenticated=useSelector(function(state){return state.user.isAuthenticated;});var isLoading=useSelector(function(state){return state.fetcher.isLoading;});useEffect(function(){var fetch=true;var logoutRedirect=function logoutRedirect(){if(fetch&&isAuthenticated===false){dispatch(logout());NotificationService.notify('warning','Warning','You were logged out.');}else if(fetch&&!isLoading){dispatch(loginReset());}};logoutRedirect();return function(){fetch=false;};},[isAuthenticated,dispatch,isLoading]);return/*#__PURE__*/_jsx(React.Fragment,{});});export default DataFetcher;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/datafetcher.js"],"names":["React","useEffect","useDispatch","useSelector","loginReset","logout","NotificationService","DataFetcher","memo","dispatch","isAuthenticated","state","user","isLoading","fetcher","fetch","logoutRedirect","notify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,CAAqBC,MAArB,KAAmC,eAAnC,CACA,OAASC,mBAAT,KAAoC,UAApC,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGP,KAAK,CAACQ,IAAN,CAAW,UAAM,CACjC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,eAAe,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWF,eAAtB,EAAD,CAAnC,CACA,GAAMG,CAAAA,SAAS,CAAGV,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACG,OAAN,CAAcD,SAAzB,EAAD,CAA7B,CAGAZ,SAAS,CAAC,UAAM,CACZ,GAAIc,CAAAA,KAAK,CAAG,IAAZ,CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAID,KAAK,EAAIL,eAAe,GAAK,KAAjC,CAAwC,CACpCD,QAAQ,CAACJ,MAAM,EAAP,CAAR,CACAC,mBAAmB,CAACW,MAApB,CAA2B,SAA3B,CAAsC,SAAtC,CAAiD,sBAAjD,EACH,CAHD,IAGO,IAAIF,KAAK,EAAI,CAACF,SAAd,CAAyB,CAC5BJ,QAAQ,CAACL,UAAU,EAAX,CAAR,CACH,CACJ,CAPD,CASAY,cAAc,GAEd,MAAO,WAAM,CACTD,KAAK,CAAG,KAAR,CACH,CAFD,CAGH,CAlBQ,CAkBN,CAACL,eAAD,CAAkBD,QAAlB,CAA4BI,SAA5B,CAlBM,CAAT,CAoBA,mBAAO,KAAC,KAAD,CAAO,QAAP,IAAP,CACH,CA5BmB,CAApB,CA8BA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginReset, logout } from 'redux/actions';\nimport { NotificationService } from 'services';\n\nconst DataFetcher = React.memo(() => {\n    const dispatch = useDispatch();\n\n    const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\n    const isLoading = useSelector((state) => state.fetcher.isLoading);\n\n\n    useEffect(() => {\n        let fetch = true;\n    \n\n        const logoutRedirect = () => {\n            if (fetch && isAuthenticated === false) {\n                dispatch(logout());\n                NotificationService.notify('warning', 'Warning', 'You were logged out.')\n            } else if (fetch && !isLoading) {\n                dispatch(loginReset())\n            }\n        };\n\n        logoutRedirect();\n\n        return () => {\n            fetch = false;\n        };\n    }, [isAuthenticated, dispatch, isLoading]);\n\n    return <React.Fragment />;\n});\n\nexport default DataFetcher;"]},"metadata":{},"sourceType":"module"}