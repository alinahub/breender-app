{"ast":null,"code":"import React from'react';import{useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import{Grid,Paper,Badge,Divider,Typography,ListItem,ListItemAvatar,ListItemText,ListItemSecondaryAction,Avatar}from'@material-ui/core';import{useSelector}from'react-redux';import{useDispatch}from'react-redux';import{ImportContacts}from'@material-ui/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ConversationComponent(props){var _unseenMessages$filte;var classes=useStyles();var unseenMessages=useSelector(function(state){return state.messages.unseenMessages;});var friend=props.conversation.members.find(function(m){return m._id!==props.currentUser.id;});// TODO: set friend avatar\nreturn!friend?null:/*#__PURE__*/_jsxs(ListItem,{button:true,selected:props.isCurrentChat,className:classes.conversationItem,children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{className:classes.icon})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:classes.username,children:friend?friend.username:'Unknown'})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{className:classes.badge,children:unseenMessages?/*#__PURE__*/_jsx(Badge,{badgeContent:(_unseenMessages$filte=unseenMessages.filter(function(m){return m._id==props.conversation._id;})[0])===null||_unseenMessages$filte===void 0?void 0:_unseenMessages$filte.count,color:\"secondary\"}):null})]},friend.username);}var useStyles=makeStyles(function(theme){return{icon:{background:theme.palette.secondary.main,color:theme.palette.secondary.light},username:{color:theme.palette.text.secondary},badge:{paddingRight:theme.spacing(1)}};});export default ConversationComponent;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/messenger/ConversationComponent.js"],"names":["React","useEffect","makeStyles","Grid","Paper","Badge","Divider","Typography","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Avatar","useSelector","useDispatch","ImportContacts","ConversationComponent","props","classes","useStyles","unseenMessages","state","messages","friend","conversation","members","find","m","_id","currentUser","id","isCurrentChat","conversationItem","icon","username","badge","filter","count","theme","background","palette","secondary","main","color","light","text","paddingRight","spacing"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6BC,OAA7B,CAAsCC,UAAtC,CAAkDC,QAAlD,CAA4DC,cAA5D,CAA4EC,YAA5E,CAA0FC,uBAA1F,CAAmHC,MAAnH,KAAiI,mBAAjI,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,oBAA/B,C,wFAEA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,2BAClC,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CACA,GAAMC,CAAAA,cAAc,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeF,cAA1B,EAAD,CAAlC,CAEA,GAAIG,CAAAA,MAAM,CAAGN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,IAA3B,CAAgC,SAACC,CAAD,CAAO,CAChD,MAAOA,CAAAA,CAAC,CAACC,GAAF,GAAUX,KAAK,CAACY,WAAN,CAAkBC,EAAnC,CACH,CAFY,CAAb,CAIA;AACA,MAAO,CAACP,MAAD,CAAU,IAAV,cACH,MAAC,QAAD,EAAU,MAAM,KAAhB,CAAuC,QAAQ,CAAEN,KAAK,CAACc,aAAvD,CAAsE,SAAS,CAAEb,OAAO,CAACc,gBAAzF,wBACI,KAAC,cAAD,wBACI,KAAC,MAAD,EAAQ,SAAS,CAAEd,OAAO,CAACe,IAA3B,EADJ,EADJ,cAII,KAAC,YAAD,EACI,OAAO,cACH,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAEf,OAAO,CAACgB,QAA5C,UACKX,MAAM,CAAGA,MAAM,CAACW,QAAV,CAAqB,SADhC,EAFR,EAJJ,cAWI,KAAC,uBAAD,EAAyB,SAAS,CAAEhB,OAAO,CAACiB,KAA5C,UACKf,cAAc,cAAG,KAAC,KAAD,EAAO,YAAY,wBAAEA,cAAc,CAACgB,MAAf,CAAsB,SAACT,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,EAASX,KAAK,CAACO,YAAN,CAAmBI,GAAnC,EAAtB,EAA8D,CAA9D,CAAF,gDAAE,sBAAkES,KAAvF,CAA8F,KAAK,CAAC,WAApG,EAAH,CAA8H,IADjJ,EAXJ,GAAsBd,MAAM,CAACW,QAA7B,CADJ,CAiBH,CAED,GAAMf,CAAAA,SAAS,CAAGjB,UAAU,CAAC,SAACoC,KAAD,QAAY,CACrCL,IAAI,CAAE,CACFM,UAAU,CAAED,KAAK,CAACE,OAAN,CAAcC,SAAd,CAAwBC,IADlC,CAEFC,KAAK,CAAEL,KAAK,CAACE,OAAN,CAAcC,SAAd,CAAwBG,KAF7B,CAD+B,CAKrCV,QAAQ,CAAE,CACNS,KAAK,CAAEL,KAAK,CAACE,OAAN,CAAcK,IAAd,CAAmBJ,SADpB,CAL2B,CAQrCN,KAAK,CAAE,CACHW,YAAY,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADX,CAR8B,CAAZ,EAAD,CAA5B,CAaA,cAAe/B,CAAAA,qBAAf","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Badge, Divider, Typography, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { ImportContacts } from '@material-ui/icons';\n\nfunction ConversationComponent(props) {\n    const classes = useStyles();\n    const unseenMessages = useSelector((state) => state.messages.unseenMessages);\n\n    let friend = props.conversation.members.find((m) => {\n        return m._id !== props.currentUser.id;\n    });\n\n    // TODO: set friend avatar\n    return !friend ? null : (\n        <ListItem button key={friend.username} selected={props.isCurrentChat} className={classes.conversationItem}>\n            <ListItemAvatar>\n                <Avatar className={classes.icon} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography variant=\"h6\" className={classes.username}>\n                        {friend ? friend.username : 'Unknown'}\n                    </Typography>\n                }\n            />\n            <ListItemSecondaryAction className={classes.badge}>\n                {unseenMessages ? <Badge badgeContent={unseenMessages.filter((m) => m._id == props.conversation._id)[0]?.count} color=\"secondary\"></Badge> : null}\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.light,\n    },\n    username: {\n        color: theme.palette.text.secondary,\n    },\n    badge: {\n        paddingRight: theme.spacing(1),\n    },\n}));\n\nexport default ConversationComponent;\n"]},"metadata":{},"sourceType":"module"}