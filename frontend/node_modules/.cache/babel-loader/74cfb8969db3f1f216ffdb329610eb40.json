{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PayPalPayment.js\";\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  'client-id': 'AU51gVXV29PQQgKgUCipVcv_d6ZEVCHUJH0AwBCBb3ey5faoUa-NdJ8eqWdl-aZysrDrCmf3Dy3EPsdX',\n  currency: 'EUR'\n};\n\nconst PayPalPayment = ({\n  amount\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: {\n          layout: 'horizontal'\n        },\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              description: 'Breender Payment',\n              amount: {\n                value: amount\n              }\n            }]\n          });\n        },\n        onApprove: async (data, actions) => {\n          actions.order.capture().then(details => {\n            const paymentMethod = {\n              type: 'PayPal',\n              email: details.payer.email_address\n            }; // on action\n          });\n        },\n        onError: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PayPalPayment;\nexport default PayPalPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayPalPayment\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PayPalPayment.js"],"names":["React","PayPalScriptProvider","PayPalButtons","options","currency","PayPalPayment","amount","layout","data","actions","order","create","purchase_units","description","value","capture","then","details","paymentMethod","type","email","payer","email_address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;;AAGA,MAAMC,OAAO,GAAG;AACZ,eAAa,kFADD;AAEZC,EAAAA,QAAQ,EAAE;AAFE,CAAhB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClC,sBACI;AAAA,2BACI,QAAC,oBAAD;AAAsB,MAAA,OAAO,EAAEH,OAA/B;AAAA,6BACI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAE;AAAV,SADX;AAEI,QAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5B,iBAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,YAAAA,cAAc,EAAE,CACZ;AACIC,cAAAA,WAAW,EAAE,kBADjB;AAEIP,cAAAA,MAAM,EAAE;AACJQ,gBAAAA,KAAK,EAAER;AADH;AAFZ,aADY;AADQ,WAArB,CAAP;AAUH,SAbL;AAcI,QAAA,SAAS,EAAE,OAAOE,IAAP,EAAaC,OAAb,KAAyB;AAChCA,UAAAA,OAAO,CAACC,KAAR,CAAcK,OAAd,GAAwBC,IAAxB,CAA8BC,OAAD,IAAa;AACtC,kBAAMC,aAAa,GAAG;AAClBC,cAAAA,IAAI,EAAE,QADY;AAElBC,cAAAA,KAAK,EAAEH,OAAO,CAACI,KAAR,CAAcC;AAFH,aAAtB,CADsC,CAKtC;AACH,WAND;AAOH,SAtBL;AAuBI,QAAA,OAAO,EAAE;AAvBb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAhCD;;KAAMjB,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\n\n\nconst options = {\n    'client-id': 'AU51gVXV29PQQgKgUCipVcv_d6ZEVCHUJH0AwBCBb3ey5faoUa-NdJ8eqWdl-aZysrDrCmf3Dy3EPsdX',\n    currency: 'EUR',\n};\n\nconst PayPalPayment = ({ amount }) => {\n    return (\n        <div>\n            <PayPalScriptProvider options={options}>\n                <PayPalButtons\n                    style={{ layout: 'horizontal' }}\n                    createOrder={(data, actions) => {\n                        return actions.order.create({\n                            purchase_units: [\n                                {\n                                    description: 'Breender Payment',\n                                    amount: {\n                                        value: amount,\n                                    },\n                                },\n                            ],\n                        });\n                    }}\n                    onApprove={async (data, actions) => {\n                        actions.order.capture().then((details) => {\n                            const paymentMethod = {\n                                type: 'PayPal',\n                                email: details.payer.email_address,\n                            };\n                            // on action\n                        });\n                    }}\n                    onError={null}\n                />\n            </PayPalScriptProvider>\n        </div>\n    );\n};\n\nexport default PayPalPayment;\n"]},"metadata":{},"sourceType":"module"}