{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SubscriptionPageView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport SubscriptionPlanComponent from '../components/premium/SubscriptionPlanComponent';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  premiumDescription: {\n    padding: theme.spacing(8, 0, 6)\n  }\n}));\n\nfunction SubscriptionPageView(props) {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSignUp = v => {\n    //pass subscription plan to sign up page \n    props.history.push({\n      pathname: \"/register\",\n      subscriptionPlan: v\n    });\n  };\n\n  const onChangePlan = v => {\n    //pass subscription plan to sign up page\n    if (user.user.subscriptionPlan === \"free\" && v === \"premium\") {\n      console.log(\"want to change\");\n      props.history.push(\"/premium/changePlan\");\n    } else if (user.user.subscriptionPlan === \"premium\" && v === \"free\") {\n      handleOpen();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      component: \"main\",\n      className: classes.premiumDescription,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h2\",\n        align: \"center\",\n        color: \"textPrimary\",\n        gutterBottom: true,\n        children: \"Get Access to All Features!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: \"Basic product or service is provided free of charge, but money (a premium) is charged for additional features, services, or virtual (online) or physical (offline) goods that expand the functionality of the free version.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(SubscriptionPlanComponent, {\n          onClick: user.user ? onChangePlan : onSignUp,\n          subscriptionPlan: user.user ? user.user.subscriptionPlan : '',\n          user: user.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: handleClose,\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: open,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"customized-dialog-title\",\n          onClose: handleClose,\n          children: \"Switching from Premium to Free\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"After your premium subscription ends your plan will be automatically switched to free.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            variant: \"contained\",\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubscriptionPageView, \"5mDhuIodCibyUIaKpPCpfDXz0vE=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = SubscriptionPageView;\nexport default connect()(withRouter(SubscriptionPageView));\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscriptionPageView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SubscriptionPageView.js"],"names":["React","connect","useSelector","Grid","Typography","makeStyles","Button","Container","Dialog","DialogActions","DialogContent","DialogTitle","SubscriptionPlanComponent","withRouter","useStyles","theme","premiumDescription","padding","spacing","SubscriptionPageView","props","classes","user","state","open","setOpen","useState","handleOpen","handleClose","onSignUp","v","history","push","pathname","subscriptionPlan","onChangePlan","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Container,Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport SubscriptionPlanComponent from '../components/premium/SubscriptionPlanComponent';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    premiumDescription: {\n        padding: theme.spacing(8, 0, 6),\n    }\n}));\n\nfunction SubscriptionPageView(props) {\n    const classes = useStyles();\n\n\n    const user = useSelector((state) => state.user);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const onSignUp = (v) => {\n        //pass subscription plan to sign up page \n            props.history.push({pathname:\"/register\", subscriptionPlan: v});\n       \n    };\n\n\n    const onChangePlan = (v) => {\n        //pass subscription plan to sign up page\n            if(user.user.subscriptionPlan === \"free\" && v === \"premium\"){\n                console.log(\"want to change\");\n                props.history.push(\"/premium/changePlan\");\n            } else if(user.user.subscriptionPlan === \"premium\" && v === \"free\") {\n                handleOpen();\n            }\n\n    };\n\n    return (\n        <Container>\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.premiumDescription}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Get Access to All Features!\n                </Typography>\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n             Basic product or service is provided free of charge, but money (a premium) is charged for additional features, services, or virtual (online) or physical (offline) goods that expand the functionality of the free version.\n                </Typography>\n            </Container>\n            <Container maxWidth=\"md\" component=\"main\">\n                <Grid container spacing={5} alignItems=\"flex-end\">\n                    <SubscriptionPlanComponent onClick={user.user? onChangePlan : onSignUp} subscriptionPlan={user.user? user.user.subscriptionPlan : ''} user={user.user}/>\n                </Grid>\n            </Container>\n        \n            <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Switching from Premium to Free\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            After your premium subscription ends your plan will be automatically switched to free. \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus variant='contained' onClick={handleClose} color='primary'>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n\n        </Container>\n    );\n}\nexport default connect()(withRouter(SubscriptionPageView));\n"]},"metadata":{},"sourceType":"module"}