{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { getPet } from '../redux/actions/petActions';\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport PremiumBanner from 'components/PremiumBanner';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PetProfileView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const loggedInUser = useLoggedInUser();\n  const petId = location.pathname.split('/pet/')[1];\n  useEffect(() => {\n    // get id of pet from URL\n    async function loadPet(id) {\n      await dispatch(getPet(id));\n    }\n\n    return loadPet(petId);\n  }, [dispatch, petId]);\n  const selectedPet = useSelector(state => state.pets);\n  return !selectedPet.pet && !selectedPet.error ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this) : selectedPet.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this) : selectedPet.pet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loggedInUser || loggedInUser.subscriptionPlan === 'free' && loggedInUser.role !== 'admin' ? /*#__PURE__*/_jsxDEV(PremiumBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 109\n    }, this) : null, /*#__PURE__*/_jsxDEV(PetProfileComponent, {\n      id: petId,\n      officialName: selectedPet.pet.officialName,\n      nickname: selectedPet.pet.nickname,\n      age: calculateAge(selectedPet.pet.birthDate),\n      sex: selectedPet.pet.sex,\n      price: selectedPet.pet.price,\n      profilePicture: selectedPet.pet.profilePicture,\n      pictures: selectedPet.pet.pictures,\n      breed: selectedPet.pet.breed,\n      species: selectedPet.pet.species,\n      documents: selectedPet.pet.documents,\n      competitions: selectedPet.pet.competitions,\n      ownerId: selectedPet.pet.ownerId,\n      purchased: selectedPet.pet.purchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : null;\n}\n\n_s(PetProfileView, \"/M/cYwDVc8FmTObTx3NT75hhF8s=\", false, function () {\n  return [useDispatch, useLocation, useLoggedInUser, useSelector];\n});\n\n_c = PetProfileView;\n\nfunction calculateAge(birthDate) {\n  var ageDifMs = Date.now() - new Date(birthDate).getTime();\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n  var result = Math.abs(ageDate.getUTCFullYear() - 1970);\n  return result ? result : 0;\n} // connect() establishes allows the usage of redux functionality\n\n\nexport default connect()(PetProfileView);\n\nvar _c;\n\n$RefreshReg$(_c, \"PetProfileView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js"],"names":["React","useEffect","connect","useSelector","getPet","PetProfileComponent","Loading","useDispatch","useLocation","PremiumBanner","useLoggedInUser","PetProfileView","props","dispatch","location","loggedInUser","petId","pathname","split","loadPet","id","selectedPet","state","pets","pet","error","subscriptionPlan","role","officialName","nickname","calculateAge","birthDate","sex","price","profilePicture","pictures","breed","species","documents","competitions","ownerId","purchased","ageDifMs","Date","now","getTime","ageDate","result","Math","abs","getUTCFullYear"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { getPet } from '../redux/actions/petActions';\r\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\r\nimport Loading from '../components/Loading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PremiumBanner from 'components/PremiumBanner';\r\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\r\n\r\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\r\n\r\nfunction PetProfileView(props) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const loggedInUser = useLoggedInUser();\r\n\r\n    const petId = location.pathname.split('/pet/')[1];\r\n\r\n    useEffect(() => {\r\n        // get id of pet from URL\r\n\r\n        async function loadPet(id) {\r\n            await dispatch(getPet(id));\r\n        }\r\n\r\n        return loadPet(petId);\r\n    }, [dispatch, petId]);\r\n\r\n    const selectedPet = useSelector((state) => state.pets);\r\n\r\n    return !selectedPet.pet && !selectedPet.error ? (\r\n        <Loading />\r\n    ) : selectedPet.error ? (\r\n        <div>error</div>\r\n    ) : selectedPet.pet ? (\r\n        <>\r\n            {!loggedInUser || (loggedInUser.subscriptionPlan === 'free' && loggedInUser.role !== 'admin') ? <PremiumBanner /> : null}\r\n            <PetProfileComponent\r\n                id={petId}\r\n                officialName={selectedPet.pet.officialName}\r\n                nickname={selectedPet.pet.nickname}\r\n                age={calculateAge(selectedPet.pet.birthDate)}\r\n                sex={selectedPet.pet.sex}\r\n                price={selectedPet.pet.price}\r\n                profilePicture={selectedPet.pet.profilePicture}\r\n                pictures={selectedPet.pet.pictures}\r\n                breed={selectedPet.pet.breed}\r\n                species={selectedPet.pet.species}\r\n                documents={selectedPet.pet.documents}\r\n                competitions={selectedPet.pet.competitions}\r\n                ownerId={selectedPet.pet.ownerId}\r\n                purchased={selectedPet.pet.purchased}\r\n            />\r\n        </>\r\n    ) : null;\r\n}\r\n\r\nfunction calculateAge(birthDate) {\r\n    var ageDifMs = Date.now() - new Date(birthDate).getTime();\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    var result = Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    return result ? result : 0;\r\n}\r\n\r\n// connect() establishes allows the usage of redux functionality\r\nexport default connect()(PetProfileView);\r\n"]},"metadata":{},"sourceType":"module"}