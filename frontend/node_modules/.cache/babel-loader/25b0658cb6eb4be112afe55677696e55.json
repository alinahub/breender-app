{"ast":null,"code":"import axios from 'axios';\nexport default class MessageService {\n  static URL() {\n    return 'http://localhost:4000/messages';\n  }\n\n  static getMessages(conversationId) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.get(`/messages/${conversationId}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static updateMessagesToSeen(messageIds) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.put(`/messages/`, {\n          messagesToUpdate: messageIds\n        });\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static getUnseenMessages(userId) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const {\n          data\n        } = await axios.get(`/messages/unseen/${userId}`);\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  static async createMessage(message) {\n    const {\n      data\n    } = await axios.post(`/messages/`, message);\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/services/MessageService.js"],"names":["axios","MessageService","URL","getMessages","conversationId","Promise","resolve","reject","data","get","err","updateMessagesToSeen","messageIds","put","messagesToUpdate","getUnseenMessages","userId","createMessage","message","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,CAAqB;AACtB,SAAHC,GAAG,GAAG;AACT,WAAO,gCAAP;AACH;;AAEiB,SAAXC,WAAW,CAACC,cAAD,EAAiB;AAC/B,WAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,KAAK,CAACS,GAAN,CAAW,aAAYL,cAAe,EAAtC,CAAvB;AACAE,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAE0B,SAApBC,oBAAoB,CAACC,UAAD,EAAa;AACpC,WAAO,IAAIP,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,KAAK,CAACa,GAAN,CAAW,YAAX,EAAwB;AAAEC,UAAAA,gBAAgB,EAAEF;AAApB,SAAxB,CAAvB;AACAN,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEuB,SAAjBK,iBAAiB,CAACC,MAAD,EAAS;AAC7B,WAAO,IAAIX,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,KAAK,CAACS,GAAN,CAAW,oBAAmBO,MAAO,EAArC,CAAvB;AACAV,QAAAA,OAAO,CAACE,IAAD,CAAP;AACH,OAHD,CAGE,OAAOE,GAAP,EAAY;AACVH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACH;AACJ,KAPM,CAAP;AAQH;;AAEyB,eAAbO,aAAa,CAACC,OAAD,EAAU;AAChC,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACmB,IAAN,CAAY,YAAZ,EAAyBD,OAAzB,CAAvB;AACA,WAAOV,IAAP;AACH;;AAzC+B","sourcesContent":["import axios from 'axios';\n\nexport default class MessageService {\n    static URL() {\n        return 'http://localhost:4000/messages';\n    }\n\n    static getMessages(conversationId) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.get(`/messages/${conversationId}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static updateMessagesToSeen(messageIds) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.put(`/messages/`, { messagesToUpdate: messageIds });\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static getUnseenMessages(userId) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const { data } = await axios.get(`/messages/unseen/${userId}`);\n                resolve(data);\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n\n    static async createMessage(message) {\n        const { data } = await axios.post(`/messages/`, message);\n        return data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}