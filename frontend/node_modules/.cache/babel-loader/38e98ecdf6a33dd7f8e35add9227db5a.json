{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/MessengerView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useSelector, dispatch } from 'react-redux';\nimport { getConversations } from '../redux/actions/conversationActions';\nimport MessengerComponent from '../components/messenger/MessengerComponent';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessengerView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user.user);\n  useEffect(() => {\n    let userId = user.id;\n\n    async function loadConversations(id) {\n      await dispatch(getConversations(id));\n    }\n\n    return loadConversations(userId);\n  }, [dispatch]);\n  const loadedConversations = useSelector(state => state.conversations);\n  return !loadedConversations.conversations ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this) : !Array.isArray(loadedConversations.conversations) ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this) : loadedConversations.conversations ? /*#__PURE__*/_jsxDEV(MessengerComponent, {\n    conversations: loadedConversations.conversations,\n    currentUser: user,\n    currentConversationId: props.currentConversationId,\n    petId: props.petId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this) : null;\n} // connect() establishes allows the usage of redux functionality\n\n\n_s(MessengerView, \"cuHfPvEIXs2JmoCXGQqYL4SSxH4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MessengerView;\nexport default connect()(MessengerView);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessengerView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/MessengerView.js"],"names":["React","useEffect","useState","connect","useSelector","dispatch","getConversations","MessengerComponent","Loading","useDispatch","MessengerView","props","user","state","userId","id","loadConversations","loadedConversations","conversations","Array","isArray","currentConversationId","petId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,QAA+C,aAA/C;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMN,QAAQ,GAAGI,WAAW,EAA5B;AAEA,QAAMG,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,MAAM,GAAGF,IAAI,CAACG,EAAlB;;AAEA,mBAAeC,iBAAf,CAAiCD,EAAjC,EAAqC;AACjC,YAAMV,QAAQ,CAACC,gBAAgB,CAACS,EAAD,CAAjB,CAAd;AACH;;AAED,WAAOC,iBAAiB,CAACF,MAAD,CAAxB;AACH,GARQ,EAQN,CAACT,QAAD,CARM,CAAT;AAUA,QAAMY,mBAAmB,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACK,aAAlB,CAAvC;AAEA,SAAO,CAACD,mBAAmB,CAACC,aAArB,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,GAEH,CAACC,KAAK,CAACC,OAAN,CAAcH,mBAAmB,CAACC,aAAlC,CAAD,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,GAEAD,mBAAmB,CAACC,aAApB,gBACA,QAAC,kBAAD;AAAoB,IAAA,aAAa,EAAED,mBAAmB,CAACC,aAAvD;AAAsE,IAAA,WAAW,EAAEN,IAAnF;AAAyF,IAAA,qBAAqB,EAAED,KAAK,CAACU,qBAAtH;AAA6I,IAAA,KAAK,EAAEV,KAAK,CAACW;AAA1J;AAAA;AAAA;AAAA;AAAA,UADA,GAEA,IANJ;AAOH,C,CAED;;;GA1BSZ,a;UACYD,W,EAEJL,W,EAYeA,W;;;KAfvBM,a;AA2BT,eAAeP,OAAO,GAAGO,aAAH,CAAtB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useSelector, dispatch } from 'react-redux';\nimport { getConversations } from '../redux/actions/conversationActions';\nimport MessengerComponent from '../components/messenger/MessengerComponent';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\n\nfunction MessengerView(props) {\n    const dispatch = useDispatch();\n\n    const user = useSelector((state) => state.user.user);\n\n    useEffect(() => {\n        let userId = user.id;\n\n        async function loadConversations(id) {\n            await dispatch(getConversations(id));\n        }\n\n        return loadConversations(userId);\n    }, [dispatch]);\n\n    const loadedConversations = useSelector((state) => state.conversations);\n\n    return !loadedConversations.conversations ? (\n        <Loading />\n    ) : !Array.isArray(loadedConversations.conversations) ? (\n        <div>error</div>\n    ) : loadedConversations.conversations ? (\n        <MessengerComponent conversations={loadedConversations.conversations} currentUser={user} currentConversationId={props.currentConversationId} petId={props.petId} />\n    ) : null;\n}\n\n// connect() establishes allows the usage of redux functionality\nexport default connect()(MessengerView);\n"]},"metadata":{},"sourceType":"module"}