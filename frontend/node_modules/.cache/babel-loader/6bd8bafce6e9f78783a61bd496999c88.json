{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/PaymentInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, FormControl, RadioGroup, FormControlLabel, Radio, Typography, Button } from '@material-ui/core';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { connect } from 'react-redux';\nimport NotificationService from 'services/NotificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  usersignUpRoot: {\n    margin: 'auto'\n  },\n  signUpPaper: {\n    width: '1000px',\n    height: '425px',\n    padding: theme.spacing(2)\n  },\n  signUpRow: {\n    paddingTop: theme.spacing(1.5),\n    paddingBottom: theme.spacing(1),\n    '&:last-child': {\n      paddingBottom: theme.spacing(0)\n    },\n    '&:first-child': {\n      paddingTop: theme.spacing(0)\n    }\n  },\n  signUpButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  signUpButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n/**\n * For payment info and registering a new user\n * @param {props} props\n */\n\nfunction PaymentInformationComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const [disabled, setDisabled] = React.useState(false);\n  const options = {\n    'client-id': 'AU51gVXV29PQQgKgUCipVcv_d6ZEVCHUJH0AwBCBb3ey5faoUa-NdJ8eqWdl-aZysrDrCmf3Dy3EPsdX',\n    currency: 'EUR'\n  };\n  const values = props.values;\n\n  const onError = err => {\n    NotificationService.notify('error', 'Error', 'There was an error in PayPal payment. Please try again.');\n  };\n\n  function onSuccess(paymentMethod) {\n    const paymentPlan = props.payments.find(x => x.price === props.values.chosenPayment);\n    props.user.user ? props.onSuccess(paymentPlan.plan, paymentMethod) : props.onSuccess(values.email, values.username, values.password, values.city, values.province, values.isAdmin, values.subscriptionPlan, paymentPlan.plan, paymentMethod);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.usersignUpRoot,\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.signUpPaper,\n      component: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.signUpRow,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Choose payment plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.signUpRow,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"plan\",\n            value: props.values.chosenPayment,\n            onChange: e => props.handleChange('chosenPayment', e),\n            id: \"payment\",\n            children: props.payments.map(payment => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: payment.price,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 82\n              }, this),\n              label: payment.description\n            }, payment.price, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.signUpRow,\n        children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n          options: options,\n          children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n            disabled: disabled,\n            forceReRender: [props.values.chosenPayment],\n            style: {\n              layout: 'horizontal'\n            } //rerender paypal button every time payment plan changes: ensures that plan_id is correct\n            ,\n            createOrder: (data, actions) => {\n              setDisabled(true);\n              return actions.order.create({\n                purchase_units: [{\n                  description: 'Breender Premium Subscription',\n                  amount: {\n                    value: props.values.chosenPayment\n                  }\n                }]\n              });\n            },\n            onApprove: async (data, actions) => {\n              actions.order.capture().then(details => {\n                const paymentMethod = {\n                  type: 'PayPal',\n                  email: details.payer.email_address\n                };\n                onSuccess(paymentMethod);\n              });\n            },\n            onError: onError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.signUpRow + ' ' + classes.signUpButtons,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.signUpButton,\n          onClick: props.prevStep,\n          disabled: disabled,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentInformationComponent, \"sfF/9UeJi0vaNMUUBn2kr1qXaqE=\", false, function () {\n  return [useStyles];\n});\n\n_c = PaymentInformationComponent;\nexport default connect()(PaymentInformationComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentInformationComponent\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/PaymentInformation.js"],"names":["React","makeStyles","Paper","FormControl","RadioGroup","FormControlLabel","Radio","Typography","Button","PayPalScriptProvider","PayPalButtons","connect","NotificationService","useStyles","theme","usersignUpRoot","margin","signUpPaper","width","height","padding","spacing","signUpRow","paddingTop","paddingBottom","signUpButtons","display","justifyContent","signUpButton","marginLeft","PaymentInformationComponent","props","classes","disabled","setDisabled","useState","options","currency","values","onError","err","notify","onSuccess","paymentMethod","paymentPlan","payments","find","x","price","chosenPayment","user","plan","email","username","password","city","province","isAdmin","subscriptionPlan","e","handleChange","map","payment","description","layout","data","actions","order","create","purchase_units","amount","value","capture","then","details","type","payer","email_address","prevStep"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, FormControl, RadioGroup, FormControlLabel, Radio, Typography, Button } from '@material-ui/core';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { connect } from 'react-redux';\nimport NotificationService from 'services/NotificationService';\n\nconst useStyles = makeStyles((theme) => ({\n    usersignUpRoot: {\n        margin: 'auto',\n    },\n    signUpPaper: {\n        width: '1000px',\n        height: '425px',\n        padding: theme.spacing(2),\n    },\n    signUpRow: {\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(1),\n        '&:last-child': {\n            paddingBottom: theme.spacing(0),\n        },\n        '&:first-child': {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    signUpButtons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    signUpButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * For payment info and registering a new user\n * @param {props} props\n */\nfunction PaymentInformationComponent(props) {\n    const classes = useStyles();\n    const [disabled, setDisabled] = React.useState(false);\n\n    const options = {\n        'client-id': 'AU51gVXV29PQQgKgUCipVcv_d6ZEVCHUJH0AwBCBb3ey5faoUa-NdJ8eqWdl-aZysrDrCmf3Dy3EPsdX',\n        currency: 'EUR',\n    };\n\n    const values = props.values;\n\n    const onError = (err) => {\n        NotificationService.notify('error', 'Error', 'There was an error in PayPal payment. Please try again.');\n    };\n\n    function onSuccess(paymentMethod) {\n        const paymentPlan = props.payments.find((x) => x.price === props.values.chosenPayment);\n        props.user.user\n            ? props.onSuccess(paymentPlan.plan, paymentMethod)\n            : props.onSuccess(values.email, values.username, values.password, values.city, values.province, values.isAdmin, values.subscriptionPlan, paymentPlan.plan, paymentMethod);\n    }\n\n    return (\n        <div className={classes.usersignUpRoot} align=\"center\">\n            <Paper className={classes.signUpPaper} component=\"form\">\n                <div className={classes.signUpRow}>\n                    <Typography variant=\"h4\">Choose payment plan</Typography>\n                </div>\n                <div className={classes.signUpRow}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup aria-label=\"plan\" value={props.values.chosenPayment} onChange={(e) => props.handleChange('chosenPayment', e)} id=\"payment\">\n                            {props.payments.map((payment) => (\n                                <FormControlLabel value={payment.price} control={<Radio />} label={payment.description} key={payment.price} />\n                            ))}\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                <div className={classes.signUpRow}>\n                    <PayPalScriptProvider options={options}>\n                        <PayPalButtons\n                            disabled={disabled}\n                            forceReRender={[props.values.chosenPayment]}\n                            style={{ layout: 'horizontal' }} //rerender paypal button every time payment plan changes: ensures that plan_id is correct\n                            createOrder={(data, actions) => {\n                                setDisabled(true);\n                                return actions.order.create({\n                                    purchase_units: [\n                                        {\n                                            description: 'Breender Premium Subscription',\n                                            amount: {\n                                                value: props.values.chosenPayment,\n                                            },\n                                        },\n                                    ],\n                                });\n                            }}\n                            onApprove={async (data, actions) => {\n                                actions.order.capture().then((details) => {\n                                    const paymentMethod = {\n                                        type: 'PayPal',\n                                        email: details.payer.email_address,\n                                    };\n                                    onSuccess(paymentMethod);\n                                });\n                            }}\n                            onError={onError}\n                        />\n                    </PayPalScriptProvider>\n                </div>\n                <div className={classes.signUpRow + ' ' + classes.signUpButtons}>\n                    <Button className={classes.signUpButton} onClick={props.prevStep} disabled={disabled}>\n                        Back\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect()(PaymentInformationComponent);\n"]},"metadata":{},"sourceType":"module"}