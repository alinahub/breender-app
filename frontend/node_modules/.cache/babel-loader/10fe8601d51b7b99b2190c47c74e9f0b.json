{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/premium/SubscriptionPlanCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { CancelIcon, CheckIcon } from 'components/icons';\nimport { Badge } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  rootChosen: {\n    background: theme.palette.primary.main,\n    minWidth: 275,\n    border: `1px solid rgba(145, 147, 179, 0.5)`,\n    boxShadow: '0 6px 10px rgba(0,0,0,.07), 0 0 6px rgba(0,0,0,.02)',\n    cursor: 'pointer',\n    marginBottom: 30\n  },\n  root: {\n    border: `1px solid rgba(145, 147, 179, 0.5)`,\n    boxShadow: '0 6px 10px rgba(0,0,0,.07), 0 0 6px rgba(0,0,0,.02)',\n    cursor: 'pointer',\n    marginBottom: 30\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.primary.light\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2)\n  },\n  cardContent: {\n    paddingLeft: theme.spacing(8)\n  },\n  features: {\n    paddingBottom: theme.spacing(2),\n    display: 'flex',\n    flexWrap: 'nowrap'\n  },\n  button: {\n    padding: 20\n  },\n  icon: {\n    position: 'absolute',\n    color: '#F4DE8F',\n    width: 50,\n    height: 50\n  }\n}));\n/**\n * For choosing and presenting subscription plan\n * @param {props} props\n */\n\nfunction SubscriptionPlanCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const isPremium = props.plan.id === 'premium';\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Badge, {\n      count: isPremium ? /*#__PURE__*/_jsxDEV(StarTwoToneIcon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this) : null,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `${props.subscriptionPlan === props.plan.id ? classes.rootChosen : classes.root} ${'resize-on-hover'}`,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: props.plan.title,\n          titleTypographyProps: {\n            align: 'center'\n          },\n          subheaderTypographyProps: {\n            align: 'center'\n          } //action={isPremium ? <StarTwoToneIcon className={classes.icon} /> : null}\n          ,\n          className: classes.cardHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cardPricing,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: `${isPremium ? 'textSecondary' : 'textPrimary'}`,\n              children: [\"$\", props.plan.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: `${isPremium ? 'textSecondary' : 'textPrimary'}`,\n              children: \"/mo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.cardContent,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [props.plan.included.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.features,\n                    children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n                      style: {\n                        marginRight: 8\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 49\n                    }, this), line]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this)\n                }, `${line}_${props.plan.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)\n              }, `${line}_${props.plan.id}div`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)), props.plan.excluded.map(line => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.features,\n                    children: [/*#__PURE__*/_jsxDEV(CancelIcon, {\n                      style: {\n                        marginRight: 8\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this), line]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, `${line}_${props.plan.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)\n              }, `${line}_${props.plan.id}div`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: classes.button,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            color: props.subscriptionPlan === props.plan.id ? 'secondary' : 'primary',\n            onClick: props.onClick,\n            children: props.subscriptionPlan === props.plan.id ? 'YOUR CHOICE' : 'CHOOSE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, props.plan.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SubscriptionPlanCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SubscriptionPlanCard;\nSubscriptionPlanCard.propTypes = {\n  plan: PropTypes.object,\n  onClick: PropTypes.func,\n  subscriptionPlan: PropTypes.string\n};\nexport default SubscriptionPlanCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscriptionPlanCard\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/premium/SubscriptionPlanCard.js"],"names":["React","Button","Card","CardActions","CardContent","CardHeader","Grid","StarTwoToneIcon","Typography","makeStyles","PropTypes","CancelIcon","CheckIcon","Badge","useStyles","theme","rootChosen","background","palette","primary","main","minWidth","border","boxShadow","cursor","marginBottom","root","cardHeader","backgroundColor","light","cardPricing","display","justifyContent","alignItems","spacing","cardContent","paddingLeft","features","paddingBottom","flexWrap","button","padding","icon","position","color","width","height","SubscriptionPlanCard","props","classes","isPremium","plan","id","subscriptionPlan","title","align","price","included","map","line","marginRight","excluded","onClick","propTypes","object","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { CancelIcon, CheckIcon } from 'components/icons';\nimport { Badge } from 'antd';\n\nconst useStyles = makeStyles((theme) => ({\n    rootChosen: {\n        background: theme.palette.primary.main,\n        minWidth: 275,\n        border: `1px solid rgba(145, 147, 179, 0.5)`,\n        boxShadow: '0 6px 10px rgba(0,0,0,.07), 0 0 6px rgba(0,0,0,.02)',\n        cursor: 'pointer',\n        marginBottom: 30,\n    },\n    root: {\n        border: `1px solid rgba(145, 147, 179, 0.5)`,\n        boxShadow: '0 6px 10px rgba(0,0,0,.07), 0 0 6px rgba(0,0,0,.02)',\n        cursor: 'pointer',\n        marginBottom: 30,\n    },\n    cardHeader: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n    },\n    cardContent: {\n        paddingLeft: theme.spacing(8),\n    },\n    features: {\n        paddingBottom: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'nowrap',\n    },\n    button: {\n        padding: 20,\n    },\n    icon: {\n        position: 'absolute',\n        color: '#F4DE8F',\n        width: 50,\n        height: 50,\n    },\n}));\n/**\n * For choosing and presenting subscription plan\n * @param {props} props\n */\nfunction SubscriptionPlanCard(props) {\n    const classes = useStyles();\n\n    const isPremium = props.plan.id === 'premium';\n\n    return (\n        <Grid item key={props.plan.title} xs={6}>\n            <Badge count={ isPremium ? <StarTwoToneIcon className={classes.icon} /> : null}>\n                <Card className={`${props.subscriptionPlan === props.plan.id ? classes.rootChosen : classes.root} ${'resize-on-hover'}`}>\n                    <CardHeader\n                        title={props.plan.title}\n                        titleTypographyProps={{ align: 'center' }}\n                        subheaderTypographyProps={{ align: 'center' }}\n                        //action={isPremium ? <StarTwoToneIcon className={classes.icon} /> : null}\n                        className={classes.cardHeader}\n                    />\n                    <CardContent>\n                        <div className={classes.cardPricing}>\n                            <Typography variant=\"h3\" color={`${isPremium ? 'textSecondary' : 'textPrimary'}`}>\n                                ${props.plan.price}\n                            </Typography>\n                            <Typography variant=\"h6\" color={`${isPremium ? 'textSecondary' : 'textPrimary'}`}>\n                                /mo\n                            </Typography>\n                        </div>\n                        <div className={classes.cardContent}>\n                            <ul>\n                                {props.plan.included.map((line) => (\n                                    <div key={`${line}_${props.plan.id}div`}>\n                                        <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                            <div className={classes.features}>\n                                                <CheckIcon style={{ marginRight: 8 }} />\n                                                {line}\n                                            </div>\n                                        </Typography>\n                                    </div>\n                                ))}\n                                {props.plan.excluded.map((line) => (\n                                    <div key={`${line}_${props.plan.id}div`}>\n                                        <Typography variant=\"subtitle1\" key={`${line}_${props.plan.id}`}>\n                                            <div className={classes.features}>\n                                                <CancelIcon style={{ marginRight: 8 }} />\n                                                {line}\n                                            </div>\n                                        </Typography>\n                                    </div>\n                                ))}\n                            </ul>\n                        </div>\n                    </CardContent>\n                    <CardActions className={classes.button}>\n                        <Button fullWidth variant=\"contained\" color={props.subscriptionPlan === props.plan.id ? 'secondary' : 'primary'} onClick={props.onClick}>\n                            {props.subscriptionPlan === props.plan.id ? 'YOUR CHOICE' : 'CHOOSE'}\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Badge>\n        </Grid>\n    );\n}\n\nSubscriptionPlanCard.propTypes = {\n    plan: PropTypes.object,\n    onClick: PropTypes.func,\n    subscriptionPlan: PropTypes.string,\n};\n\nexport default SubscriptionPlanCard;\n"]},"metadata":{},"sourceType":"module"}