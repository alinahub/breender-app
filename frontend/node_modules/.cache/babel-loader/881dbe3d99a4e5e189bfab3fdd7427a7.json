{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getTransactions, logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuitem: {\n    display: 'flex',\n    minWidth: '200px'\n  },\n  avatar: {\n    background: theme.palette.secondary.main\n  },\n  margin: {\n    marginRight: theme.spacing(1)\n  }\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\n\nfunction KebabMenu(props) {\n  _s();\n\n  const classes = useStyles(); // return the currnetly logged in user from redux store\n\n  const user = useUser();\n\n  const onClickLogin = () => {\n    // close this menu\n    props.onClose(); // navigate to the login page\n\n    props.history.push('/login');\n  };\n\n  const onClickLogout = () => {\n    // trigger redux logout action\n    props.dispatch(logout()); // close this menu\n\n    props.onClose(); // navigate to the home page\n\n    props.history.push('/login');\n  };\n\n  const onClickGoToUserProfile = () => {\n    props.history.push(\"/user\");\n  };\n\n  const onClickMyTransactions = id => {\n    props.dispatch(getTransactions(id));\n    props.history.push('/transactions');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    open: props.open,\n    anchorEl: props.anchor,\n    onClose: props.onClose,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    children: user ? [/*#__PURE__*/_jsxDEV(MenuItem, {\n      className: classes.menuitem,\n      onClick: onClickGoToUserProfile,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: user.username ? user.username[0] : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), user.username]\n    }, \"user\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => onClickMyTransactions(user.id),\n      className: classes.menuitem,\n      children: \"My transactions\"\n    }, \"transactions\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogout,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n        className: classes.margin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this), \"Logout\"]\n    }, \"logout\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this)] : [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogin,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), \"Login\"]\n    }, \"login\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(KebabMenu, \"kSsZVLCNw+urhXAfNQbCKABgZNM=\", false, function () {\n  return [useStyles, useUser];\n});\n\n_c = KebabMenu;\nKebabMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.element,\n  open: PropTypes.bool.isRequired\n};\nexport default connect()(withRouter(KebabMenu));\n\nvar _c;\n\n$RefreshReg$(_c, \"KebabMenu\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js"],"names":["React","makeStyles","PropTypes","withRouter","getTransactions","logout","Menu","MenuItem","Avatar","Divider","connect","ExitToAppIcon","VerifiedUserIcon","useUser","useStyles","theme","menuitem","display","minWidth","avatar","background","palette","secondary","main","margin","marginRight","spacing","KebabMenu","props","classes","user","onClickLogin","onClose","history","push","onClickLogout","dispatch","onClickGoToUserProfile","onClickMyTransactions","id","open","anchor","vertical","horizontal","username","propTypes","func","isRequired","element","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getTransactions, logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: 'flex',\n        minWidth: '200px',\n    },\n    avatar: {\n        background: theme.palette.secondary.main,\n    },\n    margin: {\n        marginRight: theme.spacing(1),\n    }\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n    // return the currnetly logged in user from redux store\n    const user = useUser();\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push('/login');\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push('/login');\n    };\n\n    const onClickGoToUserProfile = () => {\n        props.history.push(\"/user\");\n    };\n\n    const onClickMyTransactions = (id) => {\n        props.dispatch(getTransactions(id));\n        props.history.push('/transactions');\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            {user\n                ? [\n                    <MenuItem key=\"user\" className={classes.menuitem} onClick={onClickGoToUserProfile}>\n                        <Avatar className={classes.avatar}>\n                            {user.username ? user.username[0] : \"\"}\n                        </Avatar>\n                        {user.username}\n                    </MenuItem>,\n                    <Divider key=\"divider\" />,\n                    <MenuItem key=\"transactions\" onClick={() => onClickMyTransactions(user.id)} className={classes.menuitem}>\n                        My transactions\n                    </MenuItem>,\n                    <Divider key=\"divider2\" />,\n                    <MenuItem key=\"logout\" onClick={onClickLogout} className={classes.menuitem}>\n                        <ExitToAppIcon className={classes.margin} />\n                        Logout\n                    </MenuItem>,\n                ]\n                : [\n                    <MenuItem\n                        key=\"login\"\n                        onClick={onClickLogin}\n                        className={classes.menuitem}\n                    >\n                        <VerifiedUserIcon className={classes.avatar} />\n                        Login\n                    </MenuItem>,\n                ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}