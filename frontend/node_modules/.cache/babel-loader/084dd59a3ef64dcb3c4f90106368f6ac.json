{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/messenger/ConversationComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Badge, Divider, Typography, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { ImportContacts } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConversationComponent(props) {\n  _s();\n\n  var _unseenMessages$filte;\n\n  const classes = useStyles();\n  const unseenMessages = useSelector(state => state.messages.unseenMessages);\n  let friend = props.conversation.members.find(m => {\n    return m._id !== props.currentUser.id;\n  }); // TODO: set friend avatar\n\n  return !friend ? null : /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    selected: props.isCurrentChat,\n    className: classes.conversationItem,\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.username,\n        children: friend ? friend.username : 'Unknown'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      className: classes.badge,\n      children: unseenMessages ? /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: (_unseenMessages$filte = unseenMessages.filter(m => m._id == props.conversation._id)[0]) === null || _unseenMessages$filte === void 0 ? void 0 : _unseenMessages$filte.count,\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, friend.username, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConversationComponent, \"b8bR8wG+wJSqKUUrrMx1eHXGiZ0=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = ConversationComponent;\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: theme.palette.secondary.main,\n    color: theme.palette.secondary.light\n  },\n  username: {\n    color: theme.palette.text.secondary\n  },\n  badge: {\n    paddingRight: theme.spacing(1)\n  }\n}));\nexport default ConversationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationComponent\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/messenger/ConversationComponent.js"],"names":["React","useEffect","makeStyles","Grid","Paper","Badge","Divider","Typography","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Avatar","useSelector","useDispatch","ImportContacts","ConversationComponent","props","classes","useStyles","unseenMessages","state","messages","friend","conversation","members","find","m","_id","currentUser","id","isCurrentChat","conversationItem","icon","username","badge","filter","count","theme","background","palette","secondary","main","color","light","text","paddingRight","spacing"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,cAA5D,EAA4EC,YAA5E,EAA0FC,uBAA1F,EAAmHC,MAAnH,QAAiI,mBAAjI;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAAA;;AAClC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,cAAc,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,cAA3B,CAAlC;AAEA,MAAIG,MAAM,GAAGN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,IAA3B,CAAiCC,CAAD,IAAO;AAChD,WAAOA,CAAC,CAACC,GAAF,KAAUX,KAAK,CAACY,WAAN,CAAkBC,EAAnC;AACH,GAFY,CAAb,CAJkC,CAQlC;;AACA,SAAO,CAACP,MAAD,GAAU,IAAV,gBACH,QAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAuC,IAAA,QAAQ,EAAEN,KAAK,CAACc,aAAvD;AAAsE,IAAA,SAAS,EAAEb,OAAO,CAACc,gBAAzF;AAAA,4BACI,QAAC,cAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEd,OAAO,CAACe;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,YAAD;AACI,MAAA,OAAO,eACH,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEf,OAAO,CAACgB,QAA5C;AAAA,kBACKX,MAAM,GAAGA,MAAM,CAACW,QAAV,GAAqB;AADhC;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ,eAWI,QAAC,uBAAD;AAAyB,MAAA,SAAS,EAAEhB,OAAO,CAACiB,KAA5C;AAAA,gBACKf,cAAc,gBAAG,QAAC,KAAD;AAAO,QAAA,YAAY,2BAAEA,cAAc,CAACgB,MAAf,CAAuBT,CAAD,IAAOA,CAAC,CAACC,GAAF,IAASX,KAAK,CAACO,YAAN,CAAmBI,GAAzD,EAA8D,CAA9D,CAAF,0DAAE,sBAAkES,KAAvF;AAA8F,QAAA,KAAK,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8H;AADjJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,KAAsBd,MAAM,CAACW,QAA7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA1BQlB,qB;UACWG,S,EACON,W;;;KAFlBG,qB;AA4BT,MAAMG,SAAS,GAAGjB,UAAU,CAAEoC,KAAD,KAAY;AACrCL,EAAAA,IAAI,EAAE;AACFM,IAAAA,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcC,SAAd,CAAwBC,IADlC;AAEFC,IAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcC,SAAd,CAAwBG;AAF7B,GAD+B;AAKrCV,EAAAA,QAAQ,EAAE;AACNS,IAAAA,KAAK,EAAEL,KAAK,CAACE,OAAN,CAAcK,IAAd,CAAmBJ;AADpB,GAL2B;AAQrCN,EAAAA,KAAK,EAAE;AACHW,IAAAA,YAAY,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADX;AAR8B,CAAZ,CAAD,CAA5B;AAaA,eAAe/B,qBAAf","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Badge, Divider, Typography, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { ImportContacts } from '@material-ui/icons';\n\nfunction ConversationComponent(props) {\n    const classes = useStyles();\n    const unseenMessages = useSelector((state) => state.messages.unseenMessages);\n\n    let friend = props.conversation.members.find((m) => {\n        return m._id !== props.currentUser.id;\n    });\n\n    // TODO: set friend avatar\n    return !friend ? null : (\n        <ListItem button key={friend.username} selected={props.isCurrentChat} className={classes.conversationItem}>\n            <ListItemAvatar>\n                <Avatar className={classes.icon} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <Typography variant=\"h6\" className={classes.username}>\n                        {friend ? friend.username : 'Unknown'}\n                    </Typography>\n                }\n            />\n            <ListItemSecondaryAction className={classes.badge}>\n                {unseenMessages ? <Badge badgeContent={unseenMessages.filter((m) => m._id == props.conversation._id)[0]?.count} color=\"secondary\"></Badge> : null}\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.light,\n    },\n    username: {\n        color: theme.palette.text.secondary,\n    },\n    badge: {\n        paddingRight: theme.spacing(1),\n    },\n}));\n\nexport default ConversationComponent;\n"]},"metadata":{},"sourceType":"module"}