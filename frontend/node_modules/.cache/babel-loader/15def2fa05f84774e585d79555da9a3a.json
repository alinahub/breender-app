{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserLoginView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport LoginComponent from \"../components/UserLoginComponent\";\nimport NotificationService from \"services/NotificationService\";\nimport { login, loginReset, me } from \"../redux/actions\";\n/**\n * For user login\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserLoginView(props) {\n  _s();\n\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (user.user) {\n      NotificationService.notify('success', 'Success', 'Sucessfully signed in.');\n      props.history.push(\"/\");\n    }\n  }, [user, props]);\n\n  const onLogin = (username, password) => {\n    props.dispatch(login(username, password));\n    console.log(user.user);\n    props.dispatch(me(user.user.id));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  const onSignUp = () => {\n    props.dispatch(loginReset());\n    props.history.push(\"/register\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginComponent, {\n    user: user,\n    onCancel: onCancel,\n    onLogin: onLogin,\n    onSignUp: onSignUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserLoginView, \"w5+LAD8lLDhLgasoS8hF5Z9czWg=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserLoginView;\nexport default connect()(withRouter(UserLoginView));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLoginView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserLoginView.js"],"names":["React","useEffect","withRouter","connect","useSelector","LoginComponent","NotificationService","login","loginReset","me","UserLoginView","props","user","state","notify","history","push","onLogin","username","password","dispatch","console","log","id","onCancel","onSignUp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,EAA5B,QAAsC,kBAAtC;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMC,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAI,CAACA,IAAT,EAAe;AACXN,MAAAA,mBAAmB,CAACQ,MAApB,CAA2B,SAA3B,EAAsC,SAAtC,EAAiD,wBAAjD;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;AACJ,GALQ,EAKN,CAACJ,IAAD,EAAOD,KAAP,CALM,CAAT;;AAOA,QAAMM,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpCR,IAAAA,KAAK,CAACS,QAAN,CAAeb,KAAK,CAACW,QAAD,EAAWC,QAAX,CAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACA,IAAjB;AACAD,IAAAA,KAAK,CAACS,QAAN,CAAeX,EAAE,CAACG,IAAI,CAACA,IAAL,CAAUW,EAAX,CAAjB;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnBb,IAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAFD;;AAIA,QAAMS,QAAQ,GAAG,MAAM;AACnBd,IAAAA,KAAK,CAACS,QAAN,CAAeZ,UAAU,EAAzB;AACAG,IAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACH,GAHD;;AAKA,sBACI,QAAC,cAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAEI,IAAA,QAAQ,EAAEY,QAFd;AAGI,IAAA,OAAO,EAAEP,OAHb;AAII,IAAA,QAAQ,EAAEQ;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAjCQf,a;UACQN,W;;;KADRM,a;AAmCT,eAAeP,OAAO,GAAGD,UAAU,CAACQ,aAAD,CAAb,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport LoginComponent from \"../components/UserLoginComponent\";\nimport NotificationService from \"services/NotificationService\";\nimport { login, loginReset, me } from \"../redux/actions\";\n\n/**\n * For user login\n * @param {props} props\n */\nfunction UserLoginView(props) {\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user) {\n            NotificationService.notify('success', 'Success', 'Sucessfully signed in.');\n            props.history.push(\"/\");\n        }\n    }, [user, props]);\n\n    const onLogin = (username, password) => {\n        props.dispatch(login(username, password));\n        console.log(user.user)\n        props.dispatch(me(user.user.id))\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    const onSignUp = () => {\n        props.dispatch(loginReset());\n        props.history.push(\"/register\");\n    };\n\n    return (\n        <LoginComponent\n            user={user}\n            onCancel={onCancel}\n            onLogin={onLogin}\n            onSignUp={onSignUp}\n        />\n    );\n}\n\nexport default connect()(withRouter(UserLoginView));\n"]},"metadata":{},"sourceType":"module"}