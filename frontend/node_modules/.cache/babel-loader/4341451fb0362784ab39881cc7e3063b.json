{"ast":null,"code":"import _objectSpread from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _defineProperty from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _excluded=[\"usernameProp\",\"emailProp\",\"provinceProp\",\"cityProp\",\"passwordProp\",\"password2Prop\",\"paymentMethodProp\",\"disableSaveProp\"];import React,{useState}from'react';import{useHistory}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import{FormControl,Grid,InputLabel,Button,MenuItem,Select,TextField,FormHelperText,Divider,Typography}from'@material-ui/core';import*as EmailValidator from'email-validator';import{Tooltip}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{layout:{flex:1,width:'auto',maxWidth:'80%',marginLeft:'10%',marginRight:'10%'},paper:_defineProperty({marginTop:theme.spacing(6),marginBottom:theme.spacing(6),padding:theme.spacing(3)},theme.breakpoints.down('sm'),{marginTop:theme.spacing(3),marginBottom:theme.spacing(3),padding:theme.spacing(2)}),label:{display:'flex',fontSize:16,fontWeight:500,marginBottom:15,marginTop:15},title:{display:'flex',justifyContent:'center',alignItems:'center',fontSize:22,fontWeight:500,marginBottom:15,marginTop:15},typography:{margin:theme.spacing(2),marginTop:theme.spacing(6)},divider:{margin:theme.spacing(3)},typographyNotifications:{padding:theme.spacing(2),margin:'auto'}};});// define types for error handling\nvar UserFormInputs={username:'username',province:'province',city:'city',password:'password',password2:'password2',paymentEmail:'paymentEmail'};var provincesAndCities={bavaria:['Munich','Nuremberg','Augsburg','Regensburg','Ingolstadt','Würzburg'],'lower-saxony':['Hanover','Braunschweig','Oldenburg','Osnabrück','Wolfsburg','Göttingen'],'baden-wuerttemberg':['Stuttgart','Karlsruhe','Mannheim','Freiburg im Breisgau','Heidelberg','Ulm'],'north-rhine-westphalia':['Cologne','Düsseldorf','Dortmund','Essen','Duisburg','Bochum']};export default function UserForm(_ref){var usernameProp=_ref.usernameProp,emailProp=_ref.emailProp,provinceProp=_ref.provinceProp,cityProp=_ref.cityProp,passwordProp=_ref.passwordProp,password2Prop=_ref.password2Prop,paymentMethodProp=_ref.paymentMethodProp,disableSaveProp=_ref.disableSaveProp,props=_objectWithoutProperties(_ref,_excluded);var classes=useStyles();var history=useHistory();var username=usernameProp.username,setUsername=usernameProp.setUsername;var email=emailProp.email,setEmail=emailProp.setEmail;var province=provinceProp.province,setProvince=provinceProp.setProvince;var city=cityProp.city,setCity=cityProp.setCity;var _useState=useState({username:false,province:false,city:false,password:false,password2:false,paymentEmail:false}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var password=passwordProp.password,setPassword=passwordProp.setPassword;var password2=password2Prop.password2,setPassword2=password2Prop.setPassword2;var paymentMethod=paymentMethodProp.paymentMethod,setPaymentMethod=paymentMethodProp.setPaymentMethod;var _React$useState=React.useState('PayPal'),_React$useState2=_slicedToArray(_React$useState,2),type=_React$useState2[0],setType=_React$useState2[1];var disableSave=disableSaveProp.disableSave,setDisableSave=disableSaveProp.setDisableSave;var paymentEmail=paymentMethod?paymentMethod.email:'';var validationErrors={username:'Userame is required',province:'Province is required',city:'City is required',password:'The passwords should be the same',password2:'The passwords should be the same',paymentEmail:'Email is not valid'};var cityOptions=null;if(province){cityOptions=provincesAndCities[province].map(function(elem){return/*#__PURE__*/_jsx(MenuItem,{value:elem,children:elem},elem);});}// validate fields\nvar validate=function validate(type,value){var temp=_objectSpread({},errors);if(type!==UserFormInputs.password&&type!==UserFormInputs.password2&&value===''){temp[type]=true;}else{temp[type]=false;}if(type===UserFormInputs.password2){if(value!==''&&value!==password){temp[type]=true;temp[UserFormInputs.password]=true;}else{temp[type]=false;temp[UserFormInputs.password]=false;}}if(type===UserFormInputs.paymentEmail){if(value!==''&&!EmailValidator.validate(value)){temp[type]=true;}else{temp[type]=false;}}var values=Object.keys(temp).map(function(key){return temp[key];});if(values.every(function(element){return element===false;})){setDisableSave(false);}else{setDisableSave(true);}setErrors(_objectSpread({},temp));};// handle variable changes\nvar handleUsernameChange=function handleUsernameChange(e){validate(UserFormInputs.username,e.target.value);setUsername(e.target.value);};var handleProvinceChange=function handleProvinceChange(e){validate(UserFormInputs.province,e.target.value);setProvince(e.target.value);};var handleCityChange=function handleCityChange(e){validate(UserFormInputs.city,e.target.value);setCity(e.target.value);};var handlePasswordChange=function handlePasswordChange(e){validate(UserFormInputs.password,e.target.value);setPassword(e.target.value);};var handlePassword2Change=function handlePassword2Change(e){validate(UserFormInputs.password2,e.target.value);setPassword2(e.target.value);};var handleTypeChange=function handleTypeChange(e){setType(e.target.value);};var handlePaymentEmailChange=function handlePaymentEmailChange(e){validate(UserFormInputs.paymentEmail,e.target.value);paymentEmail=e.target.value;if(paymentEmail===''){console.log(\"Email is empty, set payment method to null\");setPaymentMethod(null);}else{setPaymentMethod({type:type,email:e.target.value});}};var handleChangeSubscriptionPlan=function handleChangeSubscriptionPlan(e){history.push('/pricing');};return/*#__PURE__*/_jsx(\"div\",{className:classes.layout,children:/*#__PURE__*/_jsx(\"form\",{autoComplete:\"off\",children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,_objectSpread({size:\"small\",required:true,id:\"username\",name:\"username\",value:username,onChange:handleUsernameChange,onBlur:handleUsernameChange,label:\"Username\",variant:\"outlined\",fullWidth:true},errors[UserFormInputs.username]&&{error:true,helperText:validationErrors[UserFormInputs.username]}))}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{size:\"small\",disabled:true,id:\"email\",name:\"email\",value:email,label:\"Email\",variant:\"outlined\",fullWidth:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,error:errors[UserFormInputs.province],children:[/*#__PURE__*/_jsx(InputLabel,{children:\"State/Province\"}),/*#__PURE__*/_jsxs(Select,{label:\"State/Province\",value:province,onChange:handleProvinceChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:'bavaria',children:\"Bavaria\"}),/*#__PURE__*/_jsx(MenuItem,{value:'lower-saxony',children:\"Lower Saxony\"}),/*#__PURE__*/_jsx(MenuItem,{value:'baden-wuerttemberg',children:\"Baden-W\\xFCrttemberg\"}),/*#__PURE__*/_jsx(MenuItem,{value:'north-rhine-westphalia',children:\"North Rhine-Westphalia\"})]}),/*#__PURE__*/_jsx(FormHelperText,{children:errors[UserFormInputs.province]&&validationErrors[UserFormInputs.province]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,error:errors[UserFormInputs.city],children:[/*#__PURE__*/_jsx(InputLabel,{children:\"City\"}),/*#__PURE__*/_jsx(Select,{label:\"City\",value:city,onChange:handleCityChange,children:cityOptions}),/*#__PURE__*/_jsx(FormHelperText,{children:errors[UserFormInputs.city]&&validationErrors[UserFormInputs.city]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,error:errors[UserFormInputs.province],children:/*#__PURE__*/_jsx(TextField,_objectSpread({size:\"small\",label:\"New Password\",fullWidth:true,value:password,onChange:handlePasswordChange,type:\"password\",variant:\"outlined\"},errors[UserFormInputs.password]&&{error:true,helperText:validationErrors[UserFormInputs.password]}))})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,error:errors[UserFormInputs.city],children:/*#__PURE__*/_jsx(TextField,_objectSpread({size:\"small\",label:\"Repeat new Password\",fullWidth:true,value:password2,onChange:handlePassword2Change,type:\"password\",variant:\"outlined\"},errors[UserFormInputs.password2]&&{error:true,helperText:validationErrors[UserFormInputs.password2]}))})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{size:\"small\",disabled:true,id:\"plan\",name:\"plan\",value:props.subscriptionPlan==='premium'?\"Premium\":\"Basic\",label:\"Pricing\",variant:\"outlined\",fullWidth:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:props.subscriptionPlan==='premium'?/*#__PURE__*/_jsx(Tooltip,{trigger:\"hover\",placement:\"top\",title:\"After your premium subscription ends your plan will be automatically switched to free.\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{style:{margin:'0 auto',display:\"flex\",pointerEvents:'none'},variant:\"contained\",color:\"secondary\",onClick:handleChangeSubscriptionPlan,disabled:props.subscriptionPlan==='premium',children:\"Adjust the plan\"})})}):/*#__PURE__*/_jsx(Button,{style:{margin:'0 auto',display:\"flex\"},variant:\"contained\",color:\"secondary\",onClick:handleChangeSubscriptionPlan,disabled:props.subscriptionPlan==='premium',children:\"Adjust the plan\"})})]}),/*#__PURE__*/_jsx(Divider,{variant:\"middle\",className:classes.divider}),/*#__PURE__*/_jsx(Typography,{className:classes.typography,variant:\"h6\",align:\"center\",style:{fontWeight:600},children:\"Payment method\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",spacing:3,item:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Payment type\"}),/*#__PURE__*/_jsx(Select,{label:\"Payment type\",value:type,onChange:handleTypeChange,children:/*#__PURE__*/_jsx(MenuItem,{value:'PayPal',children:\"PayPal\"})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(FormControl,{required:true,variant:\"outlined\",size:\"small\",fullWidth:true,error:errors[UserFormInputs.paymentEmail],children:/*#__PURE__*/_jsx(TextField,_objectSpread({size:\"small\",label:\"Payment Email\",fullWidth:true,value:paymentEmail,onChange:handlePaymentEmailChange,type:\"paymentEmail\",variant:\"outlined\"},errors[UserFormInputs.paymentEmail]&&{error:true,helperText:validationErrors[UserFormInputs.paymentEmail]}))})})]})]})})});}","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/UserForm.js"],"names":["React","useState","useHistory","makeStyles","FormControl","Grid","InputLabel","Button","MenuItem","Select","TextField","FormHelperText","Divider","Typography","EmailValidator","Tooltip","useStyles","theme","layout","flex","width","maxWidth","marginLeft","marginRight","paper","marginTop","spacing","marginBottom","padding","breakpoints","down","label","display","fontSize","fontWeight","title","justifyContent","alignItems","typography","margin","divider","typographyNotifications","UserFormInputs","username","province","city","password","password2","paymentEmail","provincesAndCities","bavaria","UserForm","usernameProp","emailProp","provinceProp","cityProp","passwordProp","password2Prop","paymentMethodProp","disableSaveProp","props","classes","history","setUsername","email","setEmail","setProvince","setCity","errors","setErrors","setPassword","setPassword2","paymentMethod","setPaymentMethod","type","setType","disableSave","setDisableSave","validationErrors","cityOptions","map","elem","validate","value","temp","values","Object","keys","key","every","element","handleUsernameChange","e","target","handleProvinceChange","handleCityChange","handlePasswordChange","handlePassword2Change","handleTypeChange","handlePaymentEmailChange","console","log","handleChangeSubscriptionPlan","push","error","helperText","subscriptionPlan","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Grid, InputLabel, Button, MenuItem, Select, TextField, FormHelperText, Divider, Typography } from '@material-ui/core';\nimport * as EmailValidator from 'email-validator';\nimport { Tooltip } from 'antd';\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        flex: 1,\n        width: 'auto',\n        maxWidth: '80%',\n        marginLeft: '10%',\n        marginRight: '10%',\n    },\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(3),\n            marginBottom: theme.spacing(3),\n            padding: theme.spacing(2),\n        },\n    },\n    label: {\n        display: 'flex',\n        fontSize: 16,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    title: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 22,\n        fontWeight: 500,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    typography: {\n        margin: theme.spacing(2),\n        marginTop: theme.spacing(6),\n    },\n    divider: {\n        margin: theme.spacing(3),\n    },\n    typographyNotifications: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n}));\n\n// define types for error handling\nconst UserFormInputs = {\n    username: 'username',\n    province: 'province',\n    city: 'city',\n    password: 'password',\n    password2: 'password2',\n    paymentEmail: 'paymentEmail',\n};\n\nconst provincesAndCities = {\n    bavaria: ['Munich', 'Nuremberg', 'Augsburg', 'Regensburg', 'Ingolstadt', 'Würzburg'],\n    'lower-saxony': ['Hanover', 'Braunschweig', 'Oldenburg', 'Osnabrück', 'Wolfsburg', 'Göttingen'],\n    'baden-wuerttemberg': ['Stuttgart', 'Karlsruhe', 'Mannheim', 'Freiburg im Breisgau', 'Heidelberg', 'Ulm'],\n    'north-rhine-westphalia': ['Cologne', 'Düsseldorf', 'Dortmund', 'Essen', 'Duisburg', 'Bochum'],\n};\n\nexport default function UserForm({ usernameProp, emailProp, provinceProp, cityProp, passwordProp, password2Prop, paymentMethodProp, disableSaveProp, ...props }) {\n    const classes = useStyles();\n    const history = useHistory();\n    const { username, setUsername } = usernameProp;\n    const { email, setEmail } = emailProp;\n    const { province, setProvince } = provinceProp;\n    const { city, setCity } = cityProp;\n    const [errors, setErrors] = useState({ username: false, province: false, city: false, password: false, password2: false, paymentEmail: false });\n    const { password, setPassword } = passwordProp;\n    const { password2, setPassword2 } = password2Prop;\n    const { paymentMethod, setPaymentMethod } = paymentMethodProp;\n    const [type, setType] = React.useState('PayPal');\n    const { disableSave, setDisableSave } = disableSaveProp;\n    var paymentEmail = paymentMethod ? paymentMethod.email : '';\n\n    const validationErrors = {\n        username: 'Userame is required',\n        province: 'Province is required',\n        city: 'City is required',\n        password: 'The passwords should be the same',\n        password2: 'The passwords should be the same',\n        paymentEmail: 'Email is not valid',\n    };\n\n    let cityOptions = null;\n\n    if (province) {\n        cityOptions = provincesAndCities[province].map((elem) => (\n            <MenuItem key={elem} value={elem}>\n                {elem}\n            </MenuItem>\n        ));\n    }\n\n    // validate fields\n    const validate = (type, value) => {\n        let temp = { ...errors };\n        if (type !== UserFormInputs.password && type !== UserFormInputs.password2 && value === '') {\n            temp[type] = true;\n        } else {\n            temp[type] = false;\n        }\n\n        if (type === UserFormInputs.password2) {\n            if (value !== '' && value !== password) {\n                temp[type] = true;\n                temp[UserFormInputs.password] = true;\n            } else {\n                temp[type] = false;\n                temp[UserFormInputs.password] = false;\n            }\n        }\n\n        if (type === UserFormInputs.paymentEmail) {\n            if (value !== '' && !EmailValidator.validate(value)) {\n                temp[type] = true;\n            } else {\n                temp[type] = false;\n            }\n        }\n\n        let values = Object.keys(temp).map(function (key) {\n            return temp[key];\n        });\n\n        if (values.every(element => element === false)) {\n            setDisableSave(false);\n        } else {\n            setDisableSave(true);\n        }\n        setErrors({ ...temp });\n    };\n\n    // handle variable changes\n    const handleUsernameChange = (e) => {\n        validate(UserFormInputs.username, e.target.value);\n        setUsername(e.target.value);\n    };\n    const handleProvinceChange = (e) => {\n        validate(UserFormInputs.province, e.target.value);\n        setProvince(e.target.value);\n    };\n    const handleCityChange = (e) => {\n        validate(UserFormInputs.city, e.target.value);\n        setCity(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        validate(UserFormInputs.password, e.target.value);\n        setPassword(e.target.value);\n    };\n\n    const handlePassword2Change = (e) => {\n        validate(UserFormInputs.password2, e.target.value);\n        setPassword2(e.target.value);\n    };\n\n    const handleTypeChange = (e) => {\n        setType(e.target.value);\n    };\n\n    const handlePaymentEmailChange = (e) => {\n        validate(UserFormInputs.paymentEmail, e.target.value);\n        paymentEmail = e.target.value;\n        if (paymentEmail === '') {\n            console.log(\"Email is empty, set payment method to null\");\n            setPaymentMethod(null);\n        } else {\n            setPaymentMethod({ type: type, email: e.target.value });\n        }\n    }\n\n    const handleChangeSubscriptionPlan = (e) => {\n        history.push('/pricing');\n    };\n\n\n    return (\n        <div className={classes.layout}>\n            <form autoComplete=\"off\">\n                <React.Fragment>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                size=\"small\"\n                                required\n                                id=\"username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={handleUsernameChange}\n                                onBlur={handleUsernameChange}\n                                label=\"Username\"\n                                variant=\"outlined\"\n                                fullWidth\n                                {...(errors[UserFormInputs.username] && { error: true, helperText: validationErrors[UserFormInputs.username] })}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                size=\"small\"\n                                disabled\n                                id=\"email\"\n                                name=\"email\"\n                                value={email}\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.province]}>\n                                <InputLabel>State/Province</InputLabel>\n                                <Select label=\"State/Province\" value={province} onChange={handleProvinceChange}>\n                                    <MenuItem value={'bavaria'}>Bavaria</MenuItem>\n                                    <MenuItem value={'lower-saxony'}>Lower Saxony</MenuItem>\n                                    <MenuItem value={'baden-wuerttemberg'}>Baden-Württemberg</MenuItem>\n                                    <MenuItem value={'north-rhine-westphalia'}>North Rhine-Westphalia</MenuItem>\n                                </Select>\n                                <FormHelperText>{errors[UserFormInputs.province] && validationErrors[UserFormInputs.province]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.city]}>\n                                <InputLabel>City</InputLabel>\n                                <Select label=\"City\" value={city} onChange={handleCityChange}>\n                                    {cityOptions}\n                                </Select>\n                                <FormHelperText>{errors[UserFormInputs.city] && validationErrors[UserFormInputs.city]}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.province]}>\n                                <TextField\n                                    size=\"small\"\n                                    label=\"New Password\"\n                                    fullWidth\n                                    value={password}\n                                    onChange={handlePasswordChange}\n                                    type=\"password\"\n                                    variant=\"outlined\"\n                                    {...(errors[UserFormInputs.password] && { error: true, helperText: validationErrors[UserFormInputs.password] })} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.city]}>\n                                <TextField\n                                    size=\"small\"\n                                    label=\"Repeat new Password\"\n                                    fullWidth\n                                    value={password2}\n                                    onChange={handlePassword2Change}\n                                    type=\"password\"\n                                    variant=\"outlined\"\n                                    {...(errors[UserFormInputs.password2] && { error: true, helperText: validationErrors[UserFormInputs.password2] })} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                size=\"small\"\n                                disabled\n                                id=\"plan\"\n                                name=\"plan\"\n                                value={props.subscriptionPlan === 'premium' ? \"Premium\" : \"Basic\"}\n                                label=\"Pricing\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            {props.subscriptionPlan === 'premium' ?\n                                <Tooltip trigger=\"hover\" placement=\"top\" title={\"After your premium subscription ends your plan will be automatically switched to free.\"}>\n                                    <div>\n                                        <Button style={{ margin: '0 auto', display: \"flex\", pointerEvents: 'none' }} variant=\"contained\" color=\"secondary\" onClick={handleChangeSubscriptionPlan} disabled={props.subscriptionPlan === 'premium'}>\n                                            Adjust the plan\n                                        </Button>\n                                    </div>\n                                </Tooltip>\n                                : <Button style={{ margin: '0 auto', display: \"flex\" }} variant=\"contained\" color=\"secondary\" onClick={handleChangeSubscriptionPlan} disabled={props.subscriptionPlan === 'premium'}>\n                                    Adjust the plan\n                                </Button>}\n                        </Grid>\n                    </Grid>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Typography className={classes.typography} variant=\"h6\" align=\"center\" style={{ fontWeight: 600 }}>\n                        Payment method\n                    </Typography>\n                    <Grid container direction=\"row\" spacing={3} item>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                                <InputLabel>Payment type</InputLabel>\n                                <Select label=\"Payment type\" value={type} onChange={handleTypeChange}>\n                                    <MenuItem value={'PayPal'}>PayPal</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl required variant=\"outlined\" size=\"small\" fullWidth error={errors[UserFormInputs.paymentEmail]}>\n                                <TextField\n                                    size=\"small\"\n                                    label=\"Payment Email\"\n                                    fullWidth value={paymentEmail}\n                                    onChange={handlePaymentEmailChange}\n                                    type=\"paymentEmail\"\n                                    variant=\"outlined\"\n                                    {...(errors[UserFormInputs.paymentEmail] && { error: true, helperText: validationErrors[UserFormInputs.paymentEmail] })} />\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </React.Fragment>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}