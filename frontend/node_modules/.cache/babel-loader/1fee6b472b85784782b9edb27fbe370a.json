{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'antd/dist/antd.css';import{Upload}from'antd';import{UploadOutlined}from'@ant-design/icons';import{sha256}from'js-sha256';import{Button}from'@material-ui/core';import{connect,useDispatch}from'react-redux';import{usePetCompetitions,usePetDocuments}from'helper/hooks/pets.hooks';import{useUser}from'helper/hooks/auth.hooks';import{updateCompetitionsToUpload,updateDocumentsToUpload}from'redux/actions';import{UPLOAD_STATUS}from'helper/types';import{jsx as _jsx}from\"react/jsx-runtime\";var prepareCompetitions=function prepareCompetitions(competitions){var arr=competitions;arr.map(function(value,index){value.key=index;value.date=new Date(value.date);return value;});return arr;};var prepareDocumentsFileList=function prepareDocumentsFileList(petDocuments){var petList=[];petDocuments===null||petDocuments===void 0?void 0:petDocuments.forEach(function(value,index){petList.push({uid:index,name:value.name,status:UPLOAD_STATUS.DONE,url:value.url});});return petList;};var prepareCompetitionsFileList=function prepareCompetitionsFileList(petCompetitions,key){var competitions=prepareCompetitions(petCompetitions);var petList=[];competitions.forEach(function(value,index){if(value.key===key){if(value.certificate){petList.push({uid:index,name:value.certificate.name,status:UPLOAD_STATUS.DONE,url:value.certificate.url});}}});return petList;};/**\n *\n * @param  props\n * @returns Component to upload pet documents or certificates\n */var DocumentsUpload=function DocumentsUpload(props){var dispatch=useDispatch();var mode=props.mode;var isCompetition=props.type==='competitions';var key=isCompetition?props.competitionId:null;// get global states\nvar user=useUser();var petDocuments=usePetDocuments();var petCompetitions=usePetCompetitions();var _useState=useState(mode==='add'?[]:isCompetition?prepareCompetitionsFileList(petCompetitions,key):prepareDocumentsFileList(petDocuments)),_useState2=_slicedToArray(_useState,2),fileList=_useState2[0],setFileList=_useState2[1];var pathPrefix=\"users/\".concat(user.id,\"/pets/documents\");var maxFileNumber=props.maxFiles||8;// update file list\nvar handleChange=function handleChange(_ref){var fileList=_ref.fileList;return setFileList(fileList);};// upload image\nvar customUpload=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var docName,imgPath,newData,competitionData,docs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:docName=sha256(data.file.name);//a unique name for the image\n/** Firebase storage structure\n         * -| users\n         *   -| userId\n         *     -| pets\n         *      -| documents\n         */imgPath=\"\".concat(pathPrefix,\"/\").concat(docName);newData={name:data.file.name,type:data.file.type,path:imgPath,url:undefined,uploadDate:new Date(),verified:false,data:data,status:UPLOAD_STATUS.UPLOAD};if(isCompetition){competitionData=_toConsumableArray(petCompetitions);competitionData.map(function(item,index){if(item.key===key){item.certificate=newData;return item;}return item;});dispatch(updateCompetitionsToUpload(competitionData));}else{docs=[].concat(_toConsumableArray(petDocuments),[newData]);dispatch(updateDocumentsToUpload(docs));}data.onSuccess(null);case 5:case\"end\":return _context.stop();}}},_callee);}));return function customUpload(_x){return _ref2.apply(this,arguments);};}();// remove document\nvar handleRemove=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file){var competitionData,docData,docObj;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// remove competition\nif(isCompetition){competitionData=_toConsumableArray(petCompetitions);competitionData.map(function(item,index){if(item.key===key){if(file.url){// set status delete to remove it later onSave from firebase\nif(item.certificates){var toDelete=item.certificate;toDelete.status=UPLOAD_STATUS.DELETE;item.certificates.push(toDelete);}else{item.certificates=[item.certificate];}}item.certificate=undefined;}return item;});dispatch(updateCompetitionsToUpload(competitionData));// remove document\n}else{docData=_toConsumableArray(petDocuments);if(file.url){// set status delete to remove it later onSave from firebase\ndocData.map(function(value){return value.name===file.name?value.status=UPLOAD_STATUS.DELETE:value;});dispatch(updateDocumentsToUpload(docData));}else{docObj=docData.filter(function(value){return value.name!==file.name;});dispatch(updateDocumentsToUpload(docObj));}}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function handleRemove(_x2){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Upload,{listType:\"text\",fileList:fileList,onChange:handleChange,customRequest:customUpload,onRemove:handleRemove,children:fileList.length>=maxFileNumber?null:/*#__PURE__*/_jsx(Button,{size:props.size||'medium',variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"Upload\"})})});};export default connect()(DocumentsUpload);","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/upload/documents.upload.js"],"names":["React","useState","Upload","UploadOutlined","sha256","Button","connect","useDispatch","usePetCompetitions","usePetDocuments","useUser","updateCompetitionsToUpload","updateDocumentsToUpload","UPLOAD_STATUS","prepareCompetitions","competitions","arr","map","value","index","key","date","Date","prepareDocumentsFileList","petDocuments","petList","forEach","push","uid","name","status","DONE","url","prepareCompetitionsFileList","petCompetitions","certificate","DocumentsUpload","props","dispatch","mode","isCompetition","type","competitionId","user","fileList","setFileList","pathPrefix","id","maxFileNumber","maxFiles","handleChange","customUpload","data","docName","file","imgPath","newData","path","undefined","uploadDate","verified","UPLOAD","competitionData","item","docs","onSuccess","handleRemove","certificates","toDelete","DELETE","docData","docObj","filter","length","size"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { sha256 } from 'js-sha256';\nimport { Button } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport { usePetCompetitions, usePetDocuments } from 'helper/hooks/pets.hooks';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { updateCompetitionsToUpload, updateDocumentsToUpload } from 'redux/actions';\nimport { UPLOAD_STATUS } from 'helper/types';\n\nconst prepareCompetitions = (competitions) => {\n    let arr = competitions;\n    arr.map((value, index) => {\n        value.key = index;\n        value.date = new Date(value.date);\n        return value;\n    });\n    return arr;\n};\n\nconst prepareDocumentsFileList = (petDocuments) => {\n    let petList = [];\n    petDocuments?.forEach((value, index) => {\n        petList.push({\n            uid: index,\n            name: value.name,\n            status: UPLOAD_STATUS.DONE,\n            url: value.url,\n        });\n    });\n    return petList;\n};\n\nconst prepareCompetitionsFileList = (petCompetitions, key) => {\n    const competitions = prepareCompetitions(petCompetitions);\n    let petList = [];\n    competitions.forEach((value, index) => {\n        if (value.key === key) {\n            if (value.certificate) {\n                petList.push({\n                    uid: index,\n                    name: value.certificate.name,\n                    status: UPLOAD_STATUS.DONE,\n                    url: value.certificate.url,\n                });\n            }\n        }\n    });\n    return petList;\n};\n\n/**\n *\n * @param  props\n * @returns Component to upload pet documents or certificates\n */\n\nconst DocumentsUpload = (props) => {\n    const dispatch = useDispatch();\n    const { mode } = props;\n    const isCompetition = props.type === 'competitions';\n    let key = isCompetition ? props.competitionId : null;\n\n    // get global states\n    const user = useUser();\n    const petDocuments = usePetDocuments();\n    const petCompetitions = usePetCompetitions();\n\n    const [fileList, setFileList] = useState(mode === 'add' ? [] : isCompetition ? prepareCompetitionsFileList(petCompetitions, key) : prepareDocumentsFileList(petDocuments));\n\n    const pathPrefix = `users/${user.id}/pets/documents`;\n    let maxFileNumber = props.maxFiles || 8;\n\n    // update file list\n    const handleChange = ({ fileList }) => setFileList(fileList);\n\n    // upload image\n    const customUpload = async (data) => {\n        const docName = sha256(data.file.name); //a unique name for the image\n\n        /** Firebase storage structure\n         * -| users\n         *   -| userId\n         *     -| pets\n         *      -| documents\n         */\n        const imgPath = `${pathPrefix}/${docName}`;\n\n        const newData = {\n            name: data.file.name,\n            type: data.file.type,\n            path: imgPath,\n            url: undefined,\n            uploadDate: new Date(),\n            verified: false,\n            data: data,\n            status: UPLOAD_STATUS.UPLOAD,\n        };\n\n        if (isCompetition) {\n            let competitionData = [...petCompetitions];\n            competitionData.map((item, index) => {\n                if (item.key === key) {\n                    item.certificate = newData;\n                    return item;\n                }\n                return item;\n            });\n            dispatch(updateCompetitionsToUpload(competitionData));\n        } else {\n            let docs = [...petDocuments, newData];\n            dispatch(updateDocumentsToUpload(docs));\n        }\n\n        data.onSuccess(null);\n    };\n\n    // remove document\n    const handleRemove = async (file) => {\n        // remove competition\n        if (isCompetition) {\n            let competitionData = [...petCompetitions];\n            competitionData.map((item, index) => {\n                if (item.key === key) {\n                    if (file.url) {\n                        // set status delete to remove it later onSave from firebase\n                        if (item.certificates) {\n                            let toDelete = item.certificate;\n                            toDelete.status = UPLOAD_STATUS.DELETE;\n                            item.certificates.push(toDelete);\n                        } else {\n                            item.certificates = [item.certificate];\n                        }\n                    }\n                    item.certificate = undefined;\n                }\n                return item;\n            });\n\n            dispatch(updateCompetitionsToUpload(competitionData));\n            // remove document\n        } else {\n            let docData = [...petDocuments];\n\n            if (file.url) {\n                // set status delete to remove it later onSave from firebase\n                docData.map((value) => (value.name === file.name ? (value.status = UPLOAD_STATUS.DELETE) : value));\n                dispatch(updateDocumentsToUpload(docData));\n            } else {\n                let docObj = docData.filter((value) => value.name !== file.name);\n                dispatch(updateDocumentsToUpload(docObj));\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Upload listType=\"text\" fileList={fileList} onChange={handleChange} customRequest={customUpload} onRemove={handleRemove}>\n                {fileList.length >= maxFileNumber ? null : (\n                    <Button size={props.size || 'medium'} variant=\"outlined\" color=\"primary\" startIcon={<UploadOutlined />}>\n                        Upload\n                    </Button>\n                )}\n            </Upload>\n        </div>\n    );\n};\n\nexport default connect()(DocumentsUpload);\n"]},"metadata":{},"sourceType":"module"}