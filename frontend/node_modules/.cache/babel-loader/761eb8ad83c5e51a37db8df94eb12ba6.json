{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom'; // components import\n\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\nimport Loading from '../components/Loading'; // helper imports\n\nimport { isObjEmpty } from 'helper/helpers';\nimport { usePet } from 'helper/hooks';\nimport PremiumBanner from 'components/PremiumBanner';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\nimport { showPremiumBanner } from 'helper/helpers';\nimport { getUser } from 'redux/actions';\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PetProfileView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const loggedInUser = useLoggedInUser(); // get id of pet from URL\n\n  const petId = location.pathname.split('/pet/')[1];\n  const selectedPet = usePet();\n  useEffect(() => {\n    if (selectedPet) {\n      dispatch(getUser(selectedPet.ownerId));\n    }\n  }, [dispatch, selectedPet]);\n  return isObjEmpty(selectedPet) ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this) : selectedPet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showPremiumBanner(loggedInUser) ? /*#__PURE__*/_jsxDEV(PremiumBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 48\n    }, this) : null, /*#__PURE__*/_jsxDEV(PetProfileComponent, {\n      id: petId,\n      officialName: selectedPet.officialName,\n      nickname: selectedPet.nickname,\n      age: selectedPet.age,\n      sex: selectedPet.sex,\n      price: selectedPet.price,\n      profilePicture: selectedPet.profilePicture,\n      pictures: selectedPet.pictures,\n      breed: selectedPet.breed,\n      species: selectedPet.species,\n      documents: selectedPet.documents,\n      competitions: selectedPet.competitions,\n      ownerId: selectedPet.ownerId,\n      purchased: selectedPet.purchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : null;\n} // connect() establishes allows the usage of redux functionality\n\n\n_s(PetProfileView, \"4IoXz9Kc7LzxDc/0BKDgeTFXwQs=\", false, function () {\n  return [useDispatch, useLocation, useLoggedInUser, usePet];\n});\n\n_c = PetProfileView;\nexport default connect()(PetProfileView);\n\nvar _c;\n\n$RefreshReg$(_c, \"PetProfileView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/PetProfileView.js"],"names":["React","useEffect","connect","useDispatch","useLocation","PetProfileComponent","Loading","isObjEmpty","usePet","PremiumBanner","useLoggedInUser","showPremiumBanner","getUser","PetProfileView","props","dispatch","location","loggedInUser","petId","pathname","split","selectedPet","ownerId","officialName","nickname","age","sex","price","profilePicture","pictures","breed","species","documents","competitions","purchased"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA;AACA;AACA;AACA;;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,YAAY,GAAGP,eAAe,EAApC,CAH2B,CAK3B;;AACA,QAAMQ,KAAK,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,OAAxB,EAAiC,CAAjC,CAAd;AACA,QAAMC,WAAW,GAAGb,MAAM,EAA1B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,WAAJ,EAAiB;AACbN,MAAAA,QAAQ,CAACH,OAAO,CAACS,WAAW,CAACC,OAAb,CAAR,CAAR;AACH;AACJ,GAJQ,EAIN,CAACP,QAAD,EAAWM,WAAX,CAJM,CAAT;AAMA,SAAOd,UAAU,CAACc,WAAD,CAAV,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,GAEHA,WAAW,gBACX;AAAA,eACKV,iBAAiB,CAACM,YAAD,CAAjB,gBAAkC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAlC,GAAsD,IAD3D,eAEI,QAAC,mBAAD;AACI,MAAA,EAAE,EAAEC,KADR;AAEI,MAAA,YAAY,EAAEG,WAAW,CAACE,YAF9B;AAGI,MAAA,QAAQ,EAAEF,WAAW,CAACG,QAH1B;AAII,MAAA,GAAG,EAAEH,WAAW,CAACI,GAJrB;AAKI,MAAA,GAAG,EAAEJ,WAAW,CAACK,GALrB;AAMI,MAAA,KAAK,EAAEL,WAAW,CAACM,KANvB;AAOI,MAAA,cAAc,EAAEN,WAAW,CAACO,cAPhC;AAQI,MAAA,QAAQ,EAAEP,WAAW,CAACQ,QAR1B;AASI,MAAA,KAAK,EAAER,WAAW,CAACS,KATvB;AAUI,MAAA,OAAO,EAAET,WAAW,CAACU,OAVzB;AAWI,MAAA,SAAS,EAAEV,WAAW,CAACW,SAX3B;AAYI,MAAA,YAAY,EAAEX,WAAW,CAACY,YAZ9B;AAaI,MAAA,OAAO,EAAEZ,WAAW,CAACC,OAbzB;AAcI,MAAA,SAAS,EAAED,WAAW,CAACa;AAd3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADW,GAoBX,IAtBJ;AAuBH,C,CAED;;;GAxCSrB,c;UACYV,W,EACAC,W,EACIM,e,EAIDF,M;;;KAPfK,c;AAyCT,eAAeX,OAAO,GAAGW,cAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n// components import\r\nimport PetProfileComponent from '../components/pet-profile/PetProfileComponent';\r\nimport Loading from '../components/Loading';\r\n// helper imports\r\nimport { isObjEmpty } from 'helper/helpers';\r\nimport { usePet } from 'helper/hooks';\r\nimport PremiumBanner from 'components/PremiumBanner';\r\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\r\nimport { showPremiumBanner } from 'helper/helpers';\r\nimport { getUser } from 'redux/actions';\r\n\r\n/**\r\n * Manages the process of getting pet details data\r\n * @param {props} props\r\n */\r\n\r\nfunction PetProfileView(props) {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const loggedInUser = useLoggedInUser();\r\n\r\n    // get id of pet from URL\r\n    const petId = location.pathname.split('/pet/')[1];\r\n    const selectedPet = usePet();\r\n\r\n    useEffect(() => {\r\n        if (selectedPet) {\r\n            dispatch(getUser(selectedPet.ownerId));\r\n        }\r\n    }, [dispatch, selectedPet]);\r\n\r\n    return isObjEmpty(selectedPet) ? (\r\n        <Loading />\r\n    ) : selectedPet ? (\r\n        <>\r\n            {showPremiumBanner(loggedInUser) ? <PremiumBanner /> : null}\r\n            <PetProfileComponent\r\n                id={petId}\r\n                officialName={selectedPet.officialName}\r\n                nickname={selectedPet.nickname}\r\n                age={selectedPet.age}\r\n                sex={selectedPet.sex}\r\n                price={selectedPet.price}\r\n                profilePicture={selectedPet.profilePicture}\r\n                pictures={selectedPet.pictures}\r\n                breed={selectedPet.breed}\r\n                species={selectedPet.species}\r\n                documents={selectedPet.documents}\r\n                competitions={selectedPet.competitions}\r\n                ownerId={selectedPet.ownerId}\r\n                purchased={selectedPet.purchased}\r\n            />\r\n        </>\r\n    ) : null;\r\n}\r\n\r\n// connect() establishes allows the usage of redux functionality\r\nexport default connect()(PetProfileView);\r\n"]},"metadata":{},"sourceType":"module"}