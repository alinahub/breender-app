{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{NotificationService}from'services';import PetService from'../../services/PetService';var PetTypes={GET_PETS:'GET_PETS',DELETE_PET:'DELETE_PET',UPDATE_PET:'UPDATE_PET',ADD_PET:'ADD_PET',GET_PET:'GET_PET',UPDATE_SELECTED_PET:'UPDATE_SELECTED_PET',UPDATE_PROFILE_PICTURE:'UPDATE_PROFILE_PICTURE',CLEAR_PET:'CLEAR_PET'};export var getPets=function getPets(species,sex,breed,age,page){var showOwn=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var user=arguments.length>6?arguments[6]:undefined;// when the backend call was successfull and the pets are retrieved\n// in the dispatcher the pets will be added to the global state\nfunction onSuccess(pets,totalPages){return{type:PetTypes.GET_PETS,pets:pets};}// when the backend call was failed\nfunction onFailure(error){// error handling\nconsole.log('failed to get the pets',error);}return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var pets;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return PetService.getPets(species,sex,breed,age,page,showOwn,user);case 3:pets=_context.sent;// call onSuccess in context of redux\ndispatch(onSuccess(pets,pets.totalPages));_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);onFailure(_context.t0);NotificationService.notify('error','Error','Retrieve of the pets failed. Please try again.');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var deletePet=function deletePet(id){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var deletePetAction=function deletePetAction(){onSuccess();return{type:PetTypes.DELETE_PET};};var onFailure=function onFailure(error){onError();console.log('Error while deleting a pet',error);};return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var pet;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return PetService.deletePet(id);case 3:pet=_context2.sent;dispatch(deletePetAction());_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);onFailure(_context2.t0);NotificationService.notify('error','Deletion Error','During deletion occurred an error. Please try again.');case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var addPet=function addPet(pet){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var addPetAction=function addPetAction(){onSuccess();return{type:PetTypes.ADD_PET};};var onFailure=function onFailure(err){onError(err);};return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return PetService.createPet(pet).then(function(){dispatch(addPetAction());}).catch(function(e){switch(e.status){case 400:NotificationService.notify('warning','Warning',e.data.message);break;default:onFailure(e.data.message);break;}});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var changePet=function changePet(changedPet){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var changePetAction=function changePetAction(pet){onSuccess();return{type:PetTypes.UPDATE_PET,pet:pet};};var onFailure=function onFailure(error){onError();};return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var pet;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return PetService.updatePet(changedPet);case 3:pet=_context4.sent;dispatch(changePetAction(pet));_context4.next=16;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);_context4.t1=_context4.t0.status;_context4.next=_context4.t1===400?12:14;break;case 12:NotificationService.notify('warning','Warning',_context4.t0.data.message);return _context4.abrupt(\"break\",16);case 14:onFailure(_context4.t0.data.message);return _context4.abrupt(\"break\",16);case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var getPet=function getPet(id){var getPetAction=function getPetAction(pet){return{type:PetTypes.GET_PET,pet:pet};};var onFailure=function onFailure(error){console.log('Failed to load a pet',error);};return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var pet;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return PetService.getPet(id);case 3:pet=_context5.sent;dispatch(getPetAction(pet));_context5.next=11;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);onFailure(_context5.t0);NotificationService.notify('error','Error','Failed to get a pet. Please try again.');case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function(_x5,_x6){return _ref5.apply(this,arguments);};}();};export var updateSelectedPet=function updateSelectedPet(pet){var updatePetAction=function updatePetAction(pet){return{type:PetTypes.UPDATE_SELECTED_PET,pet:pet};};var onFailure=function onFailure(error){console.log('Failed to update pet',error);};return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:try{dispatch(updatePetAction(pet));}catch(e){onFailure(e);}case 1:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x7,_x8){return _ref6.apply(this,arguments);};}();};export var clearPet=function clearPet(){var clearPetAction=function clearPetAction(){return{type:PetTypes.CLEAR_PET,pet:{}};};var onFailure=function onFailure(error){console.log('Failed to clear a pet',error);};return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:try{dispatch(clearPetAction());}catch(e){onFailure(e);NotificationService.notify('error','Error','Failed to clear a pet. Please try again.');}case 1:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x9,_x10){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/redux/actions/petActions.js"],"names":["NotificationService","PetService","PetTypes","GET_PETS","DELETE_PET","UPDATE_PET","ADD_PET","GET_PET","UPDATE_SELECTED_PET","UPDATE_PROFILE_PICTURE","CLEAR_PET","getPets","species","sex","breed","age","page","showOwn","user","onSuccess","pets","totalPages","type","onFailure","error","console","log","dispatch","notify","deletePet","id","onError","err","deletePetAction","pet","addPet","addPetAction","createPet","then","catch","e","status","data","message","changePet","changedPet","changePetAction","updatePet","getPet","getPetAction","getState","updateSelectedPet","updatePetAction","clearPet","clearPetAction"],"mappings":"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","sourcesContent":["import { NotificationService } from 'services';\nimport PetService from '../../services/PetService';\n\nconst PetTypes = {\n    GET_PETS: 'GET_PETS',\n    DELETE_PET: 'DELETE_PET',\n    UPDATE_PET: 'UPDATE_PET',\n    ADD_PET: 'ADD_PET',\n    GET_PET: 'GET_PET',\n    UPDATE_SELECTED_PET: 'UPDATE_SELECTED_PET',\n    UPDATE_PROFILE_PICTURE: 'UPDATE_PROFILE_PICTURE',\n    CLEAR_PET: 'CLEAR_PET',\n};\n\nexport const getPets = (species, sex, breed, age, page, showOwn = false, user) => {\n    // when the backend call was successfull and the pets are retrieved\n    // in the dispatcher the pets will be added to the global state\n    function onSuccess(pets, totalPages) {\n        return { type: PetTypes.GET_PETS, pets: pets };\n    }\n    // when the backend call was failed\n    function onFailure(error) {\n        // error handling\n        console.log('failed to get the pets', error);\n    }\n\n    return async (dispatch) => {\n        try {\n            // ask for the pets in the backend\n            let pets = await PetService.getPets(species, sex, breed, age, page, showOwn, user);\n            // call onSuccess in context of redux\n            dispatch(onSuccess(pets, pets.totalPages));\n        } catch (e) {\n            onFailure(e);\n            NotificationService.notify('error', 'Error', 'Retrieve of the pets failed. Please try again.');\n        }\n    };\n};\n\nexport const deletePet = (id, onSuccess = () => null, onError = (err) => null) => {\n    const deletePetAction = () => {\n        onSuccess();\n        return { type: PetTypes.DELETE_PET };\n    };\n    const onFailure = (error) => {\n        onError();\n        console.log('Error while deleting a pet', error);\n    };\n\n    return async (dispatch) => {\n        try {\n            let pet = await PetService.deletePet(id);\n            dispatch(deletePetAction());\n        } catch (e) {\n            onFailure(e);\n            NotificationService.notify('error', 'Deletion Error', 'During deletion occurred an error. Please try again.');\n        }\n    };\n};\n\nexport const addPet = (pet, onSuccess = () => null, onError = (err) => null) => {\n    const addPetAction = () => {\n        onSuccess();\n        return { type: PetTypes.ADD_PET };\n    };\n    const onFailure = (err) => {\n        onError(err);\n    };\n\n    return async (dispatch) => {\n        await PetService.createPet(pet)\n            .then(() => {\n                dispatch(addPetAction());\n            })\n            .catch((e) => {\n                switch (e.status) {\n                    case 400:\n                        NotificationService.notify('warning', 'Warning', e.data.message);\n                        break;\n                    default:\n                        onFailure(e.data.message);\n                        break;\n                }\n            });\n    };\n};\n\nexport const changePet = (changedPet, onSuccess = () => null, onError = (err) => null) => {\n    const changePetAction = (pet) => {\n        onSuccess();\n        return { type: PetTypes.UPDATE_PET, pet: pet };\n    };\n\n    const onFailure = (error) => {\n        onError();\n    };\n\n    return async (dispatch) => {\n        try {\n            let pet = await PetService.updatePet(changedPet);\n            dispatch(changePetAction(pet));\n        } catch (e) {\n            switch (e.status) {\n                case 400:\n                    NotificationService.notify('warning', 'Warning', e.data.message);\n                    break;\n                default:\n                    onFailure(e.data.message);\n                    break;\n            }\n        }\n    };\n};\n\nexport const getPet = (id) => {\n    const getPetAction = (pet) => {\n        return { type: PetTypes.GET_PET, pet: pet };\n    };\n    const onFailure = (error) => {\n        console.log('Failed to load a pet', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            let pet = await PetService.getPet(id);\n            dispatch(getPetAction(pet));\n        } catch (e) {\n            onFailure(e);\n            NotificationService.notify('error', 'Error', 'Failed to get a pet. Please try again.');\n        }\n    };\n};\n\nexport const updateSelectedPet = (pet) => {\n    const updatePetAction = (pet) => {\n        return { type: PetTypes.UPDATE_SELECTED_PET, pet: pet };\n    };\n    const onFailure = (error) => {\n        console.log('Failed to update pet', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            dispatch(updatePetAction(pet));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const clearPet = () => {\n    const clearPetAction = () => {\n        return { type: PetTypes.CLEAR_PET, pet: {} };\n    };\n    const onFailure = (error) => {\n        console.log('Failed to clear a pet', error);\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            dispatch(clearPetAction());\n        } catch (e) {\n            onFailure(e);\n            NotificationService.notify('error', 'Error', 'Failed to clear a pet. Please try again.');\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}