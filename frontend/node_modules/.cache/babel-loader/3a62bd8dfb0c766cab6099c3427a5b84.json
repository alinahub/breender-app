{"ast":null,"code":"import _slicedToArray from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import{Paper,Button,TextField,Typography}from'@material-ui/core';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{userLoginRoot:{margin:'auto'},loginPaper:{width:'500px',padding:theme.spacing(4)},loginRow:{paddingTop:theme.spacing(1),paddingBottom:theme.spacing(1),'&:last-child':{paddingBottom:theme.spacing(0)},'&:first-child':{paddingTop:theme.spacing(0)}},loginButtons:{display:'flex',justifyContent:'space-between',color:'secondary'},loginButton:{marginLeft:theme.spacing(1),color:'secondary'}};});/**\n * For user login\n * @param {props} props\n */function LoginComponent(props){var classes=useStyles();var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),username=_React$useState2[0],setUsername=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),password=_React$useState4[0],setPassword=_React$useState4[1];//set to false when component is rendered for the first time in order to skip error message from previous login\nvar _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),rendered=_React$useState6[0],setRendered=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),loginError=_React$useState8[0],setLoginError=_React$useState8[1];useEffect(function(){if(props.user.error){if(rendered){//if component is rendered for the 2. or more times, show new error\nsetLoginError(props.user.error);}}else{setLoginError('');}},[props.user]);var onLogin=function onLogin(e){e.preventDefault();props.onLogin(username,password);setRendered(true);//set to true when user tries to login for the first time\n};var onChangeUsername=function onChangeUsername(e){setUsername(e.target.value);setLoginError('');};var onChangePassword=function onChangePassword(e){setPassword(e.target.value);setLoginError('');};return/*#__PURE__*/_jsx(\"div\",{className:classes.userLoginRoot,children:/*#__PURE__*/_jsxs(Paper,{className:classes.loginPaper,component:\"form\",children:[/*#__PURE__*/_jsx(\"div\",{className:classes.loginRow,children:/*#__PURE__*/_jsx(TextField,{label:\"Username\",variant:\"outlined\",fullWidth:true,value:username,onChange:onChangeUsername,error:loginError!==''})}),/*#__PURE__*/_jsx(\"div\",{className:classes.loginRow,children:/*#__PURE__*/_jsx(TextField,{label:\"Password\",variant:\"outlined\",fullWidth:true,value:password,onChange:onChangePassword,error:loginError!=='',type:\"password\"})}),loginError!==''?/*#__PURE__*/_jsx(\"div\",{className:classes.loginRow,children:/*#__PURE__*/_jsx(Typography,{color:\"error\",children:loginError})}):null,/*#__PURE__*/_jsxs(\"div\",{className:classes.loginRow+' '+classes.loginButtons,children:[/*#__PURE__*/_jsx(Button,{onClick:props.onSignUp,children:\"Not Registered yet?\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",className:classes.loginButton,onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{className:classes.loginButton,variant:\"contained\",color:\"primary\",onClick:onLogin,disabled:username===''||password==='',type:\"submit\",children:\"Login\"})]})]})]})});}export default connect()(withRouter(LoginComponent));","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/UserLoginComponent.js"],"names":["React","useEffect","makeStyles","Paper","Button","TextField","Typography","connect","withRouter","useStyles","theme","userLoginRoot","margin","loginPaper","width","padding","spacing","loginRow","paddingTop","paddingBottom","loginButtons","display","justifyContent","color","loginButton","marginLeft","LoginComponent","props","classes","useState","username","setUsername","password","setPassword","rendered","setRendered","loginError","setLoginError","user","error","onLogin","e","preventDefault","onChangeUsername","target","value","onChangePassword","onSignUp","onCancel"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, TextField, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    userLoginRoot: {\n        margin: 'auto',\n    },\n    loginPaper: {\n        width: '500px',\n        padding: theme.spacing(4),\n    },\n    loginRow: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        '&:last-child': {\n            paddingBottom: theme.spacing(0),\n        },\n        '&:first-child': {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    loginButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        color: 'secondary',\n    },\n    loginButton: {\n        marginLeft: theme.spacing(1),\n        color: 'secondary',\n    },\n}));\n\n/**\n * For user login\n * @param {props} props\n */\nfunction LoginComponent(props) {\n    const classes = useStyles();\n\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    //set to false when component is rendered for the first time in order to skip error message from previous login\n    const [rendered, setRendered] = React.useState(false);\n    const [loginError, setLoginError] = React.useState('');\n\n    useEffect(() => {\n        if (props.user.error) {\n            if (rendered) {\n                //if component is rendered for the 2. or more times, show new error\n                setLoginError(props.user.error);\n            }\n        } else {\n            setLoginError('');\n        }\n    }, [props.user]);\n\n    const onLogin = (e) => {\n        e.preventDefault();\n        props.onLogin(username, password);\n        setRendered(true); //set to true when user tries to login for the first time\n    };\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value);\n        setLoginError('');\n    };\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        setLoginError('');\n    };\n\n    return (\n        <div className={classes.userLoginRoot}>\n            <Paper className={classes.loginPaper} component=\"form\">\n                <div className={classes.loginRow}>\n                    <TextField label=\"Username\" variant=\"outlined\" fullWidth value={username} onChange={onChangeUsername} error={loginError !== ''} />\n                </div>\n                <div className={classes.loginRow}>\n                    <TextField label=\"Password\" variant=\"outlined\" fullWidth value={password} onChange={onChangePassword} error={loginError !== ''} type=\"password\" />\n                </div>\n                {loginError !== '' ? (\n                    <div className={classes.loginRow}>\n                        <Typography color=\"error\">{loginError}</Typography>\n                    </div>\n                ) : null}\n                <div className={classes.loginRow + ' ' + classes.loginButtons}>\n                    <Button onClick={props.onSignUp}>Not Registered yet?</Button>\n                    <div>\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.loginButton} onClick={props.onCancel}>\n                            Cancel\n                        </Button>\n                        <Button className={classes.loginButton} variant=\"contained\" color=\"primary\" onClick={onLogin} disabled={username === '' || password === ''} type=\"submit\">\n                            Login\n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect()(withRouter(LoginComponent));\n"]},"metadata":{},"sourceType":"module"}