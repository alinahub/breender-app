{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/upload/avatar.upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // antd imports\n\nimport 'antd/dist/antd.css';\nimport { Upload, Image } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons'; // material-ui imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, Snackbar, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { sha256 } from 'js-sha256';\nimport { useDispatch } from 'react-redux';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { usePet, usePetProfilePictureToRemove } from 'helper/hooks/pets.hooks';\nimport { updateProfilePicture } from 'redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvatarUpload = props => {\n  _s();\n\n  var _pet$profilePicture;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    mode\n  } = props;\n  const pet = usePet();\n  const [loading, setLoading] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [imageUrl, setImageUrl] = useState(mode === 'add' ? '' : (_pet$profilePicture = pet.profilePicture) === null || _pet$profilePicture === void 0 ? void 0 : _pet$profilePicture.src);\n  const user = useUser();\n  const petProfilePictureToRemove = usePetProfilePictureToRemove();\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }; // run this to check the type and size of the picture\n\n\n  const beforeUpload = file => {\n    // check if .jpeg or .png\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      setErrorMessage('You can only upload an JPG/PNG file!');\n      setOpenAlert(true);\n    } // check if size is smaller than 2MB\n\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      setErrorMessage('Image must be smaller than 2MB!');\n      setOpenAlert(true);\n    }\n\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleCloseAlert = () => setOpenAlert(false);\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response.\n      getBase64(info.file.originFileObj, imageUrl => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        setOpenAlert(false);\n      });\n    }\n  }; // update image url in the store\n\n\n  const customUpload = async data => {\n    const imageName = sha256(data.file.name); //a unique name for the image\n\n    /** The structure of the firebase path\n     * -| users\n     *   -| userId\n     *     -| pets\n     *      -| images\n     */\n\n    const imgPath = `users/${user.id}/pets/images/${imageName}`;\n    const newData = {\n      title: data.file.name,\n      description: '',\n      src: undefined,\n      path: imgPath,\n      data: data\n    }; // update in global state\n\n    dispatch(updateProfilePicture(newData, petProfilePictureToRemove));\n    data.onSuccess(null);\n  }; // remove the image from store, to later remove it from firebase\n\n\n  const handleRemove = async file => {\n    setImageUrl('');\n    const image = pet === null || pet === void 0 ? void 0 : pet.profilePicture;\n    let imageToDelete = petProfilePictureToRemove;\n\n    if (image && (image === null || image === void 0 ? void 0 : image.src) !== '' && Object.keys(petProfilePictureToRemove).length === 0) {\n      imageToDelete = image;\n    } // update in global state\n\n\n    await dispatch(updateProfilePicture({}, imageToDelete));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.box,\n      children: imageUrl ? /*#__PURE__*/_jsxDEV(Image, {\n        src: imageUrl,\n        alt: \"avatar\",\n        style: {\n          width: 250,\n          height: 250,\n          objectFit: 'cover',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(PetsIcon, {\n          fontSize: \"large\",\n          htmlColor: '#ced2de'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.layout,\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          justifyContent: 'center',\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleRemove,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        style: {\n          marginTop: 10\n        },\n        children: \"Avatar upload is required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {\n        accept: \"image/*\",\n        name: \"avatar\",\n        listType: \"picture\",\n        showUploadList: false,\n        beforeUpload: beforeUpload,\n        onChange: handleChange,\n        customRequest: customUpload,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          style: {\n            marginTop: 30\n          },\n          children: \"Choose Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openAlert,\n      autoHideDuration: 2000,\n      onClose: handleCloseAlert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlert,\n        severity: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvatarUpload, \"ePL+O2FJcJecRrXI3wakHsYv6FY=\", false, function () {\n  return [useStyles, useDispatch, usePet, useUser, usePetProfilePictureToRemove];\n});\n\n_c = AvatarUpload;\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: 'flex',\n    width: 250,\n    height: 250,\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#f0f1f5'\n  },\n  layout: {\n    display: 'flex',\n    width: 'auto',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}));\nexport default AvatarUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarUpload\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/upload/avatar.upload.js"],"names":["React","useState","Upload","Image","LoadingOutlined","makeStyles","Button","IconButton","Snackbar","Typography","Alert","PetsIcon","DeleteOutlinedIcon","sha256","useDispatch","useUser","usePet","usePetProfilePictureToRemove","updateProfilePicture","AvatarUpload","props","classes","useStyles","dispatch","mode","pet","loading","setLoading","openAlert","setOpenAlert","errorMessage","setErrorMessage","imageUrl","setImageUrl","profilePicture","src","user","petProfilePictureToRemove","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","isLt2M","size","handleCloseAlert","handleChange","info","status","originFileObj","customUpload","data","imageName","name","imgPath","id","newData","title","description","undefined","path","onSuccess","handleRemove","image","imageToDelete","Object","keys","length","box","width","height","objectFit","borderRadius","layout","justifyContent","display","marginTop","theme","alignItems","background","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// antd imports\nimport 'antd/dist/antd.css';\nimport { Upload, Image } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// material-ui imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, Snackbar, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { sha256 } from 'js-sha256';\nimport { useDispatch } from 'react-redux';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport { usePet, usePetProfilePictureToRemove } from 'helper/hooks/pets.hooks';\nimport { updateProfilePicture } from 'redux/actions';\n\nconst AvatarUpload = (props) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { mode } = props;\n    const pet = usePet();\n\n    const [loading, setLoading] = useState(false);\n    const [openAlert, setOpenAlert] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [imageUrl, setImageUrl] = useState(mode === 'add' ? '' : pet.profilePicture?.src);\n\n    const user = useUser();\n    const petProfilePictureToRemove = usePetProfilePictureToRemove();\n\n    const getBase64 = (img, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    };\n\n    // run this to check the type and size of the picture\n    const beforeUpload = (file) => {\n        // check if .jpeg or .png\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            setErrorMessage('You can only upload an JPG/PNG file!');\n            setOpenAlert(true);\n        }\n\n        // check if size is smaller than 2MB\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            setErrorMessage('Image must be smaller than 2MB!');\n            setOpenAlert(true);\n        }\n        return isJpgOrPng && isLt2M;\n    };\n\n    const handleCloseAlert = () => setOpenAlert(false);\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response.\n            getBase64(info.file.originFileObj, (imageUrl) => {\n                setImageUrl(imageUrl);\n                setLoading(false);\n                setOpenAlert(false);\n            });\n        }\n    };\n\n    // update image url in the store\n    const customUpload = async (data) => {\n        const imageName = sha256(data.file.name); //a unique name for the image\n\n        /** The structure of the firebase path\n         * -| users\n         *   -| userId\n         *     -| pets\n         *      -| images\n         */\n\n        const imgPath = `users/${user.id}/pets/images/${imageName}`;\n\n        const newData = {\n            title: data.file.name,\n            description: '',\n            src: undefined,\n            path: imgPath,\n            data: data,\n        };\n\n        // update in global state\n        dispatch(updateProfilePicture(newData, petProfilePictureToRemove));\n\n        data.onSuccess(null);\n    };\n\n    // remove the image from store, to later remove it from firebase\n    const handleRemove = async (file) => {\n        setImageUrl('');\n\n        const image = pet?.profilePicture;\n        let imageToDelete = petProfilePictureToRemove;\n\n        if (image && image?.src !== '' && Object.keys(petProfilePictureToRemove).length === 0) {\n            imageToDelete = image;\n        }\n\n        // update in global state\n        await dispatch(updateProfilePicture({}, imageToDelete));\n    };\n\n    return (\n        <div>\n            <div className={classes.box}>\n                {imageUrl ? (\n                    <Image src={imageUrl} alt=\"avatar\" style={{ width: 250, height: 250, objectFit: 'cover', borderRadius: '50%' }} />\n                ) : (\n                    <div>{loading ? <LoadingOutlined /> : <PetsIcon fontSize=\"large\" htmlColor={'#ced2de'} />}</div>\n                )}\n            </div>\n            <div className={classes.layout}>\n                {imageUrl ? (\n                    <div style={{ justifyContent: 'center', display: 'flex' }}>\n                        <IconButton onClick={handleRemove}>\n                            <DeleteOutlinedIcon color=\"error\" />\n                        </IconButton>\n                    </div>\n                ) : (\n                    <Typography color=\"secondary\" style={{ marginTop: 10 }}>Avatar upload is required!</Typography>\n                )}\n                <Upload accept=\"image/*\" name=\"avatar\" listType=\"picture\" showUploadList={false} beforeUpload={beforeUpload} onChange={handleChange} customRequest={customUpload}>\n                    <Button variant=\"outlined\" color=\"primary\" style={{ marginTop: 30 }}>\n                        Choose Avatar\n                    </Button>\n                </Upload>\n            </div>\n            <Snackbar open={openAlert} autoHideDuration={2000} onClose={handleCloseAlert}>\n                <Alert onClose={handleCloseAlert} severity=\"error\">\n                    {errorMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        display: 'flex',\n        width: 250,\n        height: 250,\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: '#f0f1f5',\n    },\n    layout: {\n        display: 'flex',\n        width: 'auto',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));\n\nexport default AvatarUpload;\n"]},"metadata":{},"sourceType":"module"}