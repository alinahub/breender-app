{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, IconButton, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STATUS_TYPE = {\n  PENDING: 'pending',\n  SUCCESS: 'success',\n  FAIL: 'fail'\n};\nconst VARIANT_TYPE = {\n  SENDER: 'sender',\n  RECEIVER: 'receiver',\n  DEFAULT: 'default'\n};\n\nconst AdminStatusTag = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    status,\n    variant,\n    confirm,\n    transaction\n  } = props;\n  const ref = useRef(null);\n  const selectorRef = useRef(null);\n  const [tagStatus, setTagStatus] = useState(status);\n  const [statusToChange, setStatusToChange] = useState(status);\n  const [selectorOpened, setSelectorOpened] = useState(false);\n  const [tagClicked, setTagClicked] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const color = () => {\n    switch (status) {\n      case STATUS_TYPE.PENDING:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: '#FDCD7F'\n        };\n\n      case STATUS_TYPE.SUCCESS:\n        return {\n          color: 'green',\n          background: 'white',\n          borderColor: '#A1CF6B'\n        };\n\n      case STATUS_TYPE.FAIL:\n        return {\n          color: 'red',\n          background: 'white',\n          borderColor: '#E87461'\n        };\n\n      default:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: 'orange'\n        };\n    }\n  };\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {// if (ref.current && !ref.current.contains(event.target)) {\n      //     // if (!selectorRef.current.contains(event.target)) setTagClicked(false);\n      //     if (selectorRef.current && !selectorRef.current.contains(event.target)) setTagClicked(false);\n      // }\n    } // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, open, selectorOpened]);\n\n  const handleStatusChange = event => {\n    const status = event.target.value;\n    setOpen(true);\n    setStatusToChange(status);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTagClicked(false);\n  };\n\n  const handleConfirm = () => {\n    let transactionCopy = transaction;\n\n    switch (variant) {\n      case VARIANT_TYPE.SENDER:\n        transactionCopy.senderResponse = statusToChange;\n        break;\n\n      case VARIANT_TYPE.RECEIVER:\n        transactionCopy.receiverResponse = statusToChange;\n        break;\n\n      case VARIANT_TYPE.DEFAULT:\n        transactionCopy.status = statusToChange;\n        break;\n\n      default:\n        transactionCopy.status = statusToChange;\n        break;\n    }\n\n    confirm(transactionCopy);\n    setTagStatus(statusToChange);\n    setOpen(false);\n    setTagClicked(false);\n  };\n\n  const openTag = () => {\n    setSelectorOpened(true);\n    setTagClicked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!tagClicked ? /*#__PURE__*/_jsxDEV(Chip, {\n      variant: \"outlined\",\n      label: status.toUpperCase(),\n      style: { ...color(),\n        borderWidth: 2,\n        fontWeight: 'lighter'\n      },\n      onClick: openTag\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonGroup,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"response-label\",\n          children: \"Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ref: selectorRef,\n          label: \"Response\",\n          id: \"response\",\n          value: tagStatus,\n          onChange: handleStatusChange,\n          onBlur: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            ref: selectorRef,\n            value: STATUS_TYPE.PENDING,\n            children: STATUS_TYPE.PENDING\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            ref: selectorRef,\n            value: STATUS_TYPE.SUCCESS,\n            children: STATUS_TYPE.SUCCESS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            ref: selectorRef,\n            value: STATUS_TYPE.FAIL,\n            children: STATUS_TYPE.FAIL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      onBlur: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: 'Confirm Action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Please confirm you want to officially change the status.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminStatusTag, \"O/LZ3WvKA1dyqi0UfBMNS6ssiCE=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminStatusTag;\nconst useStyles = makeStyles(theme => ({\n  buttonGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: 10\n  }\n}));\nexport default AdminStatusTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminStatusTag\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js"],"names":["React","useEffect","useRef","useState","Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","IconButton","InputLabel","makeStyles","MenuItem","Select","DoneIcon","CloseIcon","STATUS_TYPE","PENDING","SUCCESS","FAIL","VARIANT_TYPE","SENDER","RECEIVER","DEFAULT","AdminStatusTag","props","classes","useStyles","status","variant","confirm","transaction","ref","selectorRef","tagStatus","setTagStatus","statusToChange","setStatusToChange","selectorOpened","setSelectorOpened","tagClicked","setTagClicked","open","setOpen","color","background","borderColor","handleClickOutside","event","document","addEventListener","removeEventListener","handleStatusChange","target","value","handleClose","handleConfirm","transactionCopy","senderResponse","receiverResponse","openTag","toUpperCase","borderWidth","fontWeight","buttonGroup","theme","display","justifyContent","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, IconButton, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst STATUS_TYPE = {\n    PENDING: 'pending',\n    SUCCESS: 'success',\n    FAIL: 'fail',\n};\n\nconst VARIANT_TYPE = {\n    SENDER: 'sender',\n    RECEIVER: 'receiver',\n    DEFAULT: 'default',\n};\n\nconst AdminStatusTag = (props) => {\n    const classes = useStyles();\n    const { status, variant, confirm, transaction } = props;\n    const ref = useRef(null);\n    const selectorRef = useRef(null);\n\n    const [tagStatus, setTagStatus] = useState(status);\n    const [statusToChange, setStatusToChange] = useState(status);\n    const [selectorOpened, setSelectorOpened] = useState(false);\n    const [tagClicked, setTagClicked] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const color = () => {\n        switch (status) {\n            case STATUS_TYPE.PENDING:\n                return { color: 'orange', background: 'white', borderColor: '#FDCD7F' };\n            case STATUS_TYPE.SUCCESS:\n                return { color: 'green', background: 'white', borderColor: '#A1CF6B' };\n            case STATUS_TYPE.FAIL:\n                return { color: 'red', background: 'white', borderColor: '#E87461' };\n            default:\n                return { color: 'orange', background: 'white', borderColor: 'orange' };\n        }\n    };\n\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n            // if (ref.current && !ref.current.contains(event.target)) {\n            //     // if (!selectorRef.current.contains(event.target)) setTagClicked(false);\n            //     if (selectorRef.current && !selectorRef.current.contains(event.target)) setTagClicked(false);\n            // }\n        }\n\n        // Bind the event listener\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [ref, open, selectorOpened]);\n\n    const handleStatusChange = (event) => {\n        const status = event.target.value;\n        setOpen(true);\n        setStatusToChange(status);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setTagClicked(false);\n    };\n\n    const handleConfirm = () => {\n        let transactionCopy = transaction;\n        switch (variant) {\n            case VARIANT_TYPE.SENDER:\n                transactionCopy.senderResponse = statusToChange;\n                break;\n            case VARIANT_TYPE.RECEIVER:\n                transactionCopy.receiverResponse = statusToChange;\n                break;\n            case VARIANT_TYPE.DEFAULT:\n                transactionCopy.status = statusToChange;\n                break;\n            default:\n                transactionCopy.status = statusToChange;\n                break;\n        }\n\n        confirm(transactionCopy);\n\n        setTagStatus(statusToChange);\n        setOpen(false);\n        setTagClicked(false);\n    };\n\n    const openTag = () => {\n        setSelectorOpened(true);\n        setTagClicked(true);\n    };\n\n    return (\n        <>\n            {!tagClicked ? (\n                <Chip variant=\"outlined\" key={status} label={status.toUpperCase()} style={{ ...color(), borderWidth: 2, fontWeight: 'lighter' }} onClick={openTag} />\n            ) : (\n                <div className={classes.buttonGroup}>\n                    <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                        <InputLabel id=\"response-label\">Response</InputLabel>\n                        <Select ref={selectorRef} label=\"Response\" id=\"response\" value={tagStatus} onChange={handleStatusChange} onBlur={handleClose}>\n                            <MenuItem ref={selectorRef} value={STATUS_TYPE.PENDING}>\n                                {STATUS_TYPE.PENDING}\n                            </MenuItem>\n                            <MenuItem ref={selectorRef} value={STATUS_TYPE.SUCCESS}>\n                                {STATUS_TYPE.SUCCESS}\n                            </MenuItem>\n                            <MenuItem ref={selectorRef} value={STATUS_TYPE.FAIL}>\n                                {STATUS_TYPE.FAIL}\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                    <div className={classes.buttonGroup}>\n                    <IconButton size=\"small\">\n                        <DoneIcon />\n                    </IconButton>\n                    <IconButton size=\"small\">\n                        <CloseIcon />\n                    </IconButton>\n                    </div>\n                </div>\n            )}\n            <Dialog open={open} onClose={handleClose} onBlur={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{'Confirm Action'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">Please confirm you want to officially change the status.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    buttonGroup: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 10,\n    }\n}));\n\nexport default AdminStatusTag;\n"]},"metadata":{},"sourceType":"module"}