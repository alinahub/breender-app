{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STATUS_TYPE = {\n  PENDING: 'pending',\n  SUCCESS: 'success',\n  FAIL: 'fail'\n};\n\nconst AdminStatusTag = props => {\n  _s();\n\n  const {\n    status,\n    confirm,\n    transaction\n  } = props;\n  const [response, setResponse] = useState(status);\n  const [tagClicked, setTagClicked] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const color = () => {\n    switch (status) {\n      case STATUS_TYPE.PENDING:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: '#FDCD7F'\n        };\n\n      case STATUS_TYPE.SUCCESS:\n        return {\n          color: 'green',\n          background: 'white',\n          borderColor: '#A1CF6B'\n        };\n\n      case STATUS_TYPE.FAIL:\n        return {\n          color: 'red',\n          background: 'white',\n          borderColor: '#E87461'\n        };\n\n      default:\n        return {\n          color: 'orange',\n          background: 'white',\n          borderColor: 'orange'\n        };\n    }\n  };\n\n  const handleResponseChange = event => {\n    const response = event.target.value;\n\n    if (response !== STATUS_TYPE.PENDING) {\n      setOpen(true);\n    }\n\n    setResponse(response);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setResponse(STATUS_TYPE.PENDING);\n  };\n\n  const handleConfirm = () => {\n    let transactionCopy = transaction;\n    confirm(transactionCopy);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!tagClicked ? /*#__PURE__*/_jsxDEV(Chip, {\n      variant: \"outlined\",\n      label: status.toUpperCase(),\n      style: { ...color(),\n        borderWidth: 2,\n        fontWeight: 'lighter'\n      },\n      onClick: () => setTagClicked(!tagClicked)\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      variant: \"outlined\",\n      size: \"small\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"response-label\",\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Response\",\n        id: \"response\",\n        value: response,\n        onChange: handleResponseChange,\n        onBlur: handleResponseChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.PENDING,\n          children: STATUS_TYPE.PENDING\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.SUCCESS,\n          children: STATUS_TYPE.SUCCESS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: STATUS_TYPE.FAIL,\n          children: STATUS_TYPE.FAIL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      onBlur: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: 'Confirm Action'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Please confirm you want to officially change the status.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminStatusTag, \"orLNnCcWFbT/o4mwEA8bUHHVxWc=\");\n\n_c = AdminStatusTag;\nconst useStyles = makeStyles(theme => ({}));\nexport default AdminStatusTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminStatusTag\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/tags/AdminStatusTag.js"],"names":["React","useState","Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","makeStyles","MenuItem","Select","STATUS_TYPE","PENDING","SUCCESS","FAIL","AdminStatusTag","props","status","confirm","transaction","response","setResponse","tagClicked","setTagClicked","open","setOpen","color","background","borderColor","handleResponseChange","event","target","value","handleClose","handleConfirm","transactionCopy","toUpperCase","borderWidth","fontWeight","useStyles","theme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,aAA/B,EAA8CC,aAA9C,EAA6DC,iBAA7D,EAAgFC,WAAhF,EAA6FC,WAA7F,EAA0GC,UAA1G,EAAsHC,UAAtH,EAAkIC,QAAlI,EAA4IC,MAA5I,QAA0J,mBAA1J;;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,SADO;AAEhBC,EAAAA,OAAO,EAAE,SAFO;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAApB;;AAMA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAmCH,KAAzC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACmB,MAAD,CAAxC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM4B,KAAK,GAAG,MAAM;AAChB,YAAQT,MAAR;AACI,WAAKN,WAAW,CAACC,OAAjB;AACI,eAAO;AAAEc,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,UAAU,EAAE,OAA/B;AAAwCC,UAAAA,WAAW,EAAE;AAArD,SAAP;;AACJ,WAAKjB,WAAW,CAACE,OAAjB;AACI,eAAO;AAAEa,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE,OAA9B;AAAuCC,UAAAA,WAAW,EAAE;AAApD,SAAP;;AACJ,WAAKjB,WAAW,CAACG,IAAjB;AACI,eAAO;AAAEY,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,UAAU,EAAE,OAA5B;AAAqCC,UAAAA,WAAW,EAAE;AAAlD,SAAP;;AACJ;AACI,eAAO;AAAEF,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,UAAU,EAAE,OAA/B;AAAwCC,UAAAA,WAAW,EAAE;AAArD,SAAP;AARR;AAUH,GAXD;;AAaA,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAMV,QAAQ,GAAGU,KAAK,CAACC,MAAN,CAAaC,KAA9B;;AACA,QAAIZ,QAAQ,KAAKT,WAAW,CAACC,OAA7B,EAAsC;AAClCa,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AACDJ,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAND;;AAQA,QAAMa,WAAW,GAAG,MAAM;AACtBR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAJ,IAAAA,WAAW,CAACV,WAAW,CAACC,OAAb,CAAX;AACH,GAHD;;AAKA,QAAMsB,aAAa,GAAG,MAAM;AACxB,QAAIC,eAAe,GAAGhB,WAAtB;AACAD,IAAAA,OAAO,CAACiB,eAAD,CAAP;AACAV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAJD;;AAMA,sBACI;AAAA,eACK,CAACH,UAAD,gBACG,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,UAAd;AAAsC,MAAA,KAAK,EAAEL,MAAM,CAACmB,WAAP,EAA7C;AAAmE,MAAA,KAAK,EAAE,EAAC,GAAGV,KAAK,EAAT;AAAaW,QAAAA,WAAW,EAAE,CAA1B;AAA6BC,QAAAA,UAAU,EAAE;AAAzC,OAA1E;AAA+H,MAAA,OAAO,EAAE,MAAMf,aAAa,CAAC,CAACD,UAAF;AAA3J,OAA8BL,MAA9B;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG,QAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,IAAI,EAAC,OAA9C;AAAsD,MAAA,SAAS,MAA/D;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,EAAE,EAAC,UAA5B;AAAuC,QAAA,KAAK,EAAEG,QAA9C;AAAwD,QAAA,QAAQ,EAAES,oBAAlE;AAAwF,QAAA,MAAM,EAAEA,oBAAhG;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAElB,WAAW,CAACC,OAA7B;AAAA,oBAAuCD,WAAW,CAACC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAED,WAAW,CAACE,OAA7B;AAAA,oBAAuCF,WAAW,CAACE;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEF,WAAW,CAACG,IAA7B;AAAA,oBAAoCH,WAAW,CAACG;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAaI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEU,IAAd;AAAoB,MAAA,OAAO,EAAES,WAA7B;AAA0C,MAAA,MAAM,EAAEA,WAAlD;AAA+D,yBAAgB,oBAA/E;AAAoG,0BAAiB,0BAArH;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,aAAjB;AAAgC,UAAA,KAAK,EAAC,SAAtC;AAAgD,UAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AA8BH,CApED;;GAAMnB,c;;KAAAA,c;AAsEN,MAAMwB,SAAS,GAAG/B,UAAU,CAAEgC,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAEA,eAAezB,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\n\nconst STATUS_TYPE = {\n    PENDING: 'pending',\n    SUCCESS: 'success',\n    FAIL: 'fail',\n};\n\nconst AdminStatusTag = (props) => {\n    const { status, confirm, transaction } = props;\n    const [response, setResponse] = useState(status);\n    const [tagClicked, setTagClicked] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const color = () => {\n        switch (status) {\n            case STATUS_TYPE.PENDING:\n                return { color: 'orange', background: 'white', borderColor: '#FDCD7F' };\n            case STATUS_TYPE.SUCCESS:\n                return { color: 'green', background: 'white', borderColor: '#A1CF6B' };\n            case STATUS_TYPE.FAIL:\n                return { color: 'red', background: 'white', borderColor: '#E87461' };\n            default:\n                return { color: 'orange', background: 'white', borderColor: 'orange' };\n        }\n    };\n\n    const handleResponseChange = (event) => {\n        const response = event.target.value;\n        if (response !== STATUS_TYPE.PENDING) {\n            setOpen(true);\n        }\n        setResponse(response);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setResponse(STATUS_TYPE.PENDING);\n    };\n\n    const handleConfirm = () => {\n        let transactionCopy = transaction;\n        confirm(transactionCopy);\n        setOpen(false);\n    };\n\n    return (\n        <>\n            {!tagClicked ? (\n                <Chip variant=\"outlined\" key={status} label={status.toUpperCase()} style={{...color(), borderWidth: 2, fontWeight: 'lighter'}} onClick={() => setTagClicked(!tagClicked)} />\n            ) : (\n                <FormControl required variant=\"outlined\" size=\"small\" fullWidth>\n                    <InputLabel id=\"response-label\">Response</InputLabel>\n                    <Select label=\"Response\" id=\"response\" value={response} onChange={handleResponseChange} onBlur={handleResponseChange}>\n                        <MenuItem value={STATUS_TYPE.PENDING}>{STATUS_TYPE.PENDING}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.SUCCESS}>{STATUS_TYPE.SUCCESS}</MenuItem>\n                        <MenuItem value={STATUS_TYPE.FAIL}>{STATUS_TYPE.FAIL}</MenuItem>\n                    </Select>\n                </FormControl>\n            )}\n            <Dialog open={open} onClose={handleClose} onBlur={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{'Confirm Action'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">Please confirm you want to officially change the status.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default AdminStatusTag;\n"]},"metadata":{},"sourceType":"module"}