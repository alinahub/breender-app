{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useState}from'react';import{connect,useSelector,dispatch}from'react-redux';import{getOrAddConversation}from'../redux/actions/conversationActions';import MessengerComponent from'../components/messenger/MessengerComponent';import MessengerView from'./MessengerView';import Loading from'../components/Loading';import{useDispatch}from'react-redux';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";function MessengerNewContactView(props){var dispatch=useDispatch();var location=useLocation();var user=useSelector(function(state){return state.user.user;});var url=location.pathname.split('/messenger/')[1];var breederId=url.split('/')[0];var petId=url.split('/')[1];useEffect(function(){var userId=user.id;function loadConversation(_x,_x2){return _loadConversation.apply(this,arguments);}function _loadConversation(){_loadConversation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id1,id2){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Checking conversations and creating if needed...');_context.next=3;return dispatch(getOrAddConversation(id1,id2));case 3:case\"end\":return _context.stop();}}},_callee);}));return _loadConversation.apply(this,arguments);}return loadConversation(userId,breederId);},[dispatch]);var loadedConversation=useSelector(function(state){return state.conversations.conversation;});return!loadedConversation?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Loading,{})}):loadedConversation?/*#__PURE__*/_jsx(MessengerView,{currentConversationId:loadedConversation._id}):null;}// connect() establishes allows the usage of redux functionality\nexport default connect()(MessengerNewContactView);","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/MessengerNewContactView.js"],"names":["React","useEffect","useState","connect","useSelector","dispatch","getOrAddConversation","MessengerComponent","MessengerView","Loading","useDispatch","useLocation","MessengerNewContactView","props","location","user","state","url","pathname","split","breederId","petId","userId","id","loadConversation","id1","id2","console","log","loadedConversation","conversations","conversation","_id"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,CAAkBC,WAAlB,CAA+BC,QAA/B,KAA+C,aAA/C,CACA,OAASC,oBAAT,KAAqC,sCAArC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,4CAA/B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,C,2CAEA,QAASC,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwC,CACpC,GAAMR,CAAAA,QAAQ,CAAGK,WAAW,EAA5B,CACA,GAAMI,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,GAAMI,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAN,CAAWA,IAAtB,EAAD,CAAxB,CACA,GAAIE,CAAAA,GAAG,CAAGH,QAAQ,CAACI,QAAT,CAAkBC,KAAlB,CAAwB,aAAxB,EAAuC,CAAvC,CAAV,CACA,GAAIC,CAAAA,SAAS,CAAGH,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAhB,CACA,GAAIE,CAAAA,KAAK,CAAGJ,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAZ,CAEAlB,SAAS,CAAC,UAAM,CACZ,GAAIqB,CAAAA,MAAM,CAAGP,IAAI,CAACQ,EAAlB,CADY,QAGGC,CAAAA,gBAHH,gKAGZ,iBAAgCC,GAAhC,CAAqCC,GAArC,kHACIC,OAAO,CAACC,GAAR,CAAY,kDAAZ,EADJ,sBAEUvB,CAAAA,QAAQ,CAACC,oBAAoB,CAACmB,GAAD,CAAMC,GAAN,CAArB,CAFlB,uDAHY,mDAOZ,MAAOF,CAAAA,gBAAgB,CAACF,MAAD,CAASF,SAAT,CAAvB,CACH,CARQ,CAQN,CAACf,QAAD,CARM,CAAT,CAUA,GAAMwB,CAAAA,kBAAkB,CAAGzB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACc,aAAN,CAAoBC,YAA/B,EAAD,CAAtC,CAEA,MAAO,CAACF,kBAAD,cACH,kCACI,KAAC,OAAD,IADJ,EADG,CAIHA,kBAAkB,cAClB,KAAC,aAAD,EAAe,qBAAqB,CAAEA,kBAAkB,CAACG,GAAzD,EADkB,CAElB,IANJ,CAOH,CAED;AACA,cAAe7B,CAAAA,OAAO,GAAGS,uBAAH,CAAtB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useSelector, dispatch } from 'react-redux';\nimport { getOrAddConversation } from '../redux/actions/conversationActions';\nimport MessengerComponent from '../components/messenger/MessengerComponent';\nimport MessengerView from './MessengerView';\nimport Loading from '../components/Loading';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nfunction MessengerNewContactView(props) {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const user = useSelector((state) => state.user.user);\n    let url = location.pathname.split('/messenger/')[1];\n    let breederId = url.split('/')[0];\n    let petId = url.split('/')[1];\n\n    useEffect(() => {\n        let userId = user.id;\n\n        async function loadConversation(id1, id2) {\n            console.log('Checking conversations and creating if needed...');\n            await dispatch(getOrAddConversation(id1, id2));\n        }\n        return loadConversation(userId, breederId);\n    }, [dispatch]);\n\n    const loadedConversation = useSelector((state) => state.conversations.conversation);\n\n    return !loadedConversation ? (\n        <div>\n            <Loading />\n        </div>\n    ) : loadedConversation ? (\n        <MessengerView currentConversationId={loadedConversation._id} />\n    ) : null;\n}\n\n// connect() establishes allows the usage of redux functionality\nexport default connect()(MessengerNewContactView);\n"]},"metadata":{},"sourceType":"module"}