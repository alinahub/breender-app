{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { Paper, Divider, Typography } from '@material-ui/core';\nimport PetInformationPaper from '../PetInformationPaper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport UserInformation from './UserInformation';\nimport UserForm from './UserForm';\nimport { NotificationService } from 'services';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/actions';\nimport ReviewComponent from './ReviewComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(1)\n  },\n  paper: {\n    backgroundColor: '#f7ebd7',\n    padding: theme.spacing(4),\n    paddingTop: theme.spacing(6),\n    margin: 'auto',\n    marginTop: theme.spacing(6),\n    maxWidth: '85%'\n  },\n  paperSmall: {\n    padding: theme.spacing(3),\n    margin: 'auto',\n    maxWidth: '75%'\n  },\n  flexContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 0\n  },\n  typographyNotifications: {\n    padding: theme.spacing(2),\n    margin: 'auto'\n  },\n  typography: {\n    margin: theme.spacing(2),\n    marginTop: theme.spacing(6)\n  },\n  divider: {\n    margin: theme.spacing(3)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  black: {\n    color: '#fff',\n    backgroundColor: '#787878'\n  },\n  listItem: {\n    paddingLeft: '15%',\n    paddingRight: '15%'\n  }\n}));\nexport default function UserProfile(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [editingMode, setEditingMode] = React.useState(false);\n  const [username, setUsername] = React.useState(props.user.username);\n  const [email, setEmail] = React.useState(props.user.email);\n  const [province, setProvince] = React.useState(props.user.province);\n  const [city, setCity] = React.useState(props.user.city);\n  const [password, setPassword] = React.useState('');\n  const [password2, setPassword2] = React.useState('');\n  const [paymentMethod, setPaymentMethod] = React.useState(props.user.paymentMethod);\n  const [disableSave, setDisableSave] = React.useState(false);\n\n  const handleModeChange = event => {\n    if (editingMode) {\n      updateUserOnSave();\n      setEditingMode(false);\n    } else {\n      setEditingMode(true);\n    }\n  };\n\n  const updateUserOnSave = async () => {\n    let userWithChanges = props.user;\n    userWithChanges.username = username;\n    userWithChanges.email = email;\n    userWithChanges.province = province;\n    userWithChanges.city = city;\n    userWithChanges.paymentMethod = paymentMethod;\n\n    if (password !== '' && password2 !== '' && password === password2) {\n      userWithChanges.password = password;\n    }\n\n    const onSuccess = () => {\n      NotificationService.notify('success', 'Success', 'Your profile was successfully updated!');\n      setDisableSave(false);\n      history.push('/user');\n    };\n\n    const onError = () => {\n      NotificationService.notify('error', 'Error', 'There was a problem updating your profile.');\n    };\n\n    dispatch(updateUser(userWithChanges, onSuccess, onError));\n  };\n\n  const handleAddPet = event => {\n    history.push('/add-pet');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-between\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            style: {\n              fontWeight: 600\n            },\n            children: props.profileOfLoggedInUser ? \"Account information\" : username.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: props.profileOfLoggedInUser ? /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleModeChange,\n            disabled: disableSave,\n            children: editingMode ? \"Save\" : \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), editingMode ? /*#__PURE__*/_jsxDEV(UserForm, {\n        usernameProp: {\n          username,\n          setUsername\n        },\n        emailProp: {\n          email,\n          setEmail\n        },\n        provinceProp: {\n          province,\n          setProvince\n        },\n        cityProp: {\n          city,\n          setCity\n        },\n        passwordProp: {\n          password,\n          setPassword\n        },\n        password2Prop: {\n          password2,\n          setPassword2\n        },\n        paymentMethodProp: {\n          paymentMethod,\n          setPaymentMethod\n        },\n        disableSaveProp: {\n          disableSave,\n          setDisableSave\n        },\n        subscriptionPlan: props.user.subscriptionPlan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(UserInformation, {\n        user: props.user,\n        profileOfLoggedInUser: props.profileOfLoggedInUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\",\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        variant: \"h6\",\n        align: \"center\",\n        style: {\n          fontWeight: 600\n        },\n        children: props.profileOfLoggedInUser ? \"My pets\" : \"Pets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [props.pets && props.pets.length > 0 ? props.pets.map(pet => /*#__PURE__*/_jsxDEV(PetInformationPaper, {\n          pet: pet,\n          user: props.user,\n          editingMode: editingMode\n        }, pet._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }, this)) : !editingMode ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.typographyNotifications,\n          align: \"center\",\n          children: \"No pets added yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }, this), editingMode ? props.user.isVerified ? /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: '0 auto',\n            display: \"flex\"\n          },\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleAddPet,\n          children: \"Add pet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.typographyNotifications,\n          align: \"center\",\n          children: \"Please verify your email to add a pet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), editingMode ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\",\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.typography,\n          variant: \"h6\",\n          align: \"center\",\n          style: {\n            fontWeight: 600\n          },\n          children: props.profileOfLoggedInUser ? \"Reviews from other users\" : \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: props.reviews && props.reviews.length > 0 ? props.reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewComponent, {\n            review: review\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 59\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.typographyNotifications,\n            align: \"center\",\n            children: \"No reviews added yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UserProfile, \"ZMbY/b+J3CvW5Y+MIF3SAEjmMGA=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/user-profile/UserProfile.js"],"names":["React","makeStyles","List","Paper","Divider","Typography","PetInformationPaper","Grid","Button","UserInformation","UserForm","NotificationService","useHistory","useDispatch","updateUser","ReviewComponent","useStyles","theme","root","flexGrow","padding","spacing","paper","backgroundColor","paddingTop","margin","marginTop","maxWidth","paperSmall","flexContainer","display","flexDirection","typographyNotifications","typography","divider","button","black","color","listItem","paddingLeft","paddingRight","UserProfile","props","classes","history","dispatch","editingMode","setEditingMode","useState","username","setUsername","user","email","setEmail","province","setProvince","city","setCity","password","setPassword","password2","setPassword2","paymentMethod","setPaymentMethod","disableSave","setDisableSave","handleModeChange","event","updateUserOnSave","userWithChanges","onSuccess","notify","push","onError","handleAddPet","fontWeight","profileOfLoggedInUser","toUpperCase","subscriptionPlan","pets","length","map","pet","_id","isVerified","reviews","review"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { Paper, Divider, Typography } from '@material-ui/core';\nimport PetInformationPaper from '../PetInformationPaper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport UserInformation from './UserInformation';\nimport UserForm from './UserForm';\nimport { NotificationService } from 'services';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/actions';\nimport ReviewComponent from './ReviewComponent';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n    },\n    paper: {\n        backgroundColor: '#f7ebd7',\n        padding: theme.spacing(4),\n        paddingTop: theme.spacing(6),\n        margin: 'auto',\n        marginTop: theme.spacing(6),\n        maxWidth: '85%',\n    },\n    paperSmall: {\n        padding: theme.spacing(3),\n        margin: 'auto',\n        maxWidth: '75%',\n    },\n    flexContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 0,\n    },\n    typographyNotifications: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n    typography: {\n        margin: theme.spacing(2),\n        marginTop: theme.spacing(6),\n    },\n    divider: {\n        margin: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    black: {\n        color: '#fff',\n        backgroundColor: '#787878',\n    },\n    listItem: {\n        paddingLeft: '15%',\n        paddingRight: '15%',\n    },\n}));\n\nexport default function UserProfile(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [editingMode, setEditingMode] = React.useState(false);\n    const [username, setUsername] = React.useState(props.user.username);\n    const [email, setEmail] = React.useState(props.user.email);\n    const [province, setProvince] = React.useState(props.user.province);\n    const [city, setCity] = React.useState(props.user.city);\n    const [password, setPassword] = React.useState('');\n    const [password2, setPassword2] = React.useState('');\n    const [paymentMethod, setPaymentMethod] = React.useState(props.user.paymentMethod);\n    const [disableSave, setDisableSave] = React.useState(false);\n\n    const handleModeChange = (event) => {\n        if (editingMode) {\n            updateUserOnSave();\n            setEditingMode(false);\n        } else {\n            setEditingMode(true);\n        }\n    };\n\n    const updateUserOnSave = async () => {\n\n        let userWithChanges = props.user;\n        userWithChanges.username = username;\n        userWithChanges.email = email;\n        userWithChanges.province = province;\n        userWithChanges.city = city;\n        userWithChanges.paymentMethod = paymentMethod;\n\n        if (password !== '' && password2 !== '' && password === password2) {\n            userWithChanges.password = password\n        }\n\n        const onSuccess = () => {\n            NotificationService.notify('success', 'Success', 'Your profile was successfully updated!');\n            setDisableSave(false);\n            history.push('/user');\n        };\n\n        const onError = () => {\n            NotificationService.notify('error', 'Error', 'There was a problem updating your profile.');\n        };\n\n        dispatch(updateUser(userWithChanges, onSuccess, onError));\n    };\n\n    const handleAddPet = (event) => {\n        history.push('/add-pet');\n    };\n\n\n    return (<div className={classes.root}>\n        <Paper className={classes.paper} >\n            <Grid container justify=\"space-between\" spacing={2}>\n                <Grid item />\n                <Grid item >\n                    <Typography variant=\"h6\" align=\"center\" style={{ fontWeight: 600 }}>\n                        {props.profileOfLoggedInUser ? \"Account information\" : username.toUpperCase()}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    {props.profileOfLoggedInUser ? <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleModeChange} disabled={disableSave}>\n                        {editingMode ? \"Save\" : \"Edit\"}\n                    </Button> : <div />}\n\n                </Grid>\n            </Grid>\n            {editingMode ?\n                <UserForm\n                    usernameProp={{ username, setUsername }}\n                    emailProp={{ email, setEmail }}\n                    provinceProp={{ province, setProvince }}\n                    cityProp={{ city, setCity }}\n                    passwordProp={{ password, setPassword }}\n                    password2Prop={{ password2, setPassword2 }}\n                    paymentMethodProp={{ paymentMethod, setPaymentMethod }}\n                    disableSaveProp={{ disableSave, setDisableSave }}\n                    subscriptionPlan={props.user.subscriptionPlan} />\n                : <UserInformation user={props.user} profileOfLoggedInUser={props.profileOfLoggedInUser} />}\n            <Divider variant=\"middle\" className={classes.divider} />\n            <Typography className={classes.typography} variant=\"h6\" align=\"center\" style={{ fontWeight: 600 }}>\n                {props.profileOfLoggedInUser ? \"My pets\" : \"Pets\"}\n            </Typography>\n            <List>\n                {props.pets && props.pets.length > 0 ?\n                    props.pets.map((pet) => <PetInformationPaper pet={pet} user={props.user} key={pet._id} editingMode={editingMode} />)\n                    : (!editingMode ?\n                        <Typography className={classes.typographyNotifications} align=\"center\">\n                            No pets added yet\n                        </Typography> : <div />)}\n                {editingMode ? (props.user.isVerified ?\n                    <Button style={{ margin: '0 auto', display: \"flex\" }} variant=\"contained\" color=\"secondary\" onClick={handleAddPet}>\n                        Add pet\n                    </Button>\n                    : <Typography className={classes.typographyNotifications} align=\"center\">\n                        Please verify your email to add a pet\n                    </Typography>) : <div />}\n            </List>\n            {editingMode ? <div />\n                :\n                <div>\n                    <Divider variant=\"middle\" className={classes.divider} />\n                    <Typography className={classes.typography} variant=\"h6\" align=\"center\" style={{ fontWeight: 600 }}>\n                        {props.profileOfLoggedInUser ? \"Reviews from other users\" : \"Reviews\"}\n                    </Typography>\n                    <List>\n                        {props.reviews && props.reviews.length > 0 ?\n                            props.reviews.map((review) => <ReviewComponent review={review} />)\n                            : <Typography className={classes.typographyNotifications} align=\"center\">\n                                No reviews added yet\n                            </Typography>}\n                    </List>\n                </div>}\n        </Paper>\n    </div >)\n}"]},"metadata":{},"sourceType":"module"}