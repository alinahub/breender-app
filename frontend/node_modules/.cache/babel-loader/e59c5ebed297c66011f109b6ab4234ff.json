{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserLoginView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport LoginComponent from '../components/UserLoginComponent';\nimport { login, startLoading, stopLoading, loginReset, getUsersInfo, getUser } from '../redux/actions';\nimport NotificationService from 'services/NotificationService';\nimport { getUnseenMessages } from '../redux/actions/messageActions';\nimport logo from \"../images/breender.svg\";\nimport { makeStyles } from '@material-ui/core';\n/**\n * For user login\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserLoginView(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    var _user$user;\n\n    if ((_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.id) {\n      NotificationService.notify('success', 'Success', 'Sucessfully signed in.');\n      props.history.push('/');\n      props.dispatch(getUsersInfo(user.user.id));\n      props.dispatch(getUser(user.user.id));\n      props.dispatch(getUnseenMessages(user.user.id));\n    }\n  }, [user, props]);\n\n  const onLogin = async (username, password) => {\n    dispatch(startLoading());\n    await dispatch(login(username, password));\n    dispatch(stopLoading());\n  };\n\n  const onCancel = () => {\n    history.push('/');\n  };\n\n  const onSignUp = () => {\n    props.history.push('/register');\n  };\n\n  const goToHome = () => props.history.push('/');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: goToHome,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"logo\",\n        src: logo,\n        className: classes.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginComponent, {\n      user: user,\n      onCancel: onCancel,\n      onLogin: onLogin,\n      onSignUp: onSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserLoginView, \"085aTqcIM1+2s0LnP9qKphzR0cI=\", false, function () {\n  return [useStyles, useDispatch, useHistory, useSelector];\n});\n\n_c = UserLoginView;\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: 0,\n    right: 0,\n    top: 100,\n    maxWidth: 425,\n    maxHeight: 'auto',\n    cursor: 'pointer'\n  }\n}));\nexport default connect()(withRouter(UserLoginView));\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLoginView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/UserLoginView.js"],"names":["React","useEffect","useHistory","withRouter","connect","useDispatch","useSelector","LoginComponent","login","startLoading","stopLoading","loginReset","getUsersInfo","getUser","NotificationService","getUnseenMessages","makeStyles","UserLoginView","props","classes","useStyles","dispatch","history","user","state","id","notify","push","onLogin","username","password","onCancel","onSignUp","goToHome","logo","theme","position","marginLeft","marginRight","left","right","top","maxWidth","maxHeight","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport LoginComponent from '../components/UserLoginComponent';\nimport { login, startLoading, stopLoading, loginReset, getUsersInfo, getUser } from '../redux/actions';\nimport NotificationService from 'services/NotificationService';\nimport { getUnseenMessages } from '../redux/actions/messageActions';\nimport logo from '../images/breender.svg';\nimport { makeStyles } from '@material-ui/core';\n\n/**\n * For user login\n * @param {props} props\n */\nfunction UserLoginView(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user?.id) {\n            NotificationService.notify('success', 'Success', 'Sucessfully signed in.');\n            props.history.push('/');\n            props.dispatch(getUsersInfo(user.user.id));\n            props.dispatch(getUser(user.user.id));\n            props.dispatch(getUnseenMessages(user.user.id));\n        }\n    }, [user, props]);\n\n    const onLogin = async (username, password) => {\n        dispatch(startLoading());\n        await dispatch(login(username, password));\n        dispatch(stopLoading());\n    };\n\n    const onCancel = () => {\n        history.push('/');\n    };\n\n    const onSignUp = () => {\n        props.history.push('/register');\n    };\n\n    const goToHome = () => props.history.push('/');\n\n    return (\n        <>\n            <div onClick={goToHome}>\n                <img alt=\"logo\" src={logo} className={classes.logo} />\n            </div>\n            <LoginComponent user={user} onCancel={onCancel} onLogin={onLogin} onSignUp={onSignUp} />\n        </>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        position: 'absolute',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        left: 0,\n        right: 0,\n        top: 100,\n        maxWidth: 425,\n        maxHeight: 'auto',\n        cursor: 'pointer',\n    },\n}));\n\nexport default connect()(withRouter(UserLoginView));\n"]},"metadata":{},"sourceType":"module"}