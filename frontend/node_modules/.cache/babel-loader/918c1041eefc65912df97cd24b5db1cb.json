{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SignUpView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect, useSelector } from 'react-redux';\nimport { register, resetError } from '../redux/actions';\nimport NotificationService from 'services/NotificationService';\nimport SignUpComponent from 'components/SignUpComponent';\nimport SignUpPaper from 'components/SignUpPaper';\nimport { makeStyles } from '@material-ui/core';\nimport logo from \"../images/breender.svg\";\n/**\n * For register new users\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUpView(props) {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (user.user) {\n      NotificationService.notify('success', 'Success', 'Account was successfully created! Please check your inbox for verification link.');\n      props.history.push('/');\n    }\n\n    if (user.error) {\n      setTimeout(function () {\n        NotificationService.notify('error', 'Error', 'An error occured while creating an account. Please try again later.');\n      }, 2000); //delay function to get fresh error\n    } //reset errors when functional component unmounts\n\n\n    return () => {\n      props.dispatch(resetError());\n    };\n  }, [user, props.history]);\n\n  const onRegister = (email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod) => {\n    props.dispatch(register(email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"logo\",\n      src: logo,\n      className: classes.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SignUpPaper, {\n      user: user,\n      onRegister: onRegister,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpView, \"2F6jdXBaPjRYLYtJA8/BTcaLLWs=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = SignUpView;\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: 0,\n    right: 0,\n    top: 100,\n    maxWidth: 425,\n    maxHeight: 'auto'\n  }\n}));\nexport default connect()(withRouter(SignUpView));\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpView\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/views/SignUpView.js"],"names":["React","useEffect","withRouter","connect","useSelector","register","resetError","NotificationService","SignUpComponent","SignUpPaper","makeStyles","SignUpView","props","classes","useStyles","user","state","notify","history","push","error","setTimeout","dispatch","onRegister","email","username","password","city","province","isAdmin","subscriptionPlan","paymentPlan","paymentMethod","onCancel","logo","theme","position","marginLeft","marginRight","left","right","top","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect, useSelector } from 'react-redux';\nimport { register, resetError } from '../redux/actions';\nimport NotificationService from 'services/NotificationService';\nimport SignUpComponent from 'components/SignUpComponent';\nimport SignUpPaper from 'components/SignUpPaper';\nimport { makeStyles } from '@material-ui/core';\nimport logo from '../images/breender.svg';\n\n/**\n * For register new users\n * @param {props} props\n */\nfunction SignUpView(props) {\n    const classes = useStyles();\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user) {\n            NotificationService.notify('success', 'Success', 'Account was successfully created! Please check your inbox for verification link.');\n            props.history.push('/');\n        }\n        if (user.error) {\n            setTimeout(function() {  NotificationService.notify('error', 'Error', 'An error occured while creating an account. Please try again later.'); }, 2000); //delay function to get fresh error\n        }\n        //reset errors when functional component unmounts\n        return () => {\n            props.dispatch(resetError());\n        }\n    }, [user, props.history]);\n\n    const onRegister = (email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod) => {\n        props.dispatch(register(email, username, password, city, province, isAdmin, subscriptionPlan, paymentPlan, paymentMethod));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\nreturn (\n    <>\n        <img alt=\"logo\" src={logo} className={classes.logo} />\n        <SignUpPaper\n            user={user}\n            onRegister={onRegister}\n            onCancel={onCancel}\n        />\n    </>\n);\n}\n\nconst useStyles = makeStyles((theme) => ({\nlogo: {\n    position: 'absolute',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    left: 0,\n    right: 0,\n    top: 100,\n    maxWidth: 425,\n    maxHeight: 'auto'\n}\n}));\n\nexport default connect()(withRouter(SignUpView));\n"]},"metadata":{},"sourceType":"module"}