{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alinaturbina/Uni Projects/seba/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{NotificationService}from'services';import TransactionService from'../../services/TransactionService';var TransactionTypes={GET_TRANSACTIONS:'GET_TRANSACTIONS',DELETE_TRANSACTION:'DELETE_TRANSACTION',UPDATE_TRANSACTION:'UPDATE_TRANSACTION',CREATE_TRANSACTION:'CREATE_TRANSACTION',GET_TRANSACTION:'GET_TRANSACTION'};export var getTransactions=function getTransactions(userId){function getTransactionsAction(transactions){return{type:TransactionTypes.GET_TRANSACTIONS,transactions:transactions};}// when the backend call was failed\nfunction onFailure(error){// error handling\nNotificationService.notify('error','Transactions Error','Error while retrieving the transactions.'+error);}return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var transactions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return TransactionService.getTransactions(userId);case 3:transactions=_context.sent;// call onSuccess in context of redux\ndispatch(getTransactionsAction(transactions));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);onFailure(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getAdminTransactions=function getAdminTransactions(userId){function getTransactionsAction(transactions){return{type:TransactionTypes.GET_TRANSACTIONS,transactions:transactions};}// when the backend call was failed\nfunction onFailure(error){// error handling\nNotificationService.notify('error','Transactions Error','Error while retrieving the transactions.'+error);}return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var transactions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return TransactionService.getAdminTransactions(userId);case 3:transactions=_context2.sent;// call onSuccess in context of redux\ndispatch(getTransactionsAction(transactions));_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);onFailure(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteTransaction=function deleteTransaction(id,userId){var deleteTransactionAction=function deleteTransactionAction(transactions){return{type:TransactionTypes.DELETE_TRANSACTION,transactions:transactions};};var onFailure=function onFailure(error){NotificationService.notify('error','Transactions Error','Error while deleting a transaction.');};return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var transactions;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return TransactionService.deleteTransaction(id);case 3:_context3.next=5;return TransactionService.getTransactions(userId);case 5:transactions=_context3.sent;dispatch(deleteTransactionAction(transactions));_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);onFailure(_context3.t0);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var createTransaction=function createTransaction(transaction){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var createTransactionAction=function createTransactionAction(){onSuccess();return{type:TransactionTypes.CREATE_TRANSACTION,transaction:transaction};};var onFailure=function onFailure(err){onError(err);};return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return TransactionService.createTransaction(transaction).then(function(){dispatch(createTransactionAction());}).catch(function(e){onFailure(e);});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updateTransaction=function updateTransaction(transactionForUpdate){var onSuccess=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return null;};var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(err){return null;};var updateTransactionAction=function updateTransactionAction(transaction){onSuccess();return{type:TransactionTypes.UPDATE_TRANSACTION,transaction:transaction};};var onFailure=function onFailure(error){onError();};return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var transaction;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return TransactionService.updateTransaction(transactionForUpdate);case 3:transaction=_context5.sent;dispatch(updateTransactionAction(transaction));_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);onFailure(_context5.t0);case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var getTransaction=function getTransaction(id){var getTransactionAction=function getTransactionAction(transaction){return{type:TransactionTypes.GET_TRANSACTION,transaction:transaction};};var onFailure=function onFailure(error){NotificationService.notify('error','Transactions Error','Failed to load a transaction.');};return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var transaction;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return TransactionService.getTransaction(id);case 3:transaction=_context6.sent;dispatch(getTransactionAction(transaction));_context6.next=10;break;case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);onFailure(_context6.t0);case 10:case\"end\":return _context6.stop();}}},_callee6,null,[[0,7]]);}));return function(_x6,_x7){return _ref6.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/redux/actions/transactionActions.js"],"names":["NotificationService","TransactionService","TransactionTypes","GET_TRANSACTIONS","DELETE_TRANSACTION","UPDATE_TRANSACTION","CREATE_TRANSACTION","GET_TRANSACTION","getTransactions","userId","getTransactionsAction","transactions","type","onFailure","error","notify","dispatch","getAdminTransactions","deleteTransaction","id","deleteTransactionAction","createTransaction","transaction","onSuccess","onError","err","createTransactionAction","then","catch","e","updateTransaction","transactionForUpdate","updateTransactionAction","getTransaction","getTransactionAction","getState"],"mappings":"uUAAA,OAASA,mBAAT,KAAoC,UAApC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACrBC,gBAAgB,CAAE,kBADG,CAErBC,kBAAkB,CAAE,oBAFC,CAGrBC,kBAAkB,CAAE,oBAHC,CAIrBC,kBAAkB,CAAE,oBAJC,CAKrBC,eAAe,CAAE,iBALI,CAAzB,CAQA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAY,CACvC,QAASC,CAAAA,qBAAT,CAA+BC,YAA/B,CAA6C,CACzC,MAAO,CAAEC,IAAI,CAAEV,gBAAgB,CAACC,gBAAzB,CAA2CQ,YAAY,CAAEA,YAAzD,CAAP,CACH,CACD;AACA,QAASE,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB;AACAd,mBAAmB,CAACe,MAApB,CAA2B,OAA3B,CAAoC,oBAApC,CAA0D,2CAA8CD,KAAxG,EACH,CAED,+FAAO,iBAAOE,QAAP,yKAG0Bf,CAAAA,kBAAkB,CAACO,eAAnB,CAAmCC,MAAnC,CAH1B,QAGKE,YAHL,eAIC;AACAK,QAAQ,CAACN,qBAAqB,CAACC,YAAD,CAAtB,CAAR,CALD,+EAOCE,SAAS,aAAT,CAPD,oEAAP,+DAUH,CApBM,CAsBP,MAAO,IAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACR,MAAD,CAAY,CAC5C,QAASC,CAAAA,qBAAT,CAA+BC,YAA/B,CAA6C,CACzC,MAAO,CAAEC,IAAI,CAAEV,gBAAgB,CAACC,gBAAzB,CAA2CQ,YAAY,CAAEA,YAAzD,CAAP,CACH,CACD;AACA,QAASE,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB;AACAd,mBAAmB,CAACe,MAApB,CAA2B,OAA3B,CAAoC,oBAApC,CAA0D,2CAA8CD,KAAxG,EACH,CAED,gGAAO,kBAAOE,QAAP,+KAG0Bf,CAAAA,kBAAkB,CAACgB,oBAAnB,CAAwCR,MAAxC,CAH1B,QAGKE,YAHL,gBAIC;AACAK,QAAQ,CAACN,qBAAqB,CAACC,YAAD,CAAtB,CAAR,CALD,mFAOCE,SAAS,cAAT,CAPD,sEAAP,iEAUH,CApBM,CAsBP,MAAO,IAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,EAAD,CAAKV,MAAL,CAAgB,CAC7C,GAAMW,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACT,YAAD,CAAkB,CAC9C,MAAO,CAAEC,IAAI,CAAEV,gBAAgB,CAACE,kBAAzB,CAA6CO,YAAY,CAAEA,YAA3D,CAAP,CACH,CAFD,CAGA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBd,mBAAmB,CAACe,MAApB,CAA2B,OAA3B,CAAoC,oBAApC,CAA0D,qCAA1D,EACH,CAFD,CAIA,gGAAO,kBAAOC,QAAP,+KAEOf,CAAAA,kBAAkB,CAACiB,iBAAnB,CAAqCC,EAArC,CAFP,+BAG0BlB,CAAAA,kBAAkB,CAACO,eAAnB,CAAmCC,MAAnC,CAH1B,QAGKE,YAHL,gBAICK,QAAQ,CAACI,uBAAuB,CAACT,YAAD,CAAxB,CAAR,CAJD,mFAMCE,SAAS,cAAT,CAND,sEAAP,iEASH,CAjBM,CAmBP,MAAO,IAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,WAAD,CAAkE,IAApDC,CAAAA,SAAoD,2DAAxC,iBAAM,KAAN,EAAwC,IAA5BC,CAAAA,OAA4B,2DAAlB,SAACC,GAAD,QAAS,KAAT,EAAkB,CAC/F,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAClCH,SAAS,GACT,MAAO,CAAEX,IAAI,CAAEV,gBAAgB,CAACI,kBAAzB,CAA6CgB,WAAW,CAAEA,WAA1D,CAAP,CACH,CAHD,CAIA,GAAMT,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACY,GAAD,CAAS,CACvBD,OAAO,CAACC,GAAD,CAAP,CACH,CAFD,CAIA,gGAAO,kBAAOT,QAAP,6IACGf,CAAAA,kBAAkB,CAACoB,iBAAnB,CAAqCC,WAArC,EACDK,IADC,CACI,UAAM,CACRX,QAAQ,CAACU,uBAAuB,EAAxB,CAAR,CACH,CAHC,EAIDE,KAJC,CAIK,SAACC,CAAD,CAAO,CACVhB,SAAS,CAACgB,CAAD,CAAT,CACH,CANC,CADH,yDAAP,iEASH,CAlBM,CAoBP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,oBAAD,CAA2E,IAApDR,CAAAA,SAAoD,2DAAxC,iBAAM,KAAN,EAAwC,IAA5BC,CAAAA,OAA4B,2DAAlB,SAACC,GAAD,QAAS,KAAT,EAAkB,CACxG,GAAMO,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACV,WAAD,CAAiB,CAC7CC,SAAS,GACT,MAAO,CAAEX,IAAI,CAAEV,gBAAgB,CAACG,kBAAzB,CAA6CiB,WAAW,CAAEA,WAA1D,CAAP,CACH,CAHD,CAKA,GAAMT,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBU,OAAO,GACV,CAFD,CAIA,gGAAO,kBAAOR,QAAP,8KAEyBf,CAAAA,kBAAkB,CAAC6B,iBAAnB,CAAqCC,oBAArC,CAFzB,QAEKT,WAFL,gBAGCN,QAAQ,CAACgB,uBAAuB,CAACV,WAAD,CAAxB,CAAR,CAHD,mFAKCT,SAAS,cAAT,CALD,sEAAP,iEAQH,CAlBM,CAoBP,MAAO,IAAMoB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACd,EAAD,CAAQ,CAClC,GAAMe,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACZ,WAAD,CAAiB,CAC1C,MAAO,CAAEV,IAAI,CAAEV,gBAAgB,CAACK,eAAzB,CAA0Ce,WAAW,CAAEA,WAAvD,CAAP,CACH,CAFD,CAGA,GAAMT,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBd,mBAAmB,CAACe,MAApB,CAA2B,OAA3B,CAAoC,oBAApC,CAA0D,+BAA1D,EACH,CAFD,CAIA,gGAAO,kBAAOC,QAAP,CAAiBmB,QAAjB,8KAEyBlC,CAAAA,kBAAkB,CAACgC,cAAnB,CAAkCd,EAAlC,CAFzB,QAEKG,WAFL,gBAGCN,QAAQ,CAACkB,oBAAoB,CAACZ,WAAD,CAArB,CAAR,CAHD,mFAKCT,SAAS,cAAT,CALD,sEAAP,qEAQH,CAhBM","sourcesContent":["import { NotificationService } from 'services';\nimport TransactionService from '../../services/TransactionService';\n\nconst TransactionTypes = {\n    GET_TRANSACTIONS: 'GET_TRANSACTIONS',\n    DELETE_TRANSACTION: 'DELETE_TRANSACTION',\n    UPDATE_TRANSACTION: 'UPDATE_TRANSACTION',\n    CREATE_TRANSACTION: 'CREATE_TRANSACTION',\n    GET_TRANSACTION: 'GET_TRANSACTION',\n};\n\nexport const getTransactions = (userId) => {\n    function getTransactionsAction(transactions) {\n        return { type: TransactionTypes.GET_TRANSACTIONS, transactions: transactions };\n    }\n    // when the backend call was failed\n    function onFailure(error) {\n        // error handling\n        NotificationService.notify('error', 'Transactions Error', 'Error while retrieving the transactions.' +  error);\n    }\n\n    return async (dispatch) => {\n        try {\n            // retrieve transactions\n            let transactions = await TransactionService.getTransactions(userId);\n            // call onSuccess in context of redux\n            dispatch(getTransactionsAction(transactions));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getAdminTransactions = (userId) => {\n    function getTransactionsAction(transactions) {\n        return { type: TransactionTypes.GET_TRANSACTIONS, transactions: transactions };\n    }\n    // when the backend call was failed\n    function onFailure(error) {\n        // error handling\n        NotificationService.notify('error', 'Transactions Error', 'Error while retrieving the transactions.' +  error);\n    }\n\n    return async (dispatch) => {\n        try {\n            // retrieve transactions\n            let transactions = await TransactionService.getAdminTransactions(userId);\n            // call onSuccess in context of redux\n            dispatch(getTransactionsAction(transactions));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const deleteTransaction = (id, userId) => {\n    const deleteTransactionAction = (transactions) => {\n        return { type: TransactionTypes.DELETE_TRANSACTION, transactions: transactions };\n    };\n    const onFailure = (error) => {\n        NotificationService.notify('error', 'Transactions Error', 'Error while deleting a transaction.');\n    };\n\n    return async (dispatch) => {\n        try {\n            await TransactionService.deleteTransaction(id);\n            let transactions = await TransactionService.getTransactions(userId);\n            dispatch(deleteTransactionAction(transactions));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const createTransaction = (transaction, onSuccess = () => null, onError = (err) => null) => {\n    const createTransactionAction = () => {\n        onSuccess();\n        return { type: TransactionTypes.CREATE_TRANSACTION, transaction: transaction };\n    };\n    const onFailure = (err) => {\n        onError(err);\n    };\n\n    return async (dispatch) => {\n        await TransactionService.createTransaction(transaction)\n            .then(() => {\n                dispatch(createTransactionAction());\n            })\n            .catch((e) => {\n                onFailure(e);\n            });\n    };\n};\n\nexport const updateTransaction = (transactionForUpdate, onSuccess = () => null, onError = (err) => null) => {\n    const updateTransactionAction = (transaction) => {\n        onSuccess();\n        return { type: TransactionTypes.UPDATE_TRANSACTION, transaction: transaction };\n    };\n\n    const onFailure = (error) => {\n        onError();\n    };\n\n    return async (dispatch) => {\n        try {\n            let transaction = await TransactionService.updateTransaction(transactionForUpdate);\n            dispatch(updateTransactionAction(transaction));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n\nexport const getTransaction = (id) => {\n    const getTransactionAction = (transaction) => {\n        return { type: TransactionTypes.GET_TRANSACTION, transaction: transaction };\n    };\n    const onFailure = (error) => {\n        NotificationService.notify('error', 'Transactions Error', 'Failed to load a transaction.');\n    };\n\n    return async (dispatch, getState) => {\n        try {\n            let transaction = await TransactionService.getTransaction(id);\n            dispatch(getTransactionAction(transaction));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}