{"ast":null,"code":"import React,{useEffect,useState}from'react';import{makeStyles}from'@material-ui/core/styles';import{withRouter}from'react-router-dom';import{getReviewsOnUser,getTransactions,getUsersInfo,logout}from'../redux/actions';import{Menu,MenuItem,Avatar,Divider,Typography}from'@material-ui/core';import{connect,useSelector}from'react-redux';import ExitToAppIcon from'@material-ui/icons/ExitToApp';import VerifiedUserIcon from'@material-ui/icons/VerifiedUser';import{useUser}from'helper/hooks/auth.hooks';import SecurityIcon from'@material-ui/icons/Security';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCrown}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{menuitem:{display:'flex',minWidth:'200px'},icon:{marginRight:theme.spacing(1),color:theme.palette.secondary.main},avatar:{background:theme.palette.secondary.main},margin:{marginRight:theme.spacing(1)}};});/**\n * Menu for user managment\n * @param {props} props\n */function KebabMenu(props){var classes=useStyles();// return the currnetly logged in user from redux store\nvar user=useUser();var userInfo=useSelector(function(state){return state.user.userInfo;});useEffect(function(){if(user&&!userInfo){props.dispatch(getUsersInfo(user.id));}},[user,userInfo]);var onClickLogin=function onClickLogin(){// close this menu\nprops.onClose();// navigate to the login page\nprops.history.push('/login');};var onClickLogout=function onClickLogout(){// trigger redux logout action\nprops.dispatch(logout());// close this menu\nprops.onClose();// navigate to the home page\nprops.history.push('/login');};var onClickGoToUserProfile=function onClickGoToUserProfile(){props.dispatch(getReviewsOnUser(user.id));props.history.push('/user');// close this menu\nprops.onClose();};var onClickMyTransactions=function onClickMyTransactions(id){props.dispatch(getTransactions(id));props.history.push('/transactions');// close this menu\nprops.onClose();};return/*#__PURE__*/_jsx(Menu,{open:props.open,anchorEl:props.anchor,onClose:props.onClose,getContentAnchorEl:null,anchorOrigin:{vertical:'bottom',horizontal:'right'},children:userInfo?[/*#__PURE__*/_jsxs(MenuItem,{className:classes.menuitem,onClick:onClickGoToUserProfile,children:[/*#__PURE__*/_jsx(Avatar,{className:classes.avatar,children:/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:user.username?user.username[0]:''})}),/*#__PURE__*/_jsx(\"div\",{style:{padding:'10px'},children:userInfo.username}),userInfo.role==='admin'?/*#__PURE__*/_jsx(SecurityIcon,{className:classes.icon}):userInfo.subscriptionPlan==='premium'?/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCrown,size:'lg',className:classes.icon}):/*#__PURE__*/_jsx(_Fragment,{})]},\"user\"),/*#__PURE__*/_jsx(Divider,{},\"divider\"),/*#__PURE__*/_jsx(MenuItem,{onClick:function onClick(){return onClickMyTransactions(user.id);},className:classes.menuitem,children:\"My transactions\"},\"transactions\"),/*#__PURE__*/_jsx(Divider,{},\"divider2\"),/*#__PURE__*/_jsxs(MenuItem,{onClick:onClickLogout,className:classes.menuitem,children:[/*#__PURE__*/_jsx(ExitToAppIcon,{className:classes.margin}),\"Logout\"]},\"logout\")]:[/*#__PURE__*/_jsxs(MenuItem,{onClick:onClickLogin,className:classes.menuitem,children:[/*#__PURE__*/_jsx(VerifiedUserIcon,{color:\"primary\",className:classes.margin}),\"Login\"]},\"login\")]});}// attributes of props and their type\nexport default connect()(withRouter(KebabMenu));","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/KebabMenu.js"],"names":["React","useEffect","useState","makeStyles","withRouter","getReviewsOnUser","getTransactions","getUsersInfo","logout","Menu","MenuItem","Avatar","Divider","Typography","connect","useSelector","ExitToAppIcon","VerifiedUserIcon","useUser","SecurityIcon","FontAwesomeIcon","faCrown","useStyles","theme","menuitem","display","minWidth","icon","marginRight","spacing","color","palette","secondary","main","avatar","background","margin","KebabMenu","props","classes","user","userInfo","state","dispatch","id","onClickLogin","onClose","history","push","onClickLogout","onClickGoToUserProfile","onClickMyTransactions","open","anchor","vertical","horizontal","username","padding","role","subscriptionPlan"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getReviewsOnUser, getTransactions, getUsersInfo, logout } from '../redux/actions';\nimport { Menu, MenuItem, Avatar, Divider, Typography } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport { useUser } from 'helper/hooks/auth.hooks';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: 'flex',\n        minWidth: '200px',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n    },\n    avatar: {\n        background: theme.palette.secondary.main,\n    },\n    margin: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n    // return the currnetly logged in user from redux store\n\n    const user = useUser();\n    const userInfo = useSelector((state) => state.user.userInfo);\n\n    useEffect(() => {\n        if (user && !userInfo) {\n            props.dispatch(getUsersInfo(user.id));\n        }\n    }, [user, userInfo]);\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push('/login');\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push('/login');\n    };\n\n    const onClickGoToUserProfile = () => {\n        props.dispatch(getReviewsOnUser(user.id));\n        props.history.push('/user');\n        // close this menu\n        props.onClose();\n    };\n\n    const onClickMyTransactions = (id) => {\n        props.dispatch(getTransactions(id));\n        props.history.push('/transactions');\n        // close this menu\n        props.onClose();\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            {userInfo\n                ? [\n                      <MenuItem key=\"user\" className={classes.menuitem} onClick={onClickGoToUserProfile}>\n                          <Avatar className={classes.avatar}>\n                              <Typography color=\"textSecondary\">{user.username ? user.username[0] : ''}</Typography>\n                          </Avatar>\n                          <div style={{ padding: '10px' }}>{userInfo.username}</div>\n                          {userInfo.role === 'admin' ? (\n                              <SecurityIcon className={classes.icon} />\n                          ) : userInfo.subscriptionPlan === 'premium' ? (\n                              <FontAwesomeIcon icon={faCrown} size={'lg'} className={classes.icon} />\n                          ) : (\n                              <></>\n                          )}\n                      </MenuItem>,\n                      <Divider key=\"divider\" />,\n                      <MenuItem key=\"transactions\" onClick={() => onClickMyTransactions(user.id)} className={classes.menuitem}>\n                          My transactions\n                      </MenuItem>,\n                      <Divider key=\"divider2\" />,\n                      <MenuItem key=\"logout\" onClick={onClickLogout} className={classes.menuitem}>\n                          <ExitToAppIcon className={classes.margin} />\n                          Logout\n                      </MenuItem>,\n                  ]\n                : [\n                      <MenuItem key=\"login\" onClick={onClickLogin} className={classes.menuitem}>\n                          <VerifiedUserIcon color=\"primary\" className={classes.margin} />\n                          Login\n                      </MenuItem>,\n                  ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}