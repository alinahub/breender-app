{"ast":null,"code":"export const getAgeString = age => {\n  const years = Math.floor(age);\n  const months = Math.round(Number((age - Math.floor(age)).toFixed(2)) * 12);\n  let weeks = 0;\n  let yearString = '';\n  let monthString = '';\n\n  if (years === 1) {\n    yearString = `${years} year`;\n  } else if (years > 1) {\n    yearString = `${years} years`;\n  }\n\n  if (months === 1) {\n    monthString = `${months} month`;\n  } else if (months > 1) {\n    monthString = `${months} months`;\n  } // edge case\n\n\n  if (months === 0 && years === 0) {\n    weeks = Math.round(Number((age - Math.floor(age)).toFixed(2)) * 12 * 4);\n\n    if (weeks === 0) {\n      return '1 week old';\n    } else {\n      return `${weeks} weeks old`;\n    }\n  }\n\n  return `${yearString} ${monthString} old`;\n};\nexport const getUser = () => {\n  if (window.localStorage['jwtToken']) {\n    let token = window.localStorage['jwtToken'];\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace('-', '+').replace('_', '/');\n    let userJson = JSON.parse(window.atob(base64)); // if token is expired delete it and return { isAuthenticated: false }\n    // --> User is not logged in anymore.\n\n    const expirationTime = userJson.exp * 1000 - 60000;\n\n    if (Date.now() >= expirationTime) {\n      window.localStorage.removeItem('jwtToken');\n      console.log(userJson.exp * 1000, Date.now());\n      return {\n        isAuthenticated: false\n      };\n    }\n\n    return {\n      isAuthenticated: true,\n      user: {\n        id: userJson._id,\n        username: userJson.username,\n        role: userJson.role\n      }\n    };\n  }\n\n  return {};\n};\nexport const isObjEmpty = obj => Object.keys(obj).length === 0;","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/helper/helpers.js"],"names":["getAgeString","age","years","Math","floor","months","round","Number","toFixed","weeks","yearString","monthString","getUser","window","localStorage","token","base64Url","split","base64","replace","userJson","JSON","parse","atob","expirationTime","exp","Date","now","removeItem","console","log","isAuthenticated","user","id","_id","username","role","isObjEmpty","obj","Object","keys","length"],"mappings":"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","sourcesContent":["export const getAgeString = (age) => {\n    const years = Math.floor(age);\n    const months = Math.round(Number((age - Math.floor(age)).toFixed(2)) * 12);\n    let weeks = 0;\n\n    let yearString = '';\n    let monthString = '';\n\n    if (years === 1) {\n        yearString = `${years} year`;\n    } else if (years > 1) {\n        yearString = `${years} years`;\n    }\n\n    if (months === 1) {\n        monthString = `${months} month`;\n    } else if (months > 1) {\n        monthString = `${months} months`;\n    }\n\n    // edge case\n    if (months === 0 && years === 0) {\n        weeks = Math.round(Number((age - Math.floor(age)).toFixed(2)) * 12 * 4);\n        if (weeks === 0) {\n            return '1 week old';\n        } else {\n            return `${weeks} weeks old`;\n        }\n    }\n\n    return `${yearString} ${monthString} old`;\n};\n\nexport  const getUser = () => {\n    if (window.localStorage['jwtToken']) {\n        let token = window.localStorage['jwtToken'];\n        let base64Url = token.split('.')[1];\n        let base64 = base64Url.replace('-', '+').replace('_', '/');\n        let userJson = JSON.parse(window.atob(base64));\n        // if token is expired delete it and return { isAuthenticated: false }\n        // --> User is not logged in anymore.\n        const expirationTime = (userJson.exp * 1000) - 60000\n        if (Date.now() >= expirationTime) {\n            window.localStorage.removeItem('jwtToken');\n            console.log(userJson.exp * 1000, Date.now())\n            return { isAuthenticated: false };\n        }\n        return {\n            isAuthenticated: true,\n            user: {\n                id: userJson._id,\n                username: userJson.username,\n                role: userJson.role,\n            },\n        };\n    }\n    return {};\n};\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;"]},"metadata":{},"sourceType":"module"}