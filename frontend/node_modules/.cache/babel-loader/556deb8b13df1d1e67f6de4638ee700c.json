{"ast":null,"code":"var _jsxFileName = \"/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PaymentStepper.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport StepperInformation from './StepperInformation';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\nimport PaymentResultComponent from './PaymentResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS_TYPE = {\n  SUCCESS: 'success',\n  ERROR: 'error'\n};\n\nconst PaymentStepper = ({\n  pet,\n  close\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [isPayed, setIsPayed] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState('none');\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['Confirm general information', 'Confirm payment', 'Finish'];\n  const loggedInUser = useLoggedInUser();\n  const isFreeOfCharge = loggedInUser.subscriptionPlan === 'premium' && pet.price === 0; // premium user don't need to pay any fees for the free pet\n\n  const isButtonDisabled = !isPayed && activeStep === 1 && !isFreeOfCharge;\n  useEffect(() => {\n    if (isPayed) {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  }, [isPayed]);\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1) {\n      close();\n      setActiveStep(0);\n    } else {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const getStepContent = stepIndex => {\n    switch (stepIndex) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(StepperInformation, {\n          pet: pet,\n          loggedInUser: loggedInUser,\n          step: 0,\n          setIsPayed: setIsPayed,\n          isFreeOfCharge: isFreeOfCharge,\n          setPaymentStatus: setPaymentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(StepperInformation, {\n          pet: pet,\n          loggedInUser: loggedInUser,\n          step: 1,\n          setIsPayed: setIsPayed,\n          isFreeOfCharge: isFreeOfCharge,\n          setPaymentStatus: setPaymentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(PaymentResultComponent, {\n          status: paymentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return 'Unknown stepIndex';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      connector: /*#__PURE__*/_jsxDEV(AlternativeConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 74\n      }, this),\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconComponent: StepIcon,\n            ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0 || activeStep === 2,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isButtonDisabled,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n/**\n * This function are used for the alternative styling of the stepper.\n */\n\n\n_s(PaymentStepper, \"E6gbDn0/qBWJY/NFLBT6UjGyd7A=\", false, function () {\n  return [useStyles, useLoggedInUser];\n});\n\n_c = PaymentStepper;\nconst AlternativeConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#D37F65'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#D37F65'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 2,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#D37F65'\n  },\n  circle: {\n    width: 12,\n    height: 12,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#D37F65',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction StepIcon(props) {\n  _s2();\n\n  const classes = useStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    children: completed ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 68\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(StepIcon, \"0qRSEY3fD9fMcAZ3ibczG4IV00w=\", false, function () {\n  return [useStepIconStyles];\n});\n\n_c2 = StepIcon;\nStepIcon.propTypes = {\n  active: PropTypes.bool,\n  // Whether this step is active.\n  completed: PropTypes.bool // Mark the step as completed. Is passed to child components.\n\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default PaymentStepper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaymentStepper\");\n$RefreshReg$(_c2, \"StepIcon\");","map":{"version":3,"sources":["/Users/alinaturbina/Uni Projects/seba/frontend/src/components/transactions/PaymentStepper.js"],"names":["React","useEffect","useState","makeStyles","withStyles","Stepper","Step","StepLabel","Button","Typography","StepConnector","Check","clsx","PropTypes","StepperInformation","useLoggedInUser","PaymentResultComponent","STATUS_TYPE","SUCCESS","ERROR","PaymentStepper","pet","close","classes","useStyles","isPayed","setIsPayed","paymentStatus","setPaymentStatus","activeStep","setActiveStep","steps","loggedInUser","isFreeOfCharge","subscriptionPlan","price","isButtonDisabled","prevActiveStep","handleNext","length","handleBack","getStepContent","stepIndex","root","map","label","index","stepProps","labelProps","StepIcon","button","AlternativeConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useStepIconStyles","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","props","propTypes","bool","theme","marginTop","spacing","marginRight"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,sBAAP,MAAmC,iBAAnC;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,SADO;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAApB;;AAKA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAAA;;AACvC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,MAAD,CAAlD;AAEA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM6B,KAAK,GAAG,CAAC,6BAAD,EAAgC,iBAAhC,EAAmD,QAAnD,CAAd;AACA,QAAMC,YAAY,GAAGjB,eAAe,EAApC;AAEA,QAAMkB,cAAc,GAAGD,YAAY,CAACE,gBAAb,KAAkC,SAAlC,IAA+Cb,GAAG,CAACc,KAAJ,KAAc,CAApF,CAVuC,CAUgD;;AACvF,QAAMC,gBAAgB,GAAG,CAACX,OAAD,IAAYI,UAAU,KAAK,CAA3B,IAAgC,CAACI,cAA1D;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,OAAJ,EAAa;AACTK,MAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH;AACJ,GAJQ,EAIN,CAACZ,OAAD,CAJM,CAAT;;AAMA,QAAMa,UAAU,GAAG,MAAM;AACrB,QAAIT,UAAU,KAAKE,KAAK,CAACQ,MAAN,GAAe,CAAlC,EAAqC;AACjCjB,MAAAA,KAAK;AACLQ,MAAAA,aAAa,CAAC,CAAD,CAAb;AACH,KAHD,MAGO;AACHA,MAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH;AACJ,GAPD;;AASA,QAAMG,UAAU,GAAG,MAAM;AACrBV,IAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAIC,SAAD,IAAe;AAClC,YAAQA,SAAR;AACI,WAAK,CAAL;AACI,4BAAO,QAAC,kBAAD;AAAoB,UAAA,GAAG,EAAErB,GAAzB;AAA8B,UAAA,YAAY,EAAEW,YAA5C;AAA0D,UAAA,IAAI,EAAE,CAAhE;AAAmE,UAAA,UAAU,EAAEN,UAA/E;AAA2F,UAAA,cAAc,EAAEO,cAA3G;AAA2H,UAAA,gBAAgB,EAAEL;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,CAAL;AACI,4BAAO,QAAC,kBAAD;AAAoB,UAAA,GAAG,EAAEP,GAAzB;AAA8B,UAAA,YAAY,EAAEW,YAA5C;AAA0D,UAAA,IAAI,EAAE,CAAhE;AAAmE,UAAA,UAAU,EAAEN,UAA/E;AAA2F,UAAA,cAAc,EAAEO,cAA3G;AAA2H,UAAA,gBAAgB,EAAEL;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,CAAL;AACI,4BAAO,QAAC,sBAAD;AAAwB,UAAA,MAAM,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ;AACI,eAAO,mBAAP;AARR;AAUH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACoB,IAAxB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,gBAAgB,MAAzB;AAA0B,MAAA,UAAU,EAAEd,UAAtC;AAAkD,MAAA,SAAS,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAA7D;AAAA,gBACKE,KAAK,CAACa,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzB,cAAMC,SAAS,GAAG,EAAlB;AACA,cAAMC,UAAU,GAAG,EAAnB;AACA,4BACI,QAAC,IAAD,OAAsBD,SAAtB;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,iBAAiB,EAAEE,QAA9B;AAAA,eAA4CD,UAA5C;AAAA,sBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,WAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA,gBACKhB,UAAU,KAAKE,KAAK,CAACQ,MAArB,GAA8B,IAA9B,gBACG;AAAA,mBACKE,cAAc,CAACZ,UAAD,CADnB,eAEI;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEA,UAAU,KAAK,CAAf,IAAoBA,UAAU,KAAK,CAArD;AAAwD,YAAA,OAAO,EAAEW,UAAjE;AAA6E,YAAA,SAAS,EAAEjB,OAAO,CAAC2B,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEd,gBAAlB;AAAoC,YAAA,OAAO,EAAC,WAA5C;AAAwD,YAAA,KAAK,EAAC,SAA9D;AAAwE,YAAA,OAAO,EAAEE,UAAjF;AAA6F,YAAA,SAAS,EAAEf,OAAO,CAAC2B,MAAhH;AAAA,sBACKrB,UAAU,KAAKE,KAAK,CAACQ,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C;AADlD;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA7ED;AA+EA;AACA;AACA;;;GAjFMnB,c;UACcI,S,EAOKT,e;;;KARnBK,c;AAkFN,MAAM+B,oBAAoB,GAAG/C,UAAU,CAAC;AACpCgD,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,GAAG,EAAE,EADS;AAEdC,IAAAA,IAAI,EAAE,mBAFQ;AAGdC,IAAAA,KAAK,EAAE;AAHO,GADkB;AAMpCC,EAAAA,MAAM,EAAE;AACJ,eAAW;AACPC,MAAAA,WAAW,EAAE;AADN;AADP,GAN4B;AAWpCC,EAAAA,SAAS,EAAE;AACP,eAAW;AACPD,MAAAA,WAAW,EAAE;AADN;AADJ,GAXyB;AAgBpCE,EAAAA,IAAI,EAAE;AACFF,IAAAA,WAAW,EAAE,SADX;AAEFG,IAAAA,cAAc,EAAE,CAFd;AAGFC,IAAAA,YAAY,EAAE;AAHZ;AAhB8B,CAAD,CAAV,CAqB1BnD,aArB0B,CAA7B;AAuBA,MAAMoD,iBAAiB,GAAG3D,UAAU,CAAC;AACjCwC,EAAAA,IAAI,EAAE;AACFoB,IAAAA,KAAK,EAAE,SADL;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFC,IAAAA,MAAM,EAAE,EAHN;AAIFC,IAAAA,UAAU,EAAE;AAJV,GAD2B;AAOjCV,EAAAA,MAAM,EAAE;AACJO,IAAAA,KAAK,EAAE;AADH,GAPyB;AAUjCI,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJH,IAAAA,MAAM,EAAE,EAFJ;AAGJJ,IAAAA,YAAY,EAAE,KAHV;AAIJQ,IAAAA,eAAe,EAAE;AAJb,GAVyB;AAgBjCX,EAAAA,SAAS,EAAE;AACPK,IAAAA,KAAK,EAAE,SADA;AAEPO,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AAhBsB,CAAD,CAApC;;AAuBA,SAAStB,QAAT,CAAkBuB,KAAlB,EAAyB;AAAA;;AACrB,QAAMjD,OAAO,GAAGuC,iBAAiB,EAAjC;AACA,QAAM;AAAEN,IAAAA,MAAF;AAAUE,IAAAA;AAAV,MAAwBc,KAA9B;AAEA,sBACI;AACI,IAAA,SAAS,EAAE5D,IAAI,CAACW,OAAO,CAACoB,IAAT,EAAe;AAC1B,OAACpB,OAAO,CAACiC,MAAT,GAAkBA;AADQ,KAAf,CADnB;AAAA,cAKKE,SAAS,gBAAG,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEnC,OAAO,CAACmC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA6C;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAAC4C;AAAxB;AAAA;AAAA;AAAA;AAAA;AAL3D;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;IAbQlB,Q;UACWa,iB;;;MADXb,Q;AAeTA,QAAQ,CAACwB,SAAT,GAAqB;AACjBjB,EAAAA,MAAM,EAAE3C,SAAS,CAAC6D,IADD;AACO;AACxBhB,EAAAA,SAAS,EAAE7C,SAAS,CAAC6D,IAFJ,CAEU;;AAFV,CAArB;AAKA,MAAMlD,SAAS,GAAGrB,UAAU,CAAEwE,KAAD,KAAY;AACrChC,EAAAA,IAAI,EAAE;AACFyB,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrClB,EAAAA,MAAM,EAAE;AACJ0B,IAAAA,SAAS,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd,CADP;AAEJC,IAAAA,WAAW,EAAEH,KAAK,CAACE,OAAN,CAAc,CAAd;AAFT;AAJ6B,CAAZ,CAAD,CAA5B;AAUA,eAAezD,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { Check } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport StepperInformation from './StepperInformation';\nimport { useLoggedInUser } from 'helper/hooks/auth.hooks';\nimport PaymentResultComponent from './PaymentResult';\n\nconst STATUS_TYPE = {\n    SUCCESS: 'success',\n    ERROR: 'error',\n};\n\nconst PaymentStepper = ({ pet, close }) => {\n    const classes = useStyles();\n    const [isPayed, setIsPayed] = useState(false);\n    const [paymentStatus, setPaymentStatus] = useState('none');\n\n    const [activeStep, setActiveStep] = useState(0);\n\n    const steps = ['Confirm general information', 'Confirm payment', 'Finish'];\n    const loggedInUser = useLoggedInUser();\n\n    const isFreeOfCharge = loggedInUser.subscriptionPlan === 'premium' && pet.price === 0; // premium user don't need to pay any fees for the free pet\n    const isButtonDisabled = !isPayed && activeStep === 1 && !isFreeOfCharge;\n\n    useEffect(() => {\n        if (isPayed) {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    }, [isPayed]);\n\n    const handleNext = () => {\n        if (activeStep === steps.length - 1) {\n            close();\n            setActiveStep(0);\n        } else {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const getStepContent = (stepIndex) => {\n        switch (stepIndex) {\n            case 0:\n                return <StepperInformation pet={pet} loggedInUser={loggedInUser} step={0} setIsPayed={setIsPayed} isFreeOfCharge={isFreeOfCharge} setPaymentStatus={setPaymentStatus} />;\n            case 1:\n                return <StepperInformation pet={pet} loggedInUser={loggedInUser} step={1} setIsPayed={setIsPayed} isFreeOfCharge={isFreeOfCharge} setPaymentStatus={setPaymentStatus} />;\n            case 2:\n                return <PaymentResultComponent status={paymentStatus} />;\n            default:\n                return 'Unknown stepIndex';\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep} connector={<AlternativeConnector />}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel StepIconComponent={StepIcon} {...labelProps}>\n                                {label}\n                            </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? null : (\n                    <div>\n                        {getStepContent(activeStep)}\n                        <div>\n                            <Button disabled={activeStep === 0 || activeStep === 2} onClick={handleBack} className={classes.button}>\n                                Back\n                            </Button>\n                            <Button disabled={isButtonDisabled} variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\n/**\n * This function are used for the alternative styling of the stepper.\n */\nconst AlternativeConnector = withStyles({\n    alternativeLabel: {\n        top: 10,\n        left: 'calc(-50% + 16px)',\n        right: 'calc(50% + 16px)',\n    },\n    active: {\n        '& $line': {\n            borderColor: '#D37F65',\n        },\n    },\n    completed: {\n        '& $line': {\n            borderColor: '#D37F65',\n        },\n    },\n    line: {\n        borderColor: '#eaeaf0',\n        borderTopWidth: 2,\n        borderRadius: 1,\n    },\n})(StepConnector);\n\nconst useStepIconStyles = makeStyles({\n    root: {\n        color: '#eaeaf0',\n        display: 'flex',\n        height: 22,\n        alignItems: 'center',\n    },\n    active: {\n        color: '#D37F65',\n    },\n    circle: {\n        width: 12,\n        height: 12,\n        borderRadius: '50%',\n        backgroundColor: 'currentColor',\n    },\n    completed: {\n        color: '#D37F65',\n        zIndex: 1,\n        fontSize: 18,\n    },\n});\n\nfunction StepIcon(props) {\n    const classes = useStepIconStyles();\n    const { active, completed } = props;\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n            })}\n        >\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n        </div>\n    );\n}\n\nStepIcon.propTypes = {\n    active: PropTypes.bool, // Whether this step is active.\n    completed: PropTypes.bool, // Mark the step as completed. Is passed to child components.\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(5),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default PaymentStepper;\n"]},"metadata":{},"sourceType":"module"}